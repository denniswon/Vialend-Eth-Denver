#v0.1.0 实现了deposit and withdraw functions
#v0.1.1 更新了 deposit ， withdraw。 测试了withdrawall 功能。 
#v0.1.2 实现了 add、remove position by calling rebalance


new solc methods:
    1. bonus token (temp test method, maybe removed later) give out team token to user who makes deposit.  1:1 ttoken give out to the user. 
    2. rebalance


------ more to read ---------- 

off chain rebalance caller ：
 rebalance parameters:
	int24 newLower,
        int24 newUpper,
        bool zeroForOne,    
        int256 swapAmount,
        int160 sqrtPriceLimitX96    
 
   doRebalance
	1. enquiry vault.balance0 vault.balance1,
	2. enquiry pool.poolToken0, pool.poolToken1
	3. accumulate allToken0 = (balance0+poolToken0) , allToken1
	3. enquiry currentPrice (hard coded for now)
	4.  zeroForOne := allToken0/currentPrice > allToken1 ? true:false
	5.  sqrtPriceLimitX96 = currentPrice +- offset
	6. swapAmount = abs ( allToken0/currentPrice - allToken1 ) /2
	7. newLower, newUpper (hard coded for now)
	
token0 tUSDC 
token1 tWETH
Current price: 6.28519 tUSDC per tWETH

if totalToken0 > ( totalToken1 *cPrice )
	zeroForOne = true  (swap token 0 to token 1 )
	swapAmount =  ( totalToken0 - totalToken1*cPrice ) /2
else 
	zeroForOne = false (swap token1 to token0 )
	swapAmount =   ( totalToken1 - totalToken0/cPrice ) / 2

totalToken0 = 
swapAmount = ( totalToken0 /cPrice - totalToken1 ) > 

sqrtPriceLimitX96 = 6.44  ??? test to be sure

vault address: 
0x5eae64b5a18225322d85370691899959d4a1B10E (old)
0xC38914AB1541c56228c70e1d3bBBcdaFB23154D6 (add inttostr display tick, error upper < tick, tick = 18382)
0x1B828804C8D4F68DBA0512FBEa405fE6b825e40F (display upper, lower and tick, error SPL)
0x9eC4C28B8121147F8610D1D6A64C61210A2cFF63 (check spl value  (uint160 sqrtPriceX96, int24 tick, , , , , ) = pool.slot0(); 198627175600412196607366034177 )
 tx :  0xd4facd19187cb1e9ec06bfa4c1638bc229fbf503707e48a33e385c819de55340 
0x9656623eBc951745bd4df41F3608e9CBdAA9F656 (use new sqrtPriceX96 value , zeroForOne=-1, make sqrtPriceLimitX96 > 198627175600412196607366034177, failed with no error hint.)
	tx 0x3d64a8e5e627e82a8866cca44da823d42116cad7ba25a7a8cc958bad70910c05 

0xDbab59c24378980099dddf4C80aFbCB60128fEab ( try catch error)
0x89b993b012620aFd6dcDea04402C6BdE9c8F173f( try catch error, fail, error not catched.)
0x3135ceF169C3c072f0AAc50A2018914B45ACaA8f (remove try catch, require false to debug, _position no error)
 	tx: 0x95383514ec14ae221d0afc8867d0ee83f70adf5320e23f4e9fdb2c4d1193ae51 
0xb4A5ff3237b53d8E49cE89Ea54B60bF914a90F92  (check _burnandcollect, no error)
0xd7B874B0Ecd3648E9Cb5d9fdE098843eBcE3DBDc (check more down)
0xfFC6213f46FF3Cb0b492ad42E67f827BD0987ff6  (blance0,1 no error)
0xC2C4817C750773A48924e76b90EAf14d248B3062  (comment out swap,only do min liquidity)
0x20D499c33C01514C1E55Dc8c12dc97a839c33364  (get  liquidityforamount ; 2919864570426357838)
0x126684da9Aa48b701E626aF48311d5c83534a507  (mint with new liquidity and newrange 18300 - 18360)

(without rebalance)
0xe49d3eCE08256C3e2a3e74D261a862B116aBDdcE 
  (added condition to check balanceOf ttoken of the vault before sending to user.)
  

contract methods: (see go test file for testing)
    collectProtocol  (amount0, amount1, to)
		success - vault collected 0.1 fee 
		tx: 0x9459db55470e1f8f7750aa3bb18256113e178ddcbb168a34bb09a213bdaa7ac9 

		Test points:
			1. use 2nd account to deposit some tokens 
			2. use the governance account to take 0.1 fees from vaults (should success)
			3. try to use non-governance account to take fee from vaults (should fail)	


test files:
 ./test/testFundkeeper.go
 ./test/event/testFundkeeperEvent.go


contract abi 
../build/fundkeeper.abi

the go package file generated by abigen. including all functions.
../deploy/fundkeeper/fundkeeper.go


pool address  (on goerli)
0xBF93aB266Cd9235DaDE543fAd2EeC884D1cCFc0c

token address: (on goerli)
tUSDC  
0xFA5dF5372c03D4968d128D624e3Afeb61031a777

tWETH 
0x3fF5E22B4be645EF1CCc8C6e32EDe6b35c569AE4


