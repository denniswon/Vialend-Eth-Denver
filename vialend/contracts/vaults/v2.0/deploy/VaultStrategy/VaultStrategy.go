// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address[11]\",\"name\":\"_contracts\",\"type\":\"address[11]\"},{\"internalType\":\"uint8\",\"name\":\"_uniPortion\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_compPortion\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_protocolFee\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"_feetier\",\"type\":\"uint24\"},{\"internalType\":\"uint128\",\"name\":\"_quoamount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"BurnUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"MintUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"VaultWithdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"U3Fees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"U3Fees1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LcFees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LcFees1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AccruedProtocolFees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AccruedProtocolFees1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNIV3_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_CETH\",\"outputs\":[{\"internalType\":\"contractICEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WETH\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cHigh\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cLow\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curComp0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curComp1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decenter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"redeemType\",\"type\":\"bool\"}],\"name\":\"emergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getQuoteAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTwap\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getUniAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"individualCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoamount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"}],\"name\":\"rebalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ratio\",\"type\":\"uint8\"}],\"name\":\"setCompPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ratio\",\"type\":\"uint8\"}],\"name\":\"setUniPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"setprotocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"vaultWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x6101806040526013805460ff191690553480156200001c57600080fd5b50604051620050ff380380620050ff8339810160408190526200003f91620004fe565b60016000556101408601516001600160a01b039081166080528651600c80549183166001600160a01b0319928316179055602080890151600b80549185169190931617909155610120880151821660a05260c088015160e089015160408051630b4c774160e11b815292851660048401529316602482015262ffffff851660448201529151731f98431c8ad98523631ae4a59f267346ea31f98492631698ee829260648083019391928290030181865afa15801562000102573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001289190620005eb565b6001600160a01b031661014081905260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa15801562000173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001999190620005eb565b6001600160a01b031660e0816001600160a01b031681525050610140516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021a9190620005eb565b6001600160a01b03166101005285600760200201516001600160a01b031660e0516001600160a01b03161415620002a35760a086015160e0516001600160a01b039081166000908152600e602052604080822080546001600160a01b031990811695851695909517905560808a01516101005184168352912080549093169116179055620002f6565b608086015160e0516001600160a01b039081166000908152600e602052604080822080546001600160a01b031990811695851695909517905560a08a015161010051841683529120805490931691161790555b6040808701516001600160a01b0390811660c05260608801518116610120526101405182516334324e9f60e21b8152925191169163d0c93a7c9160048083019260209291908290030181865afa15801562000355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037b919062000610565b600c805466ffffffffffffff60b81b1916600160d81b62ffffff939093169290920263ffffffff60b81b191691909117600160b91b179055600d805462ffffff60301b1916674e200000000000001790556001600160801b038116610160526064620003e8858762000635565b60ff1611156200043e5760405162461bcd60e51b815260206004820152601360248201527f706f7274696f6e20756e692b636f6d3e31303000000000000000000000000000604482015260640160405180910390fd5b5050600c805461ffff60a01b1916600160a01b60ff9586160260ff60a81b191617600160a81b938516939093029290921760ff60b01b1916600160b01b91909316029190911790555062000669565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620004bb57600080fd5b919050565b805160ff81168114620004bb57600080fd5b805162ffffff81168114620004bb57600080fd5b80516001600160801b0381168114620004bb57600080fd5b60008060008060008061020087890312156200051957600080fd5b87601f8801126200052957600080fd5b6040516101608082016001600160401b03811183821017156200055057620005506200048d565b6040528801818a8211156200056457600080fd5b895b8281101562000589576200057a81620004a3565b82526020918201910162000566565b50508197506200059981620004c0565b96505050620005ac6101808801620004c0565b9350620005bd6101a08801620004c0565b9250620005ce6101c08801620004d2565b9150620005df6101e08801620004e6565b90509295509295509295565b600060208284031215620005fe57600080fd5b6200060982620004a3565b9392505050565b6000602082840312156200062357600080fd5b81518060020b81146200060957600080fd5b600060ff821660ff84168060ff038211156200066157634e487b7160e01b600052601160045260246000fd5b019392505050565b60805160a05160c05160e0516101005161012051610140516101605161488c6200087360003960008181610341015261185c01526000818161030d01528181610e92015281816112dc0152818161136101528181611b6d01528181611c4601528181611d3e0152818161286c015281816128fa01528181612e3001528181612f1e0152818161393b01526139cc01526000818161038d0152818161301f0152818161331401526133b40152600081816107b3015281816111c8015281816114250152818161152f015281816115ac01528181611758015281816118220152818161189e01528181611ab201528181611c0001528181611ee101528181611fa40152818161204701528181612a55015281816136310152613b170152600081816102b901528181611186015281816113f40152818161146b015281816114e8015281816116c2015281816117e00152818161187d01528181611a3201528181611bcc01528181611eb401528181611f790152818161201d015281816129b5015281816135ff0152613a790152600081816108210152818161266b01528181612fdc0152818161374e01526137cd0152600081816108af015281816108fc015281816109a901528181610bb201528181610fc80152818161125a01526119300152600081816106fc01528181610a300152818161107f015281816115f60152611cc1015261488c6000f3fe60806040526004361061023d5760003560e01c80637c7311fe1161012d578063ccac7d8b116100b0578063d368867f11610077578063d368867f146107f5578063e0af36161461080f578063e7c7cb9114610843578063e9ee793214610867578063f851a4401461089d578063fa461e33146108d157005b8063ccac7d8b14610749578063cf8d7e251461075f578063d0c93a7c14610780578063d21220a7146107a1578063d3487997146107d557005b8063b0e21e8a116100f4578063b0e21e8a146106a9578063c433c80a146106ca578063c45a0155146106ea578063c4a7761e1461071e578063c8a746a61461073357005b80637c7311fe146106095780638ce744261461061e5780638e843c6c1461063e57806398d5fdca1461065f5780639d371c301461067457005b8063393ed075116101c05780634f82f8e1116101875780634f82f8e1146105295780635d752a9a14610549578063624a177a1461057157806371c851dd146105915780637a0ddeef146105c15780637a89cdd3146105e157005b8063393ed0751461043b5780633aaa36e61461047b5780633c1bda09146104d35780633cbff3fe146104e957806343c57a271461050957005b806317f8f9fa1161020457806317f8f9fa1461032f5780631c8941b21461037b5780632612abf8146103af57806326d89545146103cf57806331dc5b951461040857005b80630276650b1461024657806302d05d3f1461026f5780630dfe1681146102a75780630f17937c146102db57806316f0115b146102fb57005b3661024457005b005b34801561025257600080fd5b5061025c60125481565b6040519081526020015b60405180910390f35b34801561027b57600080fd5b50600b5461028f906001600160a01b031681565b6040516001600160a01b039091168152602001610266565b3480156102b357600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102e757600080fd5b506102446102f6366004613daf565b6108f1565b34801561030757600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561033b57600080fd5b506103637f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b039091168152602001610266565b34801561038757600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103bb57600080fd5b506102446103ca366004613de1565b61099e565b3480156103db57600080fd5b50600c546103f390600160b81b900463ffffffff1681565b60405163ffffffff9091168152602001610266565b34801561041457600080fd5b50600c5461042990600160a01b900460ff1681565b60405160ff9091168152602001610266565b34801561044757600080fd5b5061045b610456366004613e0d565b610a08565b604080519485526020850193909352918301526060820152608001610266565b34801561048757600080fd5b50600554600654600754600854600954600a546104a695949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610266565b3480156104df57600080fd5b5061025c60115481565b3480156104f557600080fd5b50610244610504366004613e46565b610ba7565b34801561051557600080fd5b5061025c610524366004613e78565b610c5f565b34801561053557600080fd5b5061028f610544366004613ed4565b610d6d565b34801561055557600080fd5b5061055e610da5565b60405160029190910b8152602001610266565b34801561057d57600080fd5b5061024461058c366004613daf565b610fbd565b34801561059d57600080fd5b506105b16105ac366004613ef6565b611061565b6040519015158152602001610266565b3480156105cd57600080fd5b506102446105dc366004613f39565b61124f565b3480156105ed57600080fd5b5061028f731f98431c8ad98523631ae4a59f267346ea31f98481565b34801561061557600080fd5b506102446115db565b34801561062a57600080fd5b50600c5461028f906001600160a01b031681565b34801561064a57600080fd5b50600d5461055e906301000000900460020b81565b34801561066b57600080fd5b5061025c61184d565b34801561068057600080fd5b5061069461068f366004613e0d565b6118c7565b60408051928352602083019190915201610266565b3480156106b557600080fd5b50600c5461042990600160b01b900460ff1681565b3480156106d657600080fd5b506102446106e5366004613fa9565b611925565b3480156106f657600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561072a57600080fd5b506106946119d8565b34801561073f57600080fd5b5061025c600f5481565b34801561075557600080fd5b5061025c60105481565b34801561076b57600080fd5b50600c5461042990600160a81b900460ff1681565b34801561078c57600080fd5b50600c5461055e90600160d81b900460020b81565b3480156107ad57600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107e157600080fd5b506102446107f0366004614018565b611b62565b34801561080157600080fd5b50600d5461055e9060020b81565b34801561081b57600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561084f57600080fd5b50600d5461055e906601000000000000900460020b81565b34801561087357600080fd5b5061028f610882366004613de1565b600e602052600090815260409020546001600160a01b031681565b3480156108a957600080fd5b5061028f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156108dd57600080fd5b506102446108ec366004614018565b611c3b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109425760405162461bcd60e51b81526004016109399061406b565b60405180910390fd5b60648160ff16111561097e5760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610939565b600c805460ff909216600160a81b0260ff60a81b19909216919091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e65760405162461bcd60e51b81526004016109399061406b565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516376beea2760e11b815230600482015260009081908190819081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ed7dd44e90602401602060405180830381865afa158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b919061408e565b9050600181151514610adc5760405162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b6044820152606401610939565b610ae4611c99565b50610aed611ca9565b6001600160a01b031663d0b6ba2a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b2757600080fd5b505af1158015610b3b573d6000803e3d6000fd5b50505050610b498787611d34565b6040805185815260208101859052908101839052606081018290529398509196509450925030907f90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b9060800160405180910390a25092959194509250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bef5760405162461bcd60e51b81526004016109399061406b565b60008160020b13610c355760405162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b6044820152606401610939565b600d805462ffffff90921666010000000000000268ffffff00000000000019909216919091179055565b600080610c6b86612079565b90506001600160801b036001600160a01b03821611610cf1576000610c996001600160a01b038316806140c1565b9050836001600160a01b0316856001600160a01b031610610cd157610ccc600160c01b876001600160801b031683612498565b610ce9565b610ce981876001600160801b0316600160c01b612498565b925050610d64565b6000610d106001600160a01b0383168068010000000000000000612498565b9050836001600160a01b0316856001600160a01b031610610d4857610d43600160801b876001600160801b031683612498565b610d60565b610d6081876001600160801b0316600160801b612498565b9250505b50949350505050565b60146020528160005260406000208181548110610d8957600080fd5b6000918252602090912001546001600160a01b03169150829050565b600c54600090600160b81b900463ffffffff16610ded5760405162461bcd60e51b8152600401610939906020808252600490820152630545741560e41b604082015260600190565b604080516002808252606082018352600092602083019080368337019050509050600c60179054906101000a900463ffffffff1681600081518110610e3457610e346140f6565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610e6357610e636140f6565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd90610ec790859060040161410c565b600060405180830381865afa158015610ee4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f0c919081019061421f565b509050600081600081518110610f2457610f246140f6565b602002602001015182600181518110610f3f57610f3f6140f6565b6020026020010151610f5191906142eb565b600c54909150610f7190600160b81b900463ffffffff1660030b82614351565b935060008160060b128015610fa45750600c54610f9e90600160b81b900463ffffffff1660030b8261438f565b60060b15155b15610fb75783610fb3816143b1565b9450505b50505090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110055760405162461bcd60e51b81526004016109399061406b565b60648160ff1611156110415760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610939565b600c805460ff909216600160a01b0260ff60a01b19909216919091179055565b604051632aaafb6d60e01b81523060048201523360248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632aaafb6d90604401602060405180830381865afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f2919061408e565b61112a5760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610939565b6000611134611c99565b90508061116b5760405162461bcd60e51b8152602060048201526005602482015264616c6c6f6360d81b6044820152606401610939565b83156111ad576111ad61117c611ca9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169086612612565b82156111ef576111ef6111be611ca9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169085612612565b6111fa600080611d34565b505060408051878152602081018790526001600160a01b03891693507f97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de92500160405180910390a260019150505b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112975760405162461bcd60e51b81526004016109399061406b565b6013805460ff1916600117905560405163a34123a760e01b8152600287810b600483015286900b60248201526001600160801b03851660448201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a79060640160408051808303816000875af1158015611324573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134891906143d5565b50506040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d8906113a59030908a908a906001600160801b039081906004016143f9565b60408051808303816000875af11580156113c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e79190614436565b5050821561141a5761141a7f00000000000000000000000000000000000000000000000000000000000000008483612669565b811561144b5761144b7f00000000000000000000000000000000000000000000000000000000000000008383612669565b61150f611456611ca9565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156114ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114de9190614465565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612612565b6115d361151a611ca9565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561157e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a29190614465565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612612565b505050505050565b604051632aaafb6d60e01b81523060048201523360248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632aaafb6d90604401602060405180830381865afa158015611645573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611669919061408e565b6116a15760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610939565b6116a9611c99565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117359190614465565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561179f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c39190614465565b90508115611807576118076117d6611ca9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169084612612565b801561184957611849611818611ca9565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083612612565b5050565b60006118c261185a610da5565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610c5f565b905090565b60008060008060006118d987876127fd565b94509450505092506118ec8787856128f3565b90955093506119046001600160801b0383168661447e565b94506119196001600160801b0382168561447e565b93505050509250929050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461196d5760405162461bcd60e51b81526004016109399061406b565b60008163ffffffff16116119b25760405162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b6044820152606401610939565b600c805463ffffffff909216600160b81b0263ffffffff60b81b19909216919091179055565b600d546000908190819081906119fc90600281810b9163010000009004900b6118c7565b91509150600080611a0b6129ab565b6040516370a0823160e01b8152306004820152919350915060009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9d9190614465565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b259190614465565b909250905081611b35858861447e565b611b3f919061447e565b81611b4a858861447e565b611b54919061447e565b975097505050505050509091565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bbf5760405162461bcd60e51b8152602060048201526002602482015261505360f01b6044820152606401610939565b611bf36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386612612565b611c276001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385612612565b8015611c3557611c35614496565b50505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bbf5760405162461bcd60e51b815260206004820152600360248201526228299960e91b6044820152606401610939565b6000611ca3612af0565b50600190565b604051630ccc6b1960e31b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063666358c890602401602060405180830381865afa158015611d10573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c291906144ac565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbe91906144db565b50505050509150508660020b6000148015611ddc57508560020b6000145b15611ea257600d546301000000900460020b158015611dfe5750600d5460020b155b15611e1757600080600080945094509450945050612070565b600d54600090600290611e369080830b9063010000009004830b61456d565b611e4091906145ab565b600c54909150600160d81b900460020b80611e5b83856145dc565b611e6591906145ab565b611e6f9190614623565b600c54909750600160d81b900460020b80611e8a838561456d565b611e9491906145ab565b611e9e9190614623565b9750505b611ead878783612b02565b6000611ed87f0000000000000000000000000000000000000000000000000000000000000000612ccc565b90506000611f057f0000000000000000000000000000000000000000000000000000000000000000612ccc565b9050611f118282612d3d565b600c549198509650600160a01b900460ff1615611f6257611f3489898989612e2c565b600d805465ffffffffffff1916630100000062ffffff8b81169190910262ffffff191691909117908b161790555b600c54600160a81b900460ff161561206c57611f9d7f0000000000000000000000000000000000000000000000000000000000000000612ccc565b9150611fc87f0000000000000000000000000000000000000000000000000000000000000000612ccc565b600c54909150606490611fe590600160a81b900460ff16846140c1565b611fef91906146b0565b600c5490955060649061200c90600160a81b900460ff16836140c1565b61201691906146b0565b93506120427f000000000000000000000000000000000000000000000000000000000000000086612fda565b61206c7f000000000000000000000000000000000000000000000000000000000000000085612fda565b5050505b92959194509250565b60008060008360020b12612090578260020b61209d565b8260020b61209d906146c4565b90506120ac620d89e7196146e1565b62ffffff168111156120e45760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610939565b6000600182166120f857600160801b61210a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612149576080612144826ffff97272373d413259a46990580e213a6140c1565b901c90505b600482161561217357608061216e826ffff2e50f5f656932ef12357cf3c7fdcc6140c1565b901c90505b600882161561219d576080612198826fffe5caca7e10e4e61c3624eaa0941cd06140c1565b901c90505b60108216156121c75760806121c2826fffcb9843d60f6159c9db58835c9266446140c1565b901c90505b60208216156121f15760806121ec826fff973b41fa98c081472e6896dfb254c06140c1565b901c90505b604082161561221b576080612216826fff2ea16466c96a3843ec78b326b528616140c1565b901c90505b6080821615612245576080612240826ffe5dee046a99a2a811c461f1969c30536140c1565b901c90505b61010082161561227057608061226b826ffcbe86c7900a88aedcffc83b479aa3a46140c1565b901c90505b61020082161561229b576080612296826ff987a7253ac413176f2b074cf7815e546140c1565b901c90505b6104008216156122c65760806122c1826ff3392b0822b70005940c7a398e4b70f36140c1565b901c90505b6108008216156122f15760806122ec826fe7159475a2c29b7443b29c7fa6e889d96140c1565b901c90505b61100082161561231c576080612317826fd097f3bdfd2022b8845ad8f792aa58256140c1565b901c90505b612000821615612347576080612342826fa9f746462d870fdf8a65dc1f90e061e56140c1565b901c90505b61400082161561237257608061236d826f70d869a156d2a1b890bb3df62baf32f76140c1565b901c90505b61800082161561239d576080612398826f31be135f97d08fd981231505542fcfa66140c1565b901c90505b620100008216156123c95760806123c4826f09aa508b5b7a84e1c677de54f3e99bc96140c1565b901c90505b620200008216156123f45760806123ef826e5d6af8dedb81196699c329225ee6046140c1565b901c90505b6204000082161561241e576080612419826d2216e584f5fa1ea926041bedfe986140c1565b901c90505b62080000821615612446576080612441826b048a170391f7dc42444e8fa26140c1565b901c90505b60008460020b13156124615761245e816000196146b0565b90505b61247064010000000082614704565b1561247c57600161247f565b60005b6124909060ff16602083901c61447e565b949350505050565b6000808060001985870985870292508281108382030391505080600014156124d257600084116124c757600080fd5b508290049050611248565b8084116124de57600080fd5b60008486880980840393811190920391905060006124fe8619600161447e565b861695869004959384900493600081900304600101905061251f81846140c1565b9093179260006125308760036140c1565b600218905061253f81886140c1565b61254a906002614718565b61255490826140c1565b905061256081886140c1565b61256b906002614718565b61257590826140c1565b905061258181886140c1565b61258c906002614718565b61259690826140c1565b90506125a281886140c1565b6125ad906002614718565b6125b790826140c1565b90506125c381886140c1565b6125ce906002614718565b6125d890826140c1565b90506125e481886140c1565b6125ef906002614718565b6125f990826140c1565b905061260581866140c1565b9998505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261266490849061321f565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156126ad5761266482826132f1565b60006001821515141561273f576001600160a01b038481166000908152600e60205260409081902054905163db006a7560e01b81526004810186905291169063db006a75906024016020604051808303816000875af1158015612714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127389190614465565b90506127c0565b6001600160a01b038481166000908152600e60205260409081902054905163852a12e360e01b81526004810186905291169063852a12e3906024016020604051808303816000875af1158015612799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127bd9190614465565b90505b8015611c355760135460ff16611c355760405162461bcd60e51b815260206004820152600260248201526110dd60f21b6044820152606401610939565b604080513060601b6bffffffffffffffffffffffff191660208083019190915260e885811b603484015284901b60378301528251601a818403018152603a90920190925280519101206000908190819081908190819060405163514ea4bf60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063514ea4bf9060240160a060405180830381865afa1580156128bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128df919061472f565b939c929b5090995097509095509350505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297a91906144db565b505050505050905061299e8161298f88612079565b61299888612079565b8761347e565b9250925050935093915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e6020526040808220549051633af9e66960e01b815230600482015291928392911690633af9e669906024016020604051808303816000875af1158015612a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4b9190614465565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e602052604090819020549051633af9e66960e01b81523060048201529294501690633af9e669906024016020604051808303816000875af1158015612ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aea9190614465565b90509091565b612af861351a565b612b006135e4565b565b8160020b8360020b12612b3c5760405162461bcd60e51b8152602060048201526002602482015261563160f01b6044820152606401610939565b8060020b8360020b12612b765760405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606401610939565b8060020b8260020b13612bb05760405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606401610939565b620d89e719600284900b1215612bed5760405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606401610939565b612bfa620d89e7196146e1565b60020b8260020b1315612c345760405162461bcd60e51b8152602060048201526002602482015261563560f01b6044820152606401610939565b600c54612c4b90600160d81b900460020b84614791565b60020b15612c805760405162461bcd60e51b81526020600482015260026024820152612b1b60f11b6044820152606401610939565b600c54612c9790600160d81b900460020b83614791565b60020b156126645760405162461bcd60e51b8152602060048201526002602482015261563760f01b6044820152606401610939565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015612d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d379190614465565b92915050565b6000806000612d4a61184d565b90506000612d5882876140c1565b905084811115612dc757600c54606490612d7c90600160a01b900460ff16886140c1565b612d8691906146b0565b600c54909450612dc090606490612da790600160a01b900460ff16886140c1565b612db191906146b0565b612dbb84876140c1565b613658565b9250612e23565b600c54606490612de190600160a01b900460ff16876140c1565b612deb91906146b0565b600c54909350612e2090606490612e0c90600160a01b900460ff16896140c1565b612e1691906146b0565b612dbb84866146b0565b93505b50509250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eb091906144db565b50505050505090506000612ed782612ec788612079565b612ed088612079565b878761366e565b604051633c8a7d8d60e01b8152306004820152600288810b602483015287900b60448201526001600160801b038216606482015260a06084820152600060a48201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015612f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f9291906143d5565b5050806001600160801b03168560020b8760020b7f7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a560405160405180910390a4505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561309a5761301d81613732565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631249c58b6203d090836040518363ffffffff1660e01b81526004016000604051808303818589803b15801561307c57600080fd5b5088f1158015613090573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038281166000818152600e60205260409081902054905163095ea7b360e01b815292166004830152602482018390529063095ea7b3906044016020604051808303816000875af11580156130f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061311d919061408e565b506001600160a01b038281166000908152600e602052604080822054905163140e25ad60e31b8152600481018590529192169063a0712d68906024016020604051808303816000875af1158015613178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319c9190614465565b9050801561266457604080518181526027818301527f6d696e74526573756c74206973206e6f7420302c207468657265207761732061606082015266371032b93937b960c91b60808201526020810183905290517f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad9181900360a00190a1505050565b6000613274826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166137b69092919063ffffffff16565b8051909150156126645780806020019051810190613292919061408e565b6126645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610939565b60006001821515141561339e5760405163db006a7560e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db006a75906024016020604051808303816000875af1158015613365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133899190614465565b90508061339957613399476137c5565b613439565b60405163852a12e360e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063852a12e3906024016020604051808303816000875af1158015613405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134299190614465565b90508061343957613439836137c5565b80156126645760135460ff166126645760405162461bcd60e51b815260206004820152600a602482015269043657468206e6f7420360b41b6044820152606401610939565b600080836001600160a01b0316856001600160a01b0316111561349f579293925b846001600160a01b0316866001600160a01b0316116134ca576134c385858561383a565b9150613511565b836001600160a01b0316866001600160a01b03161015613503576134ef86858561383a565b91506134fc8587856138ad565b9050613511565b61350e8585856138ad565b90505b94509492505050565b600d5460020b1580156135375750600d546301000000900460020b155b1561353e57565b600d5460009061355c90600281810b9163010000009004900b6127fd565b5050600d54929350600092839250829150819061358890600281810b9163010000009004900b876138f7565b93509350935093506000856001600160801b031611156135bd576135ac8483614718565b6001556135b98382614718565b6002555b600d546135d890600281810b9163010000009004900b6127fd565b50505050505050505050565b6000806135ef613a6f565b90925090508115613626576136267f0000000000000000000000000000000000000000000000000000000000000000836001612669565b8015611849576118497f0000000000000000000000000000000000000000000000000000000000000000826001612669565b60008183106136675781611248565b5090919050565b6000836001600160a01b0316856001600160a01b0316111561368e579293925b846001600160a01b0316866001600160a01b0316116136b9576136b2858585613b86565b9050613729565b836001600160a01b0316866001600160a01b0316101561371b5760006136e0878686613b86565b905060006136ef878986613bf0565b9050806001600160801b0316826001600160801b0316106137105780613712565b815b92505050613729565b613726858584613bf0565b90505b95945050505050565b80156137b357604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561379a57600080fd5b505af11580156137ae573d6000803e3d6000fd5b505050505b50565b60606124908484600085613c26565b80156137b3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561382657600080fd5b505af11580156115d3573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b0316111561385a579192915b6001600160a01b0384166138a36fffffffffffffffffffffffffffffffff60601b606085901b1661388b87876147b3565b6001600160a01b0316866001600160a01b0316612498565b61249091906146b0565b6000826001600160a01b0316846001600160a01b031611156138cd579192915b6124906001600160801b0383166138e486866147b3565b6001600160a01b0316600160601b612498565b60008080806001600160801b038516156139b55760405163a34123a760e01b8152600288810b600483015287900b60248201526001600160801b03861660448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a34123a79060640160408051808303816000875af115801561398b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139af91906143d5565b90945092505b6040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d890613a109030908b908b906001600160801b039081906004016143f9565b60408051808303816000875af1158015613a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a529190614436565b94989397506001600160801b039081169650909316935090915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e60205260408082205490516370a0823160e01b8152306004820152919283929116906370a0823190602401602060405180830381865afa158015613ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b0d9190614465565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e6020526040908190205490516370a0823160e01b815230600482015292945016906370a0823190602401602060405180830381865afa158015612ac6573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b03161115613ba6579192915b6000613bc9856001600160a01b0316856001600160a01b0316600160601b612498565b9050613729613beb8483613bdd89896147b3565b6001600160a01b0316612498565b613d4c565b6000826001600160a01b0316846001600160a01b03161115613c10579192915b612490613beb83600160601b613bdd88886147b3565b606082471015613c875760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610939565b6001600160a01b0385163b613cde5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610939565b600080866001600160a01b03168587604051613cfa9190614807565b60006040518083038185875af1925050503d8060008114613d37576040519150601f19603f3d011682016040523d82523d6000602084013e613d3c565b606091505b5091509150610d60828286613d67565b806001600160801b0381168114613d6257600080fd5b919050565b60608315613d76575081611248565b825115613d865782518084602001fd5b8160405162461bcd60e51b81526004016109399190614823565b60ff811681146137b357600080fd5b600060208284031215613dc157600080fd5b813561124881613da0565b6001600160a01b03811681146137b357600080fd5b600060208284031215613df357600080fd5b813561124881613dcc565b8060020b81146137b357600080fd5b60008060408385031215613e2057600080fd5b8235613e2b81613dfe565b91506020830135613e3b81613dfe565b809150509250929050565b600060208284031215613e5857600080fd5b813561124881613dfe565b6001600160801b03811681146137b357600080fd5b60008060008060808587031215613e8e57600080fd5b8435613e9981613dfe565b93506020850135613ea981613e63565b92506040850135613eb981613dcc565b91506060850135613ec981613dcc565b939692955090935050565b60008060408385031215613ee757600080fd5b50508035926020909101359150565b600080600060608486031215613f0b57600080fd5b8335613f1681613dcc565b95602085013595506040909401359392505050565b80151581146137b357600080fd5b60008060008060008060c08789031215613f5257600080fd5b8635613f5d81613dfe565b95506020870135613f6d81613dfe565b94506040870135613f7d81613e63565b9350606087013592506080870135915060a0870135613f9b81613f2b565b809150509295509295509295565b600060208284031215613fbb57600080fd5b813563ffffffff8116811461124857600080fd5b60008083601f840112613fe157600080fd5b50813567ffffffffffffffff811115613ff957600080fd5b60208301915083602082850101111561401157600080fd5b9250929050565b6000806000806060858703121561402e57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561405357600080fd5b61405f87828801613fcf565b95989497509550505050565b6020808252600990820152683737ba1030b236b4b760b91b604082015260600190565b6000602082840312156140a057600080fd5b815161124881613f2b565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156140db576140db6140ab565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561414a57835163ffffffff1683529284019291840191600101614128565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561417f5761417f6140e0565b604052919050565b600067ffffffffffffffff8211156141a1576141a16140e0565b5060051b60200190565b600082601f8301126141bc57600080fd5b815160206141d16141cc83614187565b614156565b82815260059290921b840181019181810190868411156141f057600080fd5b8286015b8481101561421457805161420781613dcc565b83529183019183016141f4565b509695505050505050565b6000806040838503121561423257600080fd5b825167ffffffffffffffff8082111561424a57600080fd5b818501915085601f83011261425e57600080fd5b8151602061426e6141cc83614187565b82815260059290921b8401810191818101908984111561428d57600080fd5b948201945b838610156142bb5785518060060b81146142ac5760008081fd5b82529482019490820190614292565b918801519196509093505050808211156142d457600080fd5b506142e1858286016141ab565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615614316576143166140ab565b81667fffffffffffff018313811615614331576143316140ab565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806143685761436861433b565b667fffffffffffff19821460001982141615614386576143866140ab565b90059392505050565b60008260060b806143a2576143a261433b565b808360060b0791505092915050565b60008160020b627fffff198114156143cb576143cb6140ab565b6000190192915050565b600080604083850312156143e857600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b6000806040838503121561444957600080fd5b825161445481613e63565b6020840151909250613e3b81613e63565b60006020828403121561447757600080fd5b5051919050565b60008219821115614491576144916140ab565b500190565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156144be57600080fd5b815161124881613dcc565b805161ffff81168114613d6257600080fd5b600080600080600080600060e0888a0312156144f657600080fd5b875161450181613dcc565b602089015190975061451281613dfe565b9550614520604089016144c9565b945061452e606089016144c9565b935061453c608089016144c9565b925060a088015161454c81613da0565b60c089015190925061455d81613f2b565b8091505092959891949750929550565b60008160020b8360020b6000811281627fffff1901831281151615614594576145946140ab565b81627fffff018313811615614331576143316140ab565b60008160020b8360020b806145c2576145c261433b565b627fffff19821460001982141615614386576143866140ab565b60008160020b8360020b6000821282627fffff03821381151615614602576146026140ab565b82627fffff1903821281161561461a5761461a6140ab565b50019392505050565b60008160020b8360020b627fffff60008213600084138383048511828216161561464f5761464f6140ab565b627fffff19600085128281168783058712161561466e5761466e6140ab565b6000871292508582058712848416161561468a5761468a6140ab565b858505871281841616156146a0576146a06140ab565b5050509290910295945050505050565b6000826146bf576146bf61433b565b500490565b6000600160ff1b8214156146da576146da6140ab565b5060000390565b60008160020b627fffff198114156146fb576146fb6140ab565b60000392915050565b6000826147135761471361433b565b500690565b60008282101561472a5761472a6140ab565b500390565b600080600080600060a0868803121561474757600080fd5b855161475281613e63565b809550506020860151935060408601519250606086015161477281613e63565b608087015190925061478381613e63565b809150509295509295909350565b60008260020b806147a4576147a461433b565b808360020b0791505092915050565b60006001600160a01b03838116908316818110156147d3576147d36140ab565b039392505050565b60005b838110156147f65781810151838201526020016147de565b83811115611c355750506000910152565b600082516148198184602087016147db565b9190910192915050565b60208152600082518060208401526148428160408501602087016147db565b601f01601f1916919091016040019291505056fea264697066735822122065198f3633641cabffe658b04dcf25e47228d2326d8caf458758b0ae2bac24ca64736f6c634300080a0033",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend, _contracts [11]common.Address, _uniPortion uint8, _compPortion uint8, _protocolFee uint8, _feetier *big.Int, _quoamount *big.Int) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend, _contracts, _uniPortion, _compPortion, _protocolFee, _feetier, _quoamount)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiCaller) Fees(opts *bind.CallOpts) (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "Fees")

	outstruct := new(struct {
		U3Fees0              *big.Int
		U3Fees1              *big.Int
		LcFees0              *big.Int
		LcFees1              *big.Int
		AccruedProtocolFees0 *big.Int
		AccruedProtocolFees1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.U3Fees0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.U3Fees1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.LcFees0 = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.LcFees1 = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.AccruedProtocolFees0 = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.AccruedProtocolFees1 = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiSession) Fees() (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	return _Api.Contract.Fees(&_Api.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiCallerSession) Fees() (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	return _Api.Contract.Fees(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCaller) UNIV3FACTORY(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "UNIV3_FACTORY")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCallerSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiCaller) CETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiSession) CETH() (common.Address, error) {
	return _Api.Contract.CETH(&_Api.CallOpts)
}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiCallerSession) CETH() (common.Address, error) {
	return _Api.Contract.CETH(&_Api.CallOpts)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCaller) CTOKEN(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CTOKEN", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCallerSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCallerSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiSession) Admin() (common.Address, error) {
	return _Api.Contract.Admin(&_Api.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiCallerSession) Admin() (common.Address, error) {
	return _Api.Contract.Admin(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCaller) CHigh(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cHigh")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCallerSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCaller) CLow(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cLow")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCallerSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCaller) CompPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCallerSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCallerSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiCaller) CurComp0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "curComp0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiSession) CurComp0() (*big.Int, error) {
	return _Api.Contract.CurComp0(&_Api.CallOpts)
}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiCallerSession) CurComp0() (*big.Int, error) {
	return _Api.Contract.CurComp0(&_Api.CallOpts)
}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiCaller) CurComp1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "curComp1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiSession) CurComp1() (*big.Int, error) {
	return _Api.Contract.CurComp1(&_Api.CallOpts)
}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiCallerSession) CurComp1() (*big.Int, error) {
	return _Api.Contract.CurComp1(&_Api.CallOpts)
}

// Decenter is a free data retrieval call binding the contract method 0x4f82f8e1.
//
// Solidity: function decenter(uint256 , uint256 ) view returns(address)
func (_Api *ApiCaller) Decenter(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "decenter", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Decenter is a free data retrieval call binding the contract method 0x4f82f8e1.
//
// Solidity: function decenter(uint256 , uint256 ) view returns(address)
func (_Api *ApiSession) Decenter(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Decenter(&_Api.CallOpts, arg0, arg1)
}

// Decenter is a free data retrieval call binding the contract method 0x4f82f8e1.
//
// Solidity: function decenter(uint256 , uint256 ) view returns(address)
func (_Api *ApiCallerSession) Decenter(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Decenter(&_Api.CallOpts, arg0, arg1)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCallerSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCaller) GetPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCaller) GetQuoteAtTick(opts *bind.CallOpts, tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getQuoteAtTick", tick, baseAmount, baseToken, quoteToken)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCallerSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCaller) GetTwap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTwap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCallerSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCaller) GetUniAmounts(opts *bind.CallOpts, tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getUniAmounts", tickLower, tickUpper)

	outstruct := new(struct {
		Amount0 *big.Int
		Amount1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCallerSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCaller) IndividualCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "individualCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCallerSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCaller) MaxTwapDeviation(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "maxTwapDeviation")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCallerSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCaller) Pool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCallerSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCaller) Protocol(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocol")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCallerSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiCaller) ProtocolFee(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocolFee")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiSession) ProtocolFee() (uint8, error) {
	return _Api.Contract.ProtocolFee(&_Api.CallOpts)
}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiCallerSession) ProtocolFee() (uint8, error) {
	return _Api.Contract.ProtocolFee(&_Api.CallOpts)
}

// Quoamount is a free data retrieval call binding the contract method 0x17f8f9fa.
//
// Solidity: function quoamount() view returns(uint128)
func (_Api *ApiCaller) Quoamount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "quoamount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Quoamount is a free data retrieval call binding the contract method 0x17f8f9fa.
//
// Solidity: function quoamount() view returns(uint128)
func (_Api *ApiSession) Quoamount() (*big.Int, error) {
	return _Api.Contract.Quoamount(&_Api.CallOpts)
}

// Quoamount is a free data retrieval call binding the contract method 0x17f8f9fa.
//
// Solidity: function quoamount() view returns(uint128)
func (_Api *ApiCallerSession) Quoamount() (*big.Int, error) {
	return _Api.Contract.Quoamount(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCaller) TickSpacing(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "tickSpacing")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCallerSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCaller) Token0(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token0")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCallerSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCaller) Token1(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token1")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCallerSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCaller) TwapDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "twapDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCallerSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCaller) UniPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "uniPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCallerSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCaller) VaultCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaultCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCallerSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactor) CallFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "callFunds")
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactorSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactor) Emergency(opts *bind.TransactOpts, tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "emergency", tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactorSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiTransactor) GetTotalAmounts(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "getTotalAmounts")
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiSession) GetTotalAmounts() (*types.Transaction, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.TransactOpts)
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiTransactorSession) GetTotalAmounts() (*types.Transaction, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.TransactOpts)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiTransactor) Rebalance(opts *bind.TransactOpts, newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalance", newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiTransactorSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactor) SetCompPortionRatio(opts *bind.TransactOpts, ratio uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setCompPortionRatio", ratio)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiSession) SetCompPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetCompPortionRatio(&_Api.TransactOpts, ratio)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactorSession) SetCompPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetCompPortionRatio(&_Api.TransactOpts, ratio)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactor) SetMaxTwapDeviation(opts *bind.TransactOpts, _maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setMaxTwapDeviation", _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactorSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactor) SetTwapDuration(opts *bind.TransactOpts, _twapDuration uint32) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTwapDuration", _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactorSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactor) SetUniPortionRatio(opts *bind.TransactOpts, ratio uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setUniPortionRatio", ratio)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiSession) SetUniPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetUniPortionRatio(&_Api.TransactOpts, ratio)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactorSession) SetUniPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetUniPortionRatio(&_Api.TransactOpts, ratio)
}

// Setprotocol is a paid mutator transaction binding the contract method 0x2612abf8.
//
// Solidity: function setprotocol(address _protocol) returns()
func (_Api *ApiTransactor) Setprotocol(opts *bind.TransactOpts, _protocol common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setprotocol", _protocol)
}

// Setprotocol is a paid mutator transaction binding the contract method 0x2612abf8.
//
// Solidity: function setprotocol(address _protocol) returns()
func (_Api *ApiSession) Setprotocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.Setprotocol(&_Api.TransactOpts, _protocol)
}

// Setprotocol is a paid mutator transaction binding the contract method 0x2612abf8.
//
// Solidity: function setprotocol(address _protocol) returns()
func (_Api *ApiTransactorSession) Setprotocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.Setprotocol(&_Api.TransactOpts, _protocol)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3MintCallback(opts *bind.TransactOpts, amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3MintCallback", amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiTransactor) VaultWithdraw(opts *bind.TransactOpts, to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "vaultWithdraw", to, amount0, amount1)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiSession) VaultWithdraw(to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.Contract.VaultWithdraw(&_Api.TransactOpts, to, amount0, amount1)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiTransactorSession) VaultWithdraw(to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.Contract.VaultWithdraw(&_Api.TransactOpts, to, amount0, amount1)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// ApiBurnUniV3LiquidityIterator is returned from FilterBurnUniV3Liquidity and is used to iterate over the raw logs and unpacked data for BurnUniV3Liquidity events raised by the Api contract.
type ApiBurnUniV3LiquidityIterator struct {
	Event *ApiBurnUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiBurnUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiBurnUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiBurnUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiBurnUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiBurnUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiBurnUniV3Liquidity represents a BurnUniV3Liquidity event raised by the Api contract.
type ApiBurnUniV3Liquidity struct {
	CLow      *big.Int
	CHigh     *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBurnUniV3Liquidity is a free log retrieval operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterBurnUniV3Liquidity(opts *bind.FilterOpts, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (*ApiBurnUniV3LiquidityIterator, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiBurnUniV3LiquidityIterator{contract: _Api.contract, event: "BurnUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchBurnUniV3Liquidity is a free log subscription operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchBurnUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiBurnUniV3Liquidity, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiBurnUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnUniV3Liquidity is a log parse operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseBurnUniV3Liquidity(log types.Log) (*ApiBurnUniV3Liquidity, error) {
	event := new(ApiBurnUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMintUniV3LiquidityIterator is returned from FilterMintUniV3Liquidity and is used to iterate over the raw logs and unpacked data for MintUniV3Liquidity events raised by the Api contract.
type ApiMintUniV3LiquidityIterator struct {
	Event *ApiMintUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMintUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMintUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMintUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMintUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMintUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMintUniV3Liquidity represents a MintUniV3Liquidity event raised by the Api contract.
type ApiMintUniV3Liquidity struct {
	NewLow    *big.Int
	NewHigh   *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMintUniV3Liquidity is a free log retrieval operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterMintUniV3Liquidity(opts *bind.FilterOpts, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (*ApiMintUniV3LiquidityIterator, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiMintUniV3LiquidityIterator{contract: _Api.contract, event: "MintUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchMintUniV3Liquidity is a free log subscription operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchMintUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiMintUniV3Liquidity, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMintUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMintUniV3Liquidity is a log parse operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseMintUniV3Liquidity(log types.Log) (*ApiMintUniV3Liquidity, error) {
	event := new(ApiMintUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMyLogIterator is returned from FilterMyLog and is used to iterate over the raw logs and unpacked data for MyLog events raised by the Api contract.
type ApiMyLogIterator struct {
	Event *ApiMyLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMyLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMyLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMyLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMyLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMyLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMyLog represents a MyLog event raised by the Api contract.
type ApiMyLog struct {
	Arg0 string
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterMyLog is a free log retrieval operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) FilterMyLog(opts *bind.FilterOpts) (*ApiMyLogIterator, error) {

	logs, sub, err := _Api.contract.FilterLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return &ApiMyLogIterator{contract: _Api.contract, event: "MyLog", logs: logs, sub: sub}, nil
}

// WatchMyLog is a free log subscription operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) WatchMyLog(opts *bind.WatchOpts, sink chan<- *ApiMyLog) (event.Subscription, error) {

	logs, sub, err := _Api.contract.WatchLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMyLog)
				if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMyLog is a log parse operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) ParseMyLog(log types.Log) (*ApiMyLog, error) {
	event := new(ApiMyLog)
	if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiRebalanceIterator is returned from FilterRebalance and is used to iterate over the raw logs and unpacked data for Rebalance events raised by the Api contract.
type ApiRebalanceIterator struct {
	Event *ApiRebalance // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiRebalanceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiRebalance)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiRebalance)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiRebalanceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiRebalanceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiRebalance represents a Rebalance event raised by the Api contract.
type ApiRebalance struct {
	Arg0 common.Address
	U0   *big.Int
	U1   *big.Int
	C0   *big.Int
	C1   *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRebalance is a free log retrieval operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) FilterRebalance(opts *bind.FilterOpts, arg0 []common.Address) (*ApiRebalanceIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiRebalanceIterator{contract: _Api.contract, event: "Rebalance", logs: logs, sub: sub}, nil
}

// WatchRebalance is a free log subscription operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) WatchRebalance(opts *bind.WatchOpts, sink chan<- *ApiRebalance, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiRebalance)
				if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRebalance is a log parse operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) ParseRebalance(log types.Log) (*ApiRebalance, error) {
	event := new(ApiRebalance)
	if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiVaultWithdrawIterator is returned from FilterVaultWithdraw and is used to iterate over the raw logs and unpacked data for VaultWithdraw events raised by the Api contract.
type ApiVaultWithdrawIterator struct {
	Event *ApiVaultWithdraw // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiVaultWithdrawIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiVaultWithdraw)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiVaultWithdraw)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiVaultWithdrawIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiVaultWithdrawIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiVaultWithdraw represents a VaultWithdraw event raised by the Api contract.
type ApiVaultWithdraw struct {
	To      common.Address
	Amount0 *big.Int
	Amount1 *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterVaultWithdraw is a free log retrieval operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) FilterVaultWithdraw(opts *bind.FilterOpts, to []common.Address) (*ApiVaultWithdrawIterator, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "VaultWithdraw", toRule)
	if err != nil {
		return nil, err
	}
	return &ApiVaultWithdrawIterator{contract: _Api.contract, event: "VaultWithdraw", logs: logs, sub: sub}, nil
}

// WatchVaultWithdraw is a free log subscription operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) WatchVaultWithdraw(opts *bind.WatchOpts, sink chan<- *ApiVaultWithdraw, to []common.Address) (event.Subscription, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "VaultWithdraw", toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiVaultWithdraw)
				if err := _Api.contract.UnpackLog(event, "VaultWithdraw", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVaultWithdraw is a log parse operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) ParseVaultWithdraw(log types.Log) (*ApiVaultWithdraw, error) {
	event := new(ApiVaultWithdraw)
	if err := _Api.contract.UnpackLog(event, "VaultWithdraw", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
