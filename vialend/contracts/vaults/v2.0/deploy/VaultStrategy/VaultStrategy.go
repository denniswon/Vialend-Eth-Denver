// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// UniCompParam is an auto generated low-level Go binding around an user-defined struct.
type UniCompParam struct {
	Uni3Factory      common.Address
	VaultFactory     common.Address
	Protocol         common.Address
	Creator          common.Address
	Token0           common.Address
	Token1           common.Address
	CToken0          common.Address
	CToken1          common.Address
	WETH             common.Address
	CETH             common.Address
	Token0Decimals   uint8
	Token1Decimals   uint8
	UniPortionRate   uint8
	CompPortionRate  uint8
	ProtocolFeeRate  uint8
	MotivatorFeeRate uint8
	FeeTier          *big.Int
	TwapDuration     uint32
	MaxTwapDeviation *big.Int
	VaultCap         *big.Int
	IndividualCap    *big.Int
}

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"Uni3Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"VaultFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Protocol\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"CToken0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"CToken1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"CETH\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"Token0Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"Token1Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"UniPortionRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"CompPortionRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"ProtocolFeeRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"MotivatorFeeRate\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"FeeTier\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"TwapDuration\",\"type\":\"uint32\"},{\"internalType\":\"int24\",\"name\":\"MaxTwapDeviation\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"VaultCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"IndividualCap\",\"type\":\"uint256\"}],\"internalType\":\"structUniCompParam\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uFees0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uFees1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lFees0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lFees1\",\"type\":\"uint256\"}],\"name\":\"AllocFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"BurnUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"MintUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNIV3_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_CETH\",\"outputs\":[{\"internalType\":\"contractICEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WETH\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cHigh\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cLow\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compIn0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compIn1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compOut0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compOut1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"redeemType\",\"type\":\"bool\"}],\"name\":\"emergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCompAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getQuoteAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTickPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTwap\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getUniAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"individualCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"motivator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"motivatorFeeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"motivators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteamount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"}],\"name\":\"rebalanceByVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"uni\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"comp\",\"type\":\"uint8\"}],\"name\":\"setPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"setProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x610180604052600f805460ff191690553480156200001c57600080fd5b5060405162005c2938038062005c298339810160408190526200003f916200064e565b60016000556020808201516001600160a01b039081166080819052604080850151600a80549185166001600160a01b0319928316179055606086015160098054919095169116179092558151636e9960c360e01b815291519092636e9960c392600480820193918290030181865afa158015620000c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e69190620007f9565b6001600160a01b0390811660a0908152608083015190830151610200840151604051630b4c774160e11b815292841660048401529216602482015262ffffff9091166044820152731f98431c8ad98523631ae4a59f267346ea31f98490631698ee8290606401602060405180830381865afa1580156200016a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001909190620007f9565b6001600160a01b031661014081905260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa158015620001db573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002019190620007f9565b6001600160a01b031660e0816001600160a01b031681525050610140516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200025c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002829190620007f9565b6001600160a01b039081166101005260a082015160e051821691161415620002fc5760e08181015190516001600160a01b039081166000908152600c602052604080822080546001600160a01b031990811695851695909517905560c0850151610100518416835291208054909316911617905562000350565b60c081015160e080516001600160a01b039081166000908152600c602052604080822080549584166001600160a01b0319968716179055928501516101005183168252929020805492909116919092161790555b6101008101516001600160a01b0390811660c052610120808301518216905261014051604080516334324e9f60e21b81529051919092169163d0c93a7c9160048083019260209291908290030181865afa158015620003b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003d991906200081e565b600a80546101808401516101a085015160ff818116600160a81b0260ff60a81b19918416600160a01b0260ff60a01b1962ffffff98909816600160e01b029790971660ff60a01b62ffffff60e01b0119909516949094179590951794909416919091179091556064916200044d9162000852565b60ff161115620004a35760405162461bcd60e51b815260206004820152601360248201527f706f7274696f6e20756e692b636f6d3e31303000000000000000000000000000604482015260640160405180910390fd5b6101c0810151600a8054610220840151610240850151600b805462ffffff90921666010000000000000262ffffff60301b199092169190911790556101e085015160ff908116600160b81b0260ff60b81b1963ffffffff909316600160c01b0263ffffffff60c01b19968316600160b01b029690961665ffffffff00ff60b01b1990941693909317949094171617815561014083015160e0516001600160a01b03908116600081815260116020526040808220805495881660ff1996871617815561016089015161010051909516835290822080549488169490951693909317909355909152546200059792169062000979565b6001600160801b031661016052506200098a565b6040516102a081016001600160401b0381118282101715620005dd57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620005fb57600080fd5b919050565b805160ff81168114620005fb57600080fd5b805162ffffff81168114620005fb57600080fd5b805163ffffffff81168114620005fb57600080fd5b8051600281900b8114620005fb57600080fd5b60006102a082840312156200066257600080fd5b6200066c620005ab565b6200067783620005e3565b81526200068760208401620005e3565b60208201526200069a60408401620005e3565b6040820152620006ad60608401620005e3565b6060820152620006c060808401620005e3565b6080820152620006d360a08401620005e3565b60a0820152620006e660c08401620005e3565b60c0820152620006f960e08401620005e3565b60e08201526101006200070e818501620005e3565b9082015261012062000722848201620005e3565b908201526101406200073684820162000600565b908201526101606200074a84820162000600565b908201526101806200075e84820162000600565b908201526101a06200077284820162000600565b908201526101c06200078684820162000600565b908201526101e06200079a84820162000600565b90820152610200620007ae84820162000612565b90820152610220620007c284820162000626565b90820152610240620007d68482016200063b565b908201526102608381015190820152610280928301519281019290925250919050565b6000602082840312156200080c57600080fd5b6200081782620005e3565b9392505050565b6000602082840312156200083157600080fd5b62000817826200063b565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200087257620008726200083c565b019392505050565b600181815b80851115620008bb5781600019048211156200089f576200089f6200083c565b80851615620008ad57918102915b93841c93908002906200087f565b509250929050565b600082620008d45750600162000973565b81620008e35750600062000973565b8160018114620008fc5760028114620009075762000927565b600191505062000973565b60ff8411156200091b576200091b6200083c565b50506001821b62000973565b5060208310610133831016604e8410600b84101617156200094c575081810a62000973565b6200095883836200087a565b80600019048211156200096f576200096f6200083c565b0290505b92915050565b60006200081760ff841683620008c3565b60805160a05160c05160e0516101005161012051610140516101605161506b62000bbe600039600081816106e001528181611a660152611fc50152600081816103e4015281816112c6015281816114c401528181611549015281816119d801528181611f390152818161202a015281816121cd015281816126cf01528181613212015281816132a0015281816136e7015281816137d50152818161421c01526142ad015260008181610418015281816138d601528181613af90152613b9901526000818161080101528181610a3d01528181610dc601528181610df401528181610f220152818161160d015281816116e6015281816118de015281816119a801528181611aa801528181611ca701528181611df3015281816120bd015281816128630152818161294e015281816129f601528181613dfd01528181613e700152613ec80152600081816103b00152818161099f01528181610d6101528181610d8f01528181610e7a015281816115dc01528181611653015281816118480152818161196601528181611a8701528181611c1901528181611dbe015281816120890152818161283601528181612923015281816129cc01528181613dd001528181613e3e0152613e9c01526000818161086f01528181613011015281816138930152818161403e01526140ae01526000818161093301528181610ae1015261142601526000818161074c01528181610c190152818161177c0152818161210d01528181612320015261258b015261506b6000f3fe6080604052600436106102975760003560e01c80638ce7442611610166578063cf8d7e25116100d3578063e50c5de61161008f578063f258b95e1161006c578063f258b95e1461090b578063f851a44014610921578063fa461e3314610955578063fdea65aa1461097557005b8063e50c5de614610891578063e7c7cb91146108b1578063e9ee7932146108d557005b8063cf8d7e25146107ad578063d0c93a7c146107ce578063d21220a7146107ef578063d348799714610823578063d368867f14610843578063e0af36161461085d57005b8063c387f25c11610122578063c387f25c146106ce578063c433c80a1461071a578063c45a01551461073a578063c4a7761e1461076e578063c5f20cc714610783578063c7f1afba1461079857005b80638ce74426146106125780638e843c6c14610632578063947300031461065357806398d5fdca146106695780639d371c301461067e578063b09d5a501461069e57005b80633c1bda091161020457806366caf990116101c057806366caf990146105695780636b16ad671461057f5780636cf9f190146105955780637a0ddeef146105b55780637a89cdd3146105d55780637c7311fe146105fd57005b80633c1bda09146104b45780633cbff3fe146104ca57806343c57a27146104ea57806349901b9f1461050a57806358f85880146105205780635d752a9a1461054157005b80630dfe1681116102535780630dfe16811461039e57806316f0115b146103d25780631c8941b21461040657806326d895451461043a57806331dc5b9514610473578063393ed0751461049457005b80630276650b146102a057806302d05d3f146102c957806306b0b65614610301578063080384591461032b5780630a9d793d1461035e5780630be3eca01461037e57005b3661029e57005b005b3480156102ac57600080fd5b506102b6600e5481565b6040519081526020015b60405180910390f35b3480156102d557600080fd5b506009546102e9906001600160a01b031681565b6040516001600160a01b0390911681526020016102c0565b34801561030d57600080fd5b50610316610995565b604080519283526020830191909152016102c0565b34801561033757600080fd5b50600a5461034c90600160b81b900460ff1681565b60405160ff90911681526020016102c0565b34801561036a57600080fd5b5061029e61037936600461457f565b610ad6565b34801561038a57600080fd5b5061029e6103993660046145ab565b610b61565b3480156103aa57600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b3480156103de57600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b34801561041257600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b34801561044657600080fd5b50600a5461045e90600160c01b900463ffffffff1681565b60405163ffffffff90911681526020016102c0565b34801561047f57600080fd5b50600a5461034c90600160a01b900460ff1681565b3480156104a057600080fd5b5061029e6104af3660046145f3565b610c01565b3480156104c057600080fd5b506102b6600d5481565b3480156104d657600080fd5b5061029e6104e5366004614621565b611031565b3480156104f657600080fd5b506102b6610505366004614653565b6110cb565b34801561051657600080fd5b506102b660055481565b34801561052c57600080fd5b50600a5461034c90600160b01b900460ff1681565b34801561054d57600080fd5b506105566111d9565b60405160029190910b81526020016102c0565b34801561057557600080fd5b506102b660085481565b34801561058b57600080fd5b506102b660125481565b3480156105a157600080fd5b506102e96105b03660046146af565b6113f1565b3480156105c157600080fd5b5061029e6105d03660046146d6565b61141b565b3480156105e157600080fd5b506102e9731f98431c8ad98523631ae4a59f267346ea31f98481565b34801561060957600080fd5b5061029e611761565b34801561061e57600080fd5b50600a546102e9906001600160a01b031681565b34801561063e57600080fd5b50600b54610556906301000000900460020b81565b34801561065f57600080fd5b506102b660065481565b34801561067557600080fd5b506102b66119d3565b34801561068a57600080fd5b506103166106993660046145f3565b611ad2565b3480156106aa57600080fd5b5061034c6106b936600461457f565b60116020526000908152604090205460ff1681565b3480156106da57600080fd5b506107027f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b0390911681526020016102c0565b34801561072657600080fd5b5061029e610735366004614746565b611b60565b34801561074657600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b34801561077a57600080fd5b50610316611bf5565b34801561078f57600080fd5b50610316611d81565b3480156107a457600080fd5b506102b6611f34565b3480156107b957600080fd5b50600a5461034c90600160a81b900460ff1681565b3480156107da57600080fd5b50600a5461055690600160e01b900460020b81565b3480156107fb57600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b34801561082f57600080fd5b5061029e61083e3660046147ae565b61201f565b34801561084f57600080fd5b50600b546105569060020b81565b34801561086957600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b34801561089d57600080fd5b5061029e6108ac3660046145f3565b6120f2565b3480156108bd57600080fd5b50600b54610556906601000000000000900460020b81565b3480156108e157600080fd5b506102e96108f036600461457f565b600c602052600090815260409020546001600160a01b031681565b34801561091757600080fd5b506102b660075481565b34801561092d57600080fd5b506102e97f000000000000000000000000000000000000000000000000000000000000000081565b34801561096157600080fd5b5061029e6109703660046147ae565b6121c2565b34801561098157600080fd5b506102e9610990366004614801565b612220565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600c60205260408082205490516370a0823160e01b8152306004820152919283929116906370a0823190602401602060405180830381865afa158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190614823565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600c6020526040908190205490516370a0823160e01b815230600482015292945016906370a0823190602401602060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad09190614823565b90509091565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b3f5760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6009546001600160a01b03163314610b8b5760405162461bcd60e51b8152600401610b369061483c565b6064610b978284614877565b60ff161115610bd05760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610b36565b600a805461ffff60a01b1916600160a81b60ff9384160260ff60a01b191617600160a01b9390921692909202179055565b6040516376beea2760e11b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ed7dd44e90602401602060405180830381865afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c919061489c565b9050600181151514610ccd5760405162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b6044820152606401610b36565b610cd5612258565b50610cde612268565b6000610ce8612573565b6001600160a01b0316630d1b5bed6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d499190614823565b90508015610e7657610db6610d5c612573565b610d857f0000000000000000000000000000000000000000000000000000000000000000612603565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612674565b610e1b610dc1612573565b610dea7f0000000000000000000000000000000000000000000000000000000000000000612603565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612674565b610e23612573565b6001600160a01b031663b27686c06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e5d57600080fd5b505af1158015610e71573d6000803e3d6000fd5b505050505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231610eaf612573565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f179190614823565b1180610fc1575060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231610f57612573565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbf9190614823565b115b1561102157610fce612573565b6001600160a01b031663d0b6ba2a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b505050505b61102b84846126cb565b50505050565b6009546001600160a01b0316331461105b5760405162461bcd60e51b8152600401610b369061483c565b60008160020b136110a15760405162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b6044820152606401610b36565b600b805462ffffff90921666010000000000000268ffffff00000000000019909216919091179055565b6000806110d786612a76565b90506001600160801b036001600160a01b0382161161115d5760006111056001600160a01b038316806148b9565b9050836001600160a01b0316856001600160a01b03161061113d57611138600160c01b876001600160801b031683612e95565b611155565b61115581876001600160801b0316600160c01b612e95565b9250506111d0565b600061117c6001600160a01b0383168068010000000000000000612e95565b9050836001600160a01b0316856001600160a01b0316106111b4576111af600160801b876001600160801b031683612e95565b6111cc565b6111cc81876001600160801b0316600160801b612e95565b9250505b50949350505050565b600a54600090600160c01b900463ffffffff166112215760405162461bcd60e51b8152600401610b36906020808252600490820152630545741560e41b604082015260600190565b604080516002808252606082018352600092602083019080368337019050509050600a60189054906101000a900463ffffffff1681600081518110611268576112686148ee565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110611297576112976148ee565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd906112fb908590600401614904565b600060405180830381865afa158015611318573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113409190810190614a17565b509050600081600081518110611358576113586148ee565b602002602001015182600181518110611373576113736148ee565b60200260200101516113859190614ae3565b600a549091506113a590600160c01b900463ffffffff1660030b82614b49565b935060008160060b1280156113d85750600a546113d290600160c01b900463ffffffff1660030b82614b87565b60060b15155b156113eb57836113e781614ba9565b9450505b50505090565b6013818154811061140157600080fd5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461147f5760405162461bcd60e51b81526020600482015260096024820152683737ba1030b236b4b760b91b6044820152606401610b36565b600f805460ff1916600117905560405163a34123a760e01b8152600287810b600483015286900b60248201526001600160801b03851660448201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a79060640160408051808303816000875af115801561150c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115309190614bcd565b50506040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d89061158d9030908a908a906001600160801b03908190600401614bf1565b60408051808303816000875af11580156115ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cf9190614c2e565b50508215611602576116027f0000000000000000000000000000000000000000000000000000000000000000848361300f565b8115611633576116337f0000000000000000000000000000000000000000000000000000000000000000838361300f565b6116c661163e612573565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156116a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190614823565b6117596116d1612573565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611735573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190614823565b505050505050565b604051632aaafb6d60e01b81523060048201523360248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632aaafb6d90604401602060405180830381865afa1580156117cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ef919061489c565b6118275760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610b36565b61182f612258565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bb9190614823565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119499190614823565b9050811561198d5761198d61195c612573565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169084612674565b80156119cf576119cf61199e612573565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083612674565b5050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a589190614c6f565b5050505050915050611acc817f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006110cb565b91505090565b600b54600090819060020b158015611af45750600b546301000000900460020b155b15611b0457506000905080611b59565b6000806000611b1387876131a3565b9450945050509250611b26878785613299565b9095509350611b3e6001600160801b03831686614d01565b9450611b536001600160801b03821685614d01565b93505050505b9250929050565b6009546001600160a01b03163314611b8a5760405162461bcd60e51b8152600401610b369061483c565b60008163ffffffff1611611bcf5760405162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b6044820152606401610b36565b600a805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b6040516370a0823160e01b8152306004820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c849190614823565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d129190614823565b600b549091506000908190611d3590600281810b9163010000009004900b611ad2565b91509150600080611d44611d81565b909250905081611d548786614d01565b611d5e9190614d01565b81611d698786614d01565b611d739190614d01565b975097505050505050509091565b600080600080611d8f610995565b91509150816000148015611da35750806001145b15611db45750600093849350915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600c60209081526040808320547f00000000000000000000000000000000000000000000000000000000000000008516845281842054825163182df0f560e01b8152925191861695169392859263182df0f592600480830193928290030181865afa158015611e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7b9190614823565b90506000826001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee19190614823565b90506000670de0b6b3a7640000611ef884896148b9565b611f029190614d19565b90506000670de0b6b3a7640000611f1984896148b9565b611f239190614d19565b919a91995090975050505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb99190614c6f565b505050505050905060007f00000000000000000000000000000000000000000000000000000000000000006001600160801b031660c0836001600160a01b0316846001600160a01b031661200d91906148b9565b61201892911c6148b9565b9392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461207c5760405162461bcd60e51b8152602060048201526002602482015261505360f01b6044820152606401610b36565b6120b06001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386612674565b6120e46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385612674565b801561102b5761102b614d2d565b604051632aaafb6d60e01b81523060048201523360248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632aaafb6d90604401602060405180830381865afa15801561215c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612180919061489c565b6121b85760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610b36565b6119cf82826126cb565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461207c5760405162461bcd60e51b815260206004820152600360248201526228299960e91b6044820152606401610b36565b6010602052816000526040600020818154811061223c57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000612262613351565b50600190565b6005546007546122789190614d43565b60035560065460085461228b9190614d43565b6004556003546001546000916122a091614d01565b905060006004546002546122b49190614d01565b600a54909150600160b01b900460ff16156124f457600a546000906064906122e690600160b01b900460ff16856148b9565b6122f09190614d19565b600a5490915060009060649061231090600160b01b900460ff16856148b9565b61231a9190614d19565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638bce6edd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190614d5a565b90506123aa612573565b604051637d89265d60e11b81526001600160a01b0383811660048301526024820186905260448201859052919091169063fb124cba90606401600060405180830381600087803b1580156123fd57600080fd5b505af1158015612411573d6000803e3d6000fd5b5050600a54600160b81b900460ff161591506124f0905057600a5460009060649061244690600160b81b900460ff16866148b9565b6124509190614d19565b600a5490915060009060649061247090600160b81b900460ff16866148b9565b61247a9190614d19565b9050612484612573565b604051637d89265d60e11b815233600482015260248101849052604481018390526001600160a01b03919091169063fb124cba90606401600060405180830381600087803b1580156124d557600080fd5b505af11580156124e9573d6000803e3d6000fd5b5050505050505b5050505b60015460025460035460045460408051948552602085019390935291830152606082015230907f1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac40808612249060800160405180910390a2505060006007819055600581905560088190556006819055600181905560038190556002819055600455565b604051630ccc6b1960e31b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063666358c890602401602060405180830381865afa1580156125da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125fe9190614d5a565b905090565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561264a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266e9190614823565b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526126c6908490613363565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561272b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061274f9190614c6f565b50505050509150508260020b600014801561276d57508160020b6000145b1561282457600b546301000000900460020b15801561278f5750600b5460020b155b1561279957505050565b600b546000906002906127b89080830b9063010000009004830b614d77565b6127c29190614db5565b600a54909150600160e01b900460020b806127dd8385614de6565b6127e79190614db5565b6127f19190614e2d565b600a54909350600160e01b900460020b8061280c8385614d77565b6128169190614db5565b6128209190614e2d565b9350505b61282f838383613435565b600061285a7f0000000000000000000000000000000000000000000000000000000000000000612603565b905060006128877f0000000000000000000000000000000000000000000000000000000000000000612603565b905081158015612895575080155b156128a1575050505050565b60006128ab6119d3565b90506000806128bb8585856135ff565b600a549193509150600160a01b900460ff161561290c576128de888884846136e3565b600b805465ffffffffffff1916630100000062ffffff8a81169190910262ffffff191691909117908a161790555b600a54600160a81b900460ff1615612a1d576129477f0000000000000000000000000000000000000000000000000000000000000000612603565b94506129727f0000000000000000000000000000000000000000000000000000000000000000612603565b600a5490945060649061298f90600160a81b900460ff16876148b9565b6129999190614d19565b600555600a546064906129b690600160a81b900460ff16866148b9565b6129c09190614d19565b6006556005546129f1907f000000000000000000000000000000000000000000000000000000000000000090613891565b612a1d7f0000000000000000000000000000000000000000000000000000000000000000600654613891565b600554600654604080518581526020810185905290810192909252606082015230907f90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b9060800160405180910390a25050505050505050565b60008060008360020b12612a8d578260020b612a9a565b8260020b612a9a90614eba565b9050612aa9620d89e719614ed7565b62ffffff16811115612ae15760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610b36565b600060018216612af557600160801b612b07565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612b46576080612b41826ffff97272373d413259a46990580e213a6148b9565b901c90505b6004821615612b70576080612b6b826ffff2e50f5f656932ef12357cf3c7fdcc6148b9565b901c90505b6008821615612b9a576080612b95826fffe5caca7e10e4e61c3624eaa0941cd06148b9565b901c90505b6010821615612bc4576080612bbf826fffcb9843d60f6159c9db58835c9266446148b9565b901c90505b6020821615612bee576080612be9826fff973b41fa98c081472e6896dfb254c06148b9565b901c90505b6040821615612c18576080612c13826fff2ea16466c96a3843ec78b326b528616148b9565b901c90505b6080821615612c42576080612c3d826ffe5dee046a99a2a811c461f1969c30536148b9565b901c90505b610100821615612c6d576080612c68826ffcbe86c7900a88aedcffc83b479aa3a46148b9565b901c90505b610200821615612c98576080612c93826ff987a7253ac413176f2b074cf7815e546148b9565b901c90505b610400821615612cc3576080612cbe826ff3392b0822b70005940c7a398e4b70f36148b9565b901c90505b610800821615612cee576080612ce9826fe7159475a2c29b7443b29c7fa6e889d96148b9565b901c90505b611000821615612d19576080612d14826fd097f3bdfd2022b8845ad8f792aa58256148b9565b901c90505b612000821615612d44576080612d3f826fa9f746462d870fdf8a65dc1f90e061e56148b9565b901c90505b614000821615612d6f576080612d6a826f70d869a156d2a1b890bb3df62baf32f76148b9565b901c90505b618000821615612d9a576080612d95826f31be135f97d08fd981231505542fcfa66148b9565b901c90505b62010000821615612dc6576080612dc1826f09aa508b5b7a84e1c677de54f3e99bc96148b9565b901c90505b62020000821615612df1576080612dec826e5d6af8dedb81196699c329225ee6046148b9565b901c90505b62040000821615612e1b576080612e16826d2216e584f5fa1ea926041bedfe986148b9565b901c90505b62080000821615612e43576080612e3e826b048a170391f7dc42444e8fa26148b9565b901c90505b60008460020b1315612e5e57612e5b81600019614d19565b90505b612e6d64010000000082614efa565b15612e79576001612e7c565b60005b612e8d9060ff16602083901c614d01565b949350505050565b600080806000198587098587029250828110838203039150508060001415612ecf5760008411612ec457600080fd5b508290049050612018565b808411612edb57600080fd5b6000848688098084039381119092039190506000612efb86196001614d01565b8616958690049593849004936000819003046001019050612f1c81846148b9565b909317926000612f2d8760036148b9565b6002189050612f3c81886148b9565b612f47906002614d43565b612f5190826148b9565b9050612f5d81886148b9565b612f68906002614d43565b612f7290826148b9565b9050612f7e81886148b9565b612f89906002614d43565b612f9390826148b9565b9050612f9f81886148b9565b612faa906002614d43565b612fb490826148b9565b9050612fc081886148b9565b612fcb906002614d43565b612fd590826148b9565b9050612fe181886148b9565b612fec906002614d43565b612ff690826148b9565b905061300281866148b9565b9998505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415613053576126c68282613ad6565b6000600182151514156130e5576001600160a01b038481166000908152600c60205260409081902054905163db006a7560e01b81526004810186905291169063db006a75906024016020604051808303816000875af11580156130ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130de9190614823565b9050613166565b6001600160a01b038481166000908152600c60205260409081902054905163852a12e360e01b81526004810186905291169063852a12e3906024016020604051808303816000875af115801561313f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131639190614823565b90505b801561102b57600f5460ff1661102b5760405162461bcd60e51b815260206004820152600260248201526110dd60f21b6044820152606401610b36565b604080513060601b6bffffffffffffffffffffffff191660208083019190915260e885811b603484015284901b60378301528251601a818403018152603a90920190925280519101206000908190819081908190819060405163514ea4bf60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063514ea4bf9060240160a060405180830381865afa158015613261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132859190614f0e565b939c929b5090995097509095509350505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156132fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133209190614c6f565b50505050505090506133448161333588612a76565b61333e88612a76565b87613c63565b9250925050935093915050565b613359613cff565b613361613dc9565b565b60006133b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613f399092919063ffffffff16565b8051909150156126c657808060200190518101906133d6919061489c565b6126c65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b36565b8160020b8360020b1261346f5760405162461bcd60e51b8152602060048201526002602482015261563160f01b6044820152606401610b36565b8060020b8360020b126134a95760405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606401610b36565b8060020b8260020b136134e35760405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606401610b36565b620d89e719600284900b12156135205760405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606401610b36565b61352d620d89e719614ed7565b60020b8260020b13156135675760405162461bcd60e51b8152602060048201526002602482015261563560f01b6044820152606401610b36565b600a5461357e90600160e01b900460020b84614f70565b60020b156135b35760405162461bcd60e51b81526020600482015260026024820152612b1b60f11b6044820152606401610b36565b600a546135ca90600160e01b900460020b83614f70565b60020b156126c65760405162461bcd60e51b8152602060048201526002602482015261563760f01b6044820152606401610b36565b600080828161360e82886148b9565b90508581111561367d57600a5460649061363290600160a01b900460ff16896148b9565b61363c9190614d19565b600a549094506136769060649061365d90600160a01b900460ff16896148b9565b6136679190614d19565b61367184876148b9565b613f48565b92506136d9565b600a5460649061369790600160a01b900460ff16886148b9565b6136a19190614d19565b600a549093506136d6906064906136c290600160a01b900460ff168a6148b9565b6136cc9190614d19565b6136718486614d19565b93505b5050935093915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137679190614c6f565b5050505050509050600061378e8261377e88612a76565b61378788612a76565b8787613f5e565b604051633c8a7d8d60e01b8152306004820152600288810b602483015287900b60448201526001600160801b038216606482015260a06084820152600060a48201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015613825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138499190614bcd565b5050806001600160801b03168560020b8760020b7f7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a560405160405180910390a4505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415613951576138d481614022565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631249c58b6203d090836040518363ffffffff1660e01b81526004016000604051808303818589803b15801561393357600080fd5b5088f1158015613947573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038281166000818152600c60205260409081902054905163095ea7b360e01b815292166004830152602482018390529063095ea7b3906044016020604051808303816000875af11580156139b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139d4919061489c565b506001600160a01b038281166000908152600c602052604080822054905163140e25ad60e31b8152600481018590529192169063a0712d68906024016020604051808303816000875af1158015613a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a539190614823565b905080156126c657604080518181526027818301527f6d696e74526573756c74206973206e6f7420302c207468657265207761732061606082015266371032b93937b960c91b60808201526020810183905290517f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad9181900360a00190a1505050565b600060018215151415613b835760405163db006a7560e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db006a75906024016020604051808303816000875af1158015613b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b6e9190614823565b905080613b7e57613b7e476140a6565b613c1e565b60405163852a12e360e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063852a12e3906024016020604051808303816000875af1158015613bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c0e9190614823565b905080613c1e57613c1e836140a6565b80156126c657600f5460ff166126c65760405162461bcd60e51b815260206004820152600a602482015269043657468206e6f7420360b41b6044820152606401610b36565b600080836001600160a01b0316856001600160a01b03161115613c84579293925b846001600160a01b0316866001600160a01b031611613caf57613ca885858561411b565b9150613cf6565b836001600160a01b0316866001600160a01b03161015613ce857613cd486858561411b565b9150613ce185878561418e565b9050613cf6565b613cf385858561418e565b90505b94509492505050565b600b5460020b158015613d1c5750600b546301000000900460020b155b15613d2357565b600b54600090613d4190600281810b9163010000009004900b6131a3565b5050600b549293506000928392508291508190613d6d90600281810b9163010000009004900b876141d8565b93509350935093506000856001600160801b03161115613da257613d918483614d43565b600155613d9e8382614d43565b6002555b600b54613dbd90600281810b9163010000009004900b6131a3565b50505050505050505050565b6000613df47f0000000000000000000000000000000000000000000000000000000000000000612603565b90506000613e217f0000000000000000000000000000000000000000000000000000000000000000612603565b9050600080613e2e610995565b90925090508115613e6557613e657f000000000000000000000000000000000000000000000000000000000000000083600161300f565b8015613e9757613e977f000000000000000000000000000000000000000000000000000000000000000082600161300f565b613ec07f0000000000000000000000000000000000000000000000000000000000000000612603565b600755613eec7f0000000000000000000000000000000000000000000000000000000000000000612603565b6008556007548410613f0057600554613f0e565b83600754613f0e9190614d43565b6007556008548310613f2257600654613f30565b82600854613f309190614d43565b60085550505050565b6060612e8d8484600085614350565b6000818310613f575781612018565b5090919050565b6000836001600160a01b0316856001600160a01b03161115613f7e579293925b846001600160a01b0316866001600160a01b031611613fa957613fa2858585614476565b9050614019565b836001600160a01b0316866001600160a01b0316101561400b576000613fd0878686614476565b90506000613fdf8789866144e0565b9050806001600160801b0316826001600160801b0316106140005780614002565b815b92505050614019565b6140168585846144e0565b90505b95945050505050565b80156140a357604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561408a57600080fd5b505af115801561409e573d6000803e3d6000fd5b505050505b50565b80156140a3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561410757600080fd5b505af1158015611759573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b0316111561413b579192915b6001600160a01b0384166141846fffffffffffffffffffffffffffffffff60601b606085901b1661416c8787614f92565b6001600160a01b0316866001600160a01b0316612e95565b612e8d9190614d19565b6000826001600160a01b0316846001600160a01b031611156141ae579192915b612e8d6001600160801b0383166141c58686614f92565b6001600160a01b0316600160601b612e95565b60008080806001600160801b038516156142965760405163a34123a760e01b8152600288810b600483015287900b60248201526001600160801b03861660448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a34123a79060640160408051808303816000875af115801561426c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142909190614bcd565b90945092505b6040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d8906142f19030908b908b906001600160801b03908190600401614bf1565b60408051808303816000875af115801561430f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143339190614c2e565b94989397506001600160801b039081169650909316935090915050565b6060824710156143b15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b36565b6001600160a01b0385163b6144085760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b36565b600080866001600160a01b031685876040516144249190614fe6565b60006040518083038185875af1925050503d8060008114614461576040519150601f19603f3d011682016040523d82523d6000602084013e614466565b606091505b50915091506111cc828286614516565b6000826001600160a01b0316846001600160a01b03161115614496579192915b60006144b9856001600160a01b0316856001600160a01b0316600160601b612e95565b90506140196144db84836144cd8989614f92565b6001600160a01b0316612e95565b61454f565b6000826001600160a01b0316846001600160a01b03161115614500579192915b612e8d6144db83600160601b6144cd8888614f92565b60608315614525575081612018565b8251156145355782518084602001fd5b8160405162461bcd60e51b8152600401610b369190615002565b806001600160801b038116811461456557600080fd5b919050565b6001600160a01b03811681146140a357600080fd5b60006020828403121561459157600080fd5b81356120188161456a565b60ff811681146140a357600080fd5b600080604083850312156145be57600080fd5b82356145c98161459c565b915060208301356145d98161459c565b809150509250929050565b8060020b81146140a357600080fd5b6000806040838503121561460657600080fd5b8235614611816145e4565b915060208301356145d9816145e4565b60006020828403121561463357600080fd5b8135612018816145e4565b6001600160801b03811681146140a357600080fd5b6000806000806080858703121561466957600080fd5b8435614674816145e4565b935060208501356146848161463e565b925060408501356146948161456a565b915060608501356146a48161456a565b939692955090935050565b6000602082840312156146c157600080fd5b5035919050565b80151581146140a357600080fd5b60008060008060008060c087890312156146ef57600080fd5b86356146fa816145e4565b9550602087013561470a816145e4565b9450604087013561471a8161463e565b9350606087013592506080870135915060a0870135614738816146c8565b809150509295509295509295565b60006020828403121561475857600080fd5b813563ffffffff8116811461201857600080fd5b60008083601f84011261477e57600080fd5b50813567ffffffffffffffff81111561479657600080fd5b602083019150836020828501011115611b5957600080fd5b600080600080606085870312156147c457600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156147e957600080fd5b6147f58782880161476c565b95989497509550505050565b6000806040838503121561481457600080fd5b50508035926020909101359150565b60006020828403121561483557600080fd5b5051919050565b6020808252600b908201526a3737ba1031b932b0ba37b960a91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561489457614894614861565b019392505050565b6000602082840312156148ae57600080fd5b8151612018816146c8565b60008160001904831182151516156148d3576148d3614861565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561494257835163ffffffff1683529284019291840191600101614920565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715614977576149776148d8565b604052919050565b600067ffffffffffffffff821115614999576149996148d8565b5060051b60200190565b600082601f8301126149b457600080fd5b815160206149c96149c48361497f565b61494e565b82815260059290921b840181019181810190868411156149e857600080fd5b8286015b84811015614a0c5780516149ff8161456a565b83529183019183016149ec565b509695505050505050565b60008060408385031215614a2a57600080fd5b825167ffffffffffffffff80821115614a4257600080fd5b818501915085601f830112614a5657600080fd5b81516020614a666149c48361497f565b82815260059290921b84018101918181019089841115614a8557600080fd5b948201945b83861015614ab35785518060060b8114614aa45760008081fd5b82529482019490820190614a8a565b91880151919650909350505080821115614acc57600080fd5b50614ad9858286016149a3565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615614b0e57614b0e614861565b81667fffffffffffff018313811615614b2957614b29614861565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80614b6057614b60614b33565b667fffffffffffff19821460001982141615614b7e57614b7e614861565b90059392505050565b60008260060b80614b9a57614b9a614b33565b808360060b0791505092915050565b60008160020b627fffff19811415614bc357614bc3614861565b6000190192915050565b60008060408385031215614be057600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b60008060408385031215614c4157600080fd5b8251614c4c8161463e565b60208401519092506145d98161463e565b805161ffff8116811461456557600080fd5b600080600080600080600060e0888a031215614c8a57600080fd5b8751614c958161456a565b6020890151909750614ca6816145e4565b9550614cb460408901614c5d565b9450614cc260608901614c5d565b9350614cd060808901614c5d565b925060a0880151614ce08161459c565b60c0890151909250614cf1816146c8565b8091505092959891949750929550565b60008219821115614d1457614d14614861565b500190565b600082614d2857614d28614b33565b500490565b634e487b7160e01b600052600160045260246000fd5b600082821015614d5557614d55614861565b500390565b600060208284031215614d6c57600080fd5b81516120188161456a565b60008160020b8360020b6000811281627fffff1901831281151615614d9e57614d9e614861565b81627fffff018313811615614b2957614b29614861565b60008160020b8360020b80614dcc57614dcc614b33565b627fffff19821460001982141615614b7e57614b7e614861565b60008160020b8360020b6000821282627fffff03821381151615614e0c57614e0c614861565b82627fffff19038212811615614e2457614e24614861565b50019392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615614e5957614e59614861565b627fffff196000851282811687830587121615614e7857614e78614861565b60008712925085820587128484161615614e9457614e94614861565b85850587128184161615614eaa57614eaa614861565b5050509290910295945050505050565b6000600160ff1b821415614ed057614ed0614861565b5060000390565b60008160020b627fffff19811415614ef157614ef1614861565b60000392915050565b600082614f0957614f09614b33565b500690565b600080600080600060a08688031215614f2657600080fd5b8551614f318161463e565b8095505060208601519350604086015192506060860151614f518161463e565b6080870151909250614f628161463e565b809150509295509295909350565b60008260020b80614f8357614f83614b33565b808360020b0791505092915050565b60006001600160a01b0383811690831681811015614fb257614fb2614861565b039392505050565b60005b83811015614fd5578181015183820152602001614fbd565b8381111561102b5750506000910152565b60008251614ff8818460208701614fba565b9190910192915050565b6020815260008251806020840152615021816040850160208701614fba565b601f01601f1916919091016040019291505056fea2646970667358221220398c78c3ffb9d2f08b3140bee4e340ff71f5ebb7aac0c766ba5b31877cd6cf8964736f6c634300080a0033",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend, params UniCompParam) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend, params)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiCaller) Decimals(opts *bind.CallOpts, arg0 common.Address) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "Decimals", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiSession) Decimals(arg0 common.Address) (uint8, error) {
	return _Api.Contract.Decimals(&_Api.CallOpts, arg0)
}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiCallerSession) Decimals(arg0 common.Address) (uint8, error) {
	return _Api.Contract.Decimals(&_Api.CallOpts, arg0)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCaller) UNIV3FACTORY(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "UNIV3_FACTORY")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCallerSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiCaller) CETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiSession) CETH() (common.Address, error) {
	return _Api.Contract.CETH(&_Api.CallOpts)
}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiCallerSession) CETH() (common.Address, error) {
	return _Api.Contract.CETH(&_Api.CallOpts)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCaller) CTOKEN(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CTOKEN", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCallerSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCallerSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiSession) Admin() (common.Address, error) {
	return _Api.Contract.Admin(&_Api.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiCallerSession) Admin() (common.Address, error) {
	return _Api.Contract.Admin(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCaller) CHigh(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cHigh")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCallerSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCaller) CLow(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cLow")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCallerSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiCaller) CompIn0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compIn0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiSession) CompIn0() (*big.Int, error) {
	return _Api.Contract.CompIn0(&_Api.CallOpts)
}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiCallerSession) CompIn0() (*big.Int, error) {
	return _Api.Contract.CompIn0(&_Api.CallOpts)
}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiCaller) CompIn1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compIn1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiSession) CompIn1() (*big.Int, error) {
	return _Api.Contract.CompIn1(&_Api.CallOpts)
}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiCallerSession) CompIn1() (*big.Int, error) {
	return _Api.Contract.CompIn1(&_Api.CallOpts)
}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiCaller) CompOut0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compOut0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiSession) CompOut0() (*big.Int, error) {
	return _Api.Contract.CompOut0(&_Api.CallOpts)
}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiCallerSession) CompOut0() (*big.Int, error) {
	return _Api.Contract.CompOut0(&_Api.CallOpts)
}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiCaller) CompOut1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compOut1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiSession) CompOut1() (*big.Int, error) {
	return _Api.Contract.CompOut1(&_Api.CallOpts)
}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiCallerSession) CompOut1() (*big.Int, error) {
	return _Api.Contract.CompOut1(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCaller) CompPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCallerSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCallerSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCallerSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// GetCAmounts is a free data retrieval call binding the contract method 0x06b0b656.
//
// Solidity: function getCAmounts() view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCaller) GetCAmounts(opts *bind.CallOpts) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getCAmounts")

	outstruct := new(struct {
		Amount0 *big.Int
		Amount1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetCAmounts is a free data retrieval call binding the contract method 0x06b0b656.
//
// Solidity: function getCAmounts() view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiSession) GetCAmounts() (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetCAmounts(&_Api.CallOpts)
}

// GetCAmounts is a free data retrieval call binding the contract method 0x06b0b656.
//
// Solidity: function getCAmounts() view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCallerSession) GetCAmounts() (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetCAmounts(&_Api.CallOpts)
}

// GetCompAmounts is a free data retrieval call binding the contract method 0xc5f20cc7.
//
// Solidity: function getCompAmounts() view returns(uint256, uint256)
func (_Api *ApiCaller) GetCompAmounts(opts *bind.CallOpts) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getCompAmounts")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetCompAmounts is a free data retrieval call binding the contract method 0xc5f20cc7.
//
// Solidity: function getCompAmounts() view returns(uint256, uint256)
func (_Api *ApiSession) GetCompAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetCompAmounts(&_Api.CallOpts)
}

// GetCompAmounts is a free data retrieval call binding the contract method 0xc5f20cc7.
//
// Solidity: function getCompAmounts() view returns(uint256, uint256)
func (_Api *ApiCallerSession) GetCompAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetCompAmounts(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCaller) GetPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCaller) GetQuoteAtTick(opts *bind.CallOpts, tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getQuoteAtTick", tick, baseAmount, baseToken, quoteToken)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCallerSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetTickPrice is a free data retrieval call binding the contract method 0xc7f1afba.
//
// Solidity: function getTickPrice() view returns(uint256)
func (_Api *ApiCaller) GetTickPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTickPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTickPrice is a free data retrieval call binding the contract method 0xc7f1afba.
//
// Solidity: function getTickPrice() view returns(uint256)
func (_Api *ApiSession) GetTickPrice() (*big.Int, error) {
	return _Api.Contract.GetTickPrice(&_Api.CallOpts)
}

// GetTickPrice is a free data retrieval call binding the contract method 0xc7f1afba.
//
// Solidity: function getTickPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetTickPrice() (*big.Int, error) {
	return _Api.Contract.GetTickPrice(&_Api.CallOpts)
}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiCaller) GetTotalAmounts(opts *bind.CallOpts) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTotalAmounts")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiSession) GetTotalAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.CallOpts)
}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiCallerSession) GetTotalAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCaller) GetTwap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTwap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCallerSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCaller) GetUniAmounts(opts *bind.CallOpts, tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getUniAmounts", tickLower, tickUpper)

	outstruct := new(struct {
		Amount0 *big.Int
		Amount1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCallerSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCaller) IndividualCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "individualCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCallerSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiCaller) LastCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "lastCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiSession) LastCount() (*big.Int, error) {
	return _Api.Contract.LastCount(&_Api.CallOpts)
}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiCallerSession) LastCount() (*big.Int, error) {
	return _Api.Contract.LastCount(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCaller) MaxTwapDeviation(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "maxTwapDeviation")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCallerSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiCaller) Motivator(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivator", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiSession) Motivator(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivator(&_Api.CallOpts, arg0, arg1)
}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiCallerSession) Motivator(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivator(&_Api.CallOpts, arg0, arg1)
}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiCaller) MotivatorFeeRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivatorFeeRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiSession) MotivatorFeeRate() (uint8, error) {
	return _Api.Contract.MotivatorFeeRate(&_Api.CallOpts)
}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiCallerSession) MotivatorFeeRate() (uint8, error) {
	return _Api.Contract.MotivatorFeeRate(&_Api.CallOpts)
}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiCaller) Motivators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiSession) Motivators(arg0 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivators(&_Api.CallOpts, arg0)
}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiCallerSession) Motivators(arg0 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivators(&_Api.CallOpts, arg0)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCaller) Pool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCallerSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCaller) Protocol(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocol")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCallerSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiCaller) ProtocolFeeRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocolFeeRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiSession) ProtocolFeeRate() (uint8, error) {
	return _Api.Contract.ProtocolFeeRate(&_Api.CallOpts)
}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiCallerSession) ProtocolFeeRate() (uint8, error) {
	return _Api.Contract.ProtocolFeeRate(&_Api.CallOpts)
}

// Quoteamount is a free data retrieval call binding the contract method 0xc387f25c.
//
// Solidity: function quoteamount() view returns(uint128)
func (_Api *ApiCaller) Quoteamount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "quoteamount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Quoteamount is a free data retrieval call binding the contract method 0xc387f25c.
//
// Solidity: function quoteamount() view returns(uint128)
func (_Api *ApiSession) Quoteamount() (*big.Int, error) {
	return _Api.Contract.Quoteamount(&_Api.CallOpts)
}

// Quoteamount is a free data retrieval call binding the contract method 0xc387f25c.
//
// Solidity: function quoteamount() view returns(uint128)
func (_Api *ApiCallerSession) Quoteamount() (*big.Int, error) {
	return _Api.Contract.Quoteamount(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCaller) TickSpacing(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "tickSpacing")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCallerSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCaller) Token0(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token0")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCallerSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCaller) Token1(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token1")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCallerSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCaller) TwapDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "twapDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCallerSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCaller) UniPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "uniPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCallerSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCaller) VaultCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaultCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCallerSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactor) CallFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "callFunds")
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactorSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactor) Emergency(opts *bind.TransactOpts, tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "emergency", tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactorSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns()
func (_Api *ApiTransactor) Rebalance(opts *bind.TransactOpts, newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalance", newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns()
func (_Api *ApiSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns()
func (_Api *ApiTransactorSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// RebalanceByVault is a paid mutator transaction binding the contract method 0xe50c5de6.
//
// Solidity: function rebalanceByVault(int24 newLow, int24 newHigh) returns()
func (_Api *ApiTransactor) RebalanceByVault(opts *bind.TransactOpts, newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalanceByVault", newLow, newHigh)
}

// RebalanceByVault is a paid mutator transaction binding the contract method 0xe50c5de6.
//
// Solidity: function rebalanceByVault(int24 newLow, int24 newHigh) returns()
func (_Api *ApiSession) RebalanceByVault(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.RebalanceByVault(&_Api.TransactOpts, newLow, newHigh)
}

// RebalanceByVault is a paid mutator transaction binding the contract method 0xe50c5de6.
//
// Solidity: function rebalanceByVault(int24 newLow, int24 newHigh) returns()
func (_Api *ApiTransactorSession) RebalanceByVault(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.RebalanceByVault(&_Api.TransactOpts, newLow, newHigh)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactor) SetMaxTwapDeviation(opts *bind.TransactOpts, _maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setMaxTwapDeviation", _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactorSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetPortionRatio is a paid mutator transaction binding the contract method 0x0be3eca0.
//
// Solidity: function setPortionRatio(uint8 uni, uint8 comp) returns()
func (_Api *ApiTransactor) SetPortionRatio(opts *bind.TransactOpts, uni uint8, comp uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setPortionRatio", uni, comp)
}

// SetPortionRatio is a paid mutator transaction binding the contract method 0x0be3eca0.
//
// Solidity: function setPortionRatio(uint8 uni, uint8 comp) returns()
func (_Api *ApiSession) SetPortionRatio(uni uint8, comp uint8) (*types.Transaction, error) {
	return _Api.Contract.SetPortionRatio(&_Api.TransactOpts, uni, comp)
}

// SetPortionRatio is a paid mutator transaction binding the contract method 0x0be3eca0.
//
// Solidity: function setPortionRatio(uint8 uni, uint8 comp) returns()
func (_Api *ApiTransactorSession) SetPortionRatio(uni uint8, comp uint8) (*types.Transaction, error) {
	return _Api.Contract.SetPortionRatio(&_Api.TransactOpts, uni, comp)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiTransactor) SetProtocol(opts *bind.TransactOpts, _protocol common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setProtocol", _protocol)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiSession) SetProtocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetProtocol(&_Api.TransactOpts, _protocol)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiTransactorSession) SetProtocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetProtocol(&_Api.TransactOpts, _protocol)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactor) SetTwapDuration(opts *bind.TransactOpts, _twapDuration uint32) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTwapDuration", _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactorSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3MintCallback(opts *bind.TransactOpts, amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3MintCallback", amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// ApiAllocFeesIterator is returned from FilterAllocFees and is used to iterate over the raw logs and unpacked data for AllocFees events raised by the Api contract.
type ApiAllocFeesIterator struct {
	Event *ApiAllocFees // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiAllocFeesIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiAllocFees)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiAllocFees)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiAllocFeesIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiAllocFeesIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiAllocFees represents a AllocFees event raised by the Api contract.
type ApiAllocFees struct {
	Arg0   common.Address
	UFees0 *big.Int
	UFees1 *big.Int
	LFees0 *big.Int
	LFees1 *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterAllocFees is a free log retrieval operation binding the contract event 0x1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac4080861224.
//
// Solidity: event AllocFees(address indexed arg0, uint256 uFees0, uint256 uFees1, uint256 lFees0, uint256 lFees1)
func (_Api *ApiFilterer) FilterAllocFees(opts *bind.FilterOpts, arg0 []common.Address) (*ApiAllocFeesIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "AllocFees", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiAllocFeesIterator{contract: _Api.contract, event: "AllocFees", logs: logs, sub: sub}, nil
}

// WatchAllocFees is a free log subscription operation binding the contract event 0x1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac4080861224.
//
// Solidity: event AllocFees(address indexed arg0, uint256 uFees0, uint256 uFees1, uint256 lFees0, uint256 lFees1)
func (_Api *ApiFilterer) WatchAllocFees(opts *bind.WatchOpts, sink chan<- *ApiAllocFees, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "AllocFees", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiAllocFees)
				if err := _Api.contract.UnpackLog(event, "AllocFees", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAllocFees is a log parse operation binding the contract event 0x1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac4080861224.
//
// Solidity: event AllocFees(address indexed arg0, uint256 uFees0, uint256 uFees1, uint256 lFees0, uint256 lFees1)
func (_Api *ApiFilterer) ParseAllocFees(log types.Log) (*ApiAllocFees, error) {
	event := new(ApiAllocFees)
	if err := _Api.contract.UnpackLog(event, "AllocFees", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiBurnUniV3LiquidityIterator is returned from FilterBurnUniV3Liquidity and is used to iterate over the raw logs and unpacked data for BurnUniV3Liquidity events raised by the Api contract.
type ApiBurnUniV3LiquidityIterator struct {
	Event *ApiBurnUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiBurnUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiBurnUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiBurnUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiBurnUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiBurnUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiBurnUniV3Liquidity represents a BurnUniV3Liquidity event raised by the Api contract.
type ApiBurnUniV3Liquidity struct {
	CLow      *big.Int
	CHigh     *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBurnUniV3Liquidity is a free log retrieval operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterBurnUniV3Liquidity(opts *bind.FilterOpts, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (*ApiBurnUniV3LiquidityIterator, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiBurnUniV3LiquidityIterator{contract: _Api.contract, event: "BurnUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchBurnUniV3Liquidity is a free log subscription operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchBurnUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiBurnUniV3Liquidity, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiBurnUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnUniV3Liquidity is a log parse operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseBurnUniV3Liquidity(log types.Log) (*ApiBurnUniV3Liquidity, error) {
	event := new(ApiBurnUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMintUniV3LiquidityIterator is returned from FilterMintUniV3Liquidity and is used to iterate over the raw logs and unpacked data for MintUniV3Liquidity events raised by the Api contract.
type ApiMintUniV3LiquidityIterator struct {
	Event *ApiMintUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMintUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMintUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMintUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMintUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMintUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMintUniV3Liquidity represents a MintUniV3Liquidity event raised by the Api contract.
type ApiMintUniV3Liquidity struct {
	NewLow    *big.Int
	NewHigh   *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMintUniV3Liquidity is a free log retrieval operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterMintUniV3Liquidity(opts *bind.FilterOpts, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (*ApiMintUniV3LiquidityIterator, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiMintUniV3LiquidityIterator{contract: _Api.contract, event: "MintUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchMintUniV3Liquidity is a free log subscription operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchMintUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiMintUniV3Liquidity, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMintUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMintUniV3Liquidity is a log parse operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseMintUniV3Liquidity(log types.Log) (*ApiMintUniV3Liquidity, error) {
	event := new(ApiMintUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMyLogIterator is returned from FilterMyLog and is used to iterate over the raw logs and unpacked data for MyLog events raised by the Api contract.
type ApiMyLogIterator struct {
	Event *ApiMyLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMyLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMyLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMyLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMyLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMyLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMyLog represents a MyLog event raised by the Api contract.
type ApiMyLog struct {
	Arg0 string
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterMyLog is a free log retrieval operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) FilterMyLog(opts *bind.FilterOpts) (*ApiMyLogIterator, error) {

	logs, sub, err := _Api.contract.FilterLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return &ApiMyLogIterator{contract: _Api.contract, event: "MyLog", logs: logs, sub: sub}, nil
}

// WatchMyLog is a free log subscription operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) WatchMyLog(opts *bind.WatchOpts, sink chan<- *ApiMyLog) (event.Subscription, error) {

	logs, sub, err := _Api.contract.WatchLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMyLog)
				if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMyLog is a log parse operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) ParseMyLog(log types.Log) (*ApiMyLog, error) {
	event := new(ApiMyLog)
	if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiRebalanceIterator is returned from FilterRebalance and is used to iterate over the raw logs and unpacked data for Rebalance events raised by the Api contract.
type ApiRebalanceIterator struct {
	Event *ApiRebalance // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiRebalanceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiRebalance)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiRebalance)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiRebalanceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiRebalanceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiRebalance represents a Rebalance event raised by the Api contract.
type ApiRebalance struct {
	Arg0 common.Address
	U0   *big.Int
	U1   *big.Int
	C0   *big.Int
	C1   *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRebalance is a free log retrieval operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) FilterRebalance(opts *bind.FilterOpts, arg0 []common.Address) (*ApiRebalanceIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiRebalanceIterator{contract: _Api.contract, event: "Rebalance", logs: logs, sub: sub}, nil
}

// WatchRebalance is a free log subscription operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) WatchRebalance(opts *bind.WatchOpts, sink chan<- *ApiRebalance, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiRebalance)
				if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRebalance is a log parse operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) ParseRebalance(log types.Log) (*ApiRebalance, error) {
	event := new(ApiRebalance)
	if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
