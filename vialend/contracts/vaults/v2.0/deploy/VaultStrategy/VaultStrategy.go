// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"_contracts\",\"type\":\"address[10]\"},{\"internalType\":\"uint8\",\"name\":\"_uniPortion\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_compPortion\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_protocolFee\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"_feetier\",\"type\":\"uint24\"},{\"internalType\":\"uint128\",\"name\":\"_quoamount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"BurnUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"MintUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"VaultWithdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"U3Fees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"U3Fees1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LcFees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"LcFees1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AccruedProtocolFees0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AccruedProtocolFees1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNIV3_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_CETH\",\"outputs\":[{\"internalType\":\"contractICEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_CTOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WETH\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cHigh\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cLow\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curComp0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curComp1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decenter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"redeemType\",\"type\":\"bool\"}],\"name\":\"emergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getQuoteAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTwap\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getUniAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"individualCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoamount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"}],\"name\":\"rebalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ratio\",\"type\":\"uint8\"}],\"name\":\"setCompPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ratio\",\"type\":\"uint8\"}],\"name\":\"setUniPortionRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"setprotocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniPortion\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"vaultWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x6101a06040526013805460ff191690553480156200001c57600080fd5b5060405162004fe638038062004fe68339810160408190526200003f9162000505565b6001600055336080528551600c80546001600160a01b03199081166001600160a01b0393841617909155602080890151600b805490931690841617909155610120880151821660a052610100880151821660c090815288015160e089015160408051630b4c774160e11b815292851660048401529316602482015262ffffff851660448201529151731f98431c8ad98523631ae4a59f267346ea31f98492631698ee829260648083019391928290030181865afa15801562000105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012b9190620005f2565b6001600160a01b031661016081905260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa15801562000176573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200019c9190620005f2565b6001600160a01b0316610100816001600160a01b031681525050610160516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021e9190620005f2565b6001600160a01b03166101205285600760200201516001600160a01b0316610100516001600160a01b03161415620002a95760a0860151610100516001600160a01b039081166000908152600e602052604080822080546001600160a01b031990811695851695909517905560808a01516101205184168352912080549093169116179055620002fd565b6080860151610100516001600160a01b039081166000908152600e602052604080822080546001600160a01b031990811695851695909517905560a08a015161012051841683529120805490931691161790555b6040808701516001600160a01b0390811660e05260608801518116610140526101605182516334324e9f60e21b8152925191169163d0c93a7c9160048083019260209291908290030181865afa1580156200035c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000382919062000617565b600c805466ffffffffffffff60b81b1916600160d81b62ffffff939093169290920263ffffffff60b81b191691909117600160b91b179055600d805462ffffff60301b1916674e200000000000001790556001600160801b038116610180526064620003ef85876200063c565b60ff161115620004455760405162461bcd60e51b815260206004820152601360248201527f706f7274696f6e20756e692b636f6d3e31303000000000000000000000000000604482015260640160405180910390fd5b5050600c805461ffff60a01b1916600160a01b60ff9586160260ff60a81b191617600160a81b938516939093029290921760ff60b01b1916600160b01b91909316029190911790555062000670565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620004c257600080fd5b919050565b805160ff81168114620004c257600080fd5b805162ffffff81168114620004c257600080fd5b80516001600160801b0381168114620004c257600080fd5b6000806000806000806101e087890312156200052057600080fd5b87601f8801126200053057600080fd5b6040516101408082016001600160401b038111838210171562000557576200055762000494565b6040528801818a8211156200056b57600080fd5b895b8281101562000590576200058181620004aa565b8252602091820191016200056d565b5050819750620005a081620004c7565b96505050620005b36101608801620004c7565b9350620005c46101808801620004c7565b9250620005d56101a08801620004d9565b9150620005e66101c08801620004ed565b90509295509295509295565b6000602082840312156200060557600080fd5b6200061082620004aa565b9392505050565b6000602082840312156200062a57600080fd5b81518060020b81146200061057600080fd5b600060ff821660ff84168060ff038211156200066857634e487b7160e01b600052601160045260246000fd5b019392505050565b60805160a05160c05160e051610100516101205161014051610160516101805161473e620008a86000396000818161034c01526117b601526000818161031801528181610e1b01528181611232015281816112b701528181611ac701528181611ba001528181611c0d0152818161273b015281816127c901528181612cff01528181612ded0152818161380a015261389b01526000818161039801528181612eee015281816131e301526132830152600081816107be015281816110fe0152818161137b015281816114c301528181611538015281816116820152818161175c015281816117f801528181611a0c01528181611b5a01528181611db001528181611e7301528181611f16015281816129240152818161350001526139e60152600081816102c4015281816110a40152818161134a015281816113e401528181611459015281816115ec01528181611702015281816117d70152818161198c01528181611b2601528181611d8301528181611e4801528181611eec01528181612884015281816134ce015261394801526000818161082c0152818161253a01528181612eab0152818161361d015261369c01526000818161090e01528181610a5801528181610ff7015281816110c601528181611120015281816113ba015281816114990152818161157201528181611724015261177e0152600081816108ba0152818161093b015281816109e801528181610b3b01528181610f51015281816111b0015261188a01526000610707015261473e6000f3fe6080604052600436106102485760003560e01c80637c7311fe11610138578063cf8d7e25116100b0578063e0af361611610077578063e0af36161461081a578063e7c7cb911461084e578063e9ee793214610872578063f851a440146108a8578063fa461e33146108dc578063fbfa77cf146108fc57005b8063cf8d7e251461076a578063d0c93a7c1461078b578063d21220a7146107ac578063d3487997146107e0578063d368867f1461080057005b8063b0e21e8a116100ff578063b0e21e8a146106b4578063c433c80a146106d5578063c45a0155146106f5578063c4a7761e14610729578063c8a746a61461073e578063ccac7d8b1461075457005b80637c7311fe146106145780638ce74426146106295780638e843c6c1461064957806398d5fdca1461066a5780639d371c301461067f57005b8063393ed075116101cb5780634f82f8e1116101925780634f82f8e1146105345780635d752a9a14610554578063624a177a1461057c57806371c851dd1461059c5780637a0ddeef146105cc5780637a89cdd3146105ec57005b8063393ed075146104465780633aaa36e6146104865780633c1bda09146104de5780633cbff3fe146104f457806343c57a271461051457005b806317f8f9fa1161020f57806317f8f9fa1461033a5780631c8941b2146103865780632612abf8146103ba57806326d89545146103da57806331dc5b951461041357005b80630276650b1461025157806302d05d3f1461027a5780630dfe1681146102b25780630f17937c146102e657806316f0115b1461030657005b3661024f57005b005b34801561025d57600080fd5b5061026760125481565b6040519081526020015b60405180910390f35b34801561028657600080fd5b50600b5461029a906001600160a01b031681565b6040516001600160a01b039091168152602001610271565b3480156102be57600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f257600080fd5b5061024f610301366004613c7e565b610930565b34801561031257600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561034657600080fd5b5061036e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b039091168152602001610271565b34801561039257600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103c657600080fd5b5061024f6103d5366004613cb0565b6109dd565b3480156103e657600080fd5b50600c546103fe90600160b81b900463ffffffff1681565b60405163ffffffff9091168152602001610271565b34801561041f57600080fd5b50600c5461043490600160a01b900460ff1681565b60405160ff9091168152602001610271565b34801561045257600080fd5b50610466610461366004613cdc565b610a47565b604080519485526020850193909352918301526060820152608001610271565b34801561049257600080fd5b50600554600654600754600854600954600a546104b195949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610271565b3480156104ea57600080fd5b5061026760115481565b34801561050057600080fd5b5061024f61050f366004613d15565b610b30565b34801561052057600080fd5b5061026761052f366004613d47565b610be8565b34801561054057600080fd5b5061029a61054f366004613da3565b610cf6565b34801561056057600080fd5b50610569610d2e565b60405160029190910b8152602001610271565b34801561058857600080fd5b5061024f610597366004613c7e565b610f46565b3480156105a857600080fd5b506105bc6105b7366004613dc5565b610fea565b6040519015158152602001610271565b3480156105d857600080fd5b5061024f6105e7366004613e08565b6111a5565b3480156105f857600080fd5b5061029a731f98431c8ad98523631ae4a59f267346ea31f98481565b34801561062057600080fd5b5061024f611567565b34801561063557600080fd5b50600c5461029a906001600160a01b031681565b34801561065557600080fd5b50600d54610569906301000000900460020b81565b34801561067657600080fd5b506102676117a7565b34801561068b57600080fd5b5061069f61069a366004613cdc565b611821565b60408051928352602083019190915201610271565b3480156106c057600080fd5b50600c5461043490600160b01b900460ff1681565b3480156106e157600080fd5b5061024f6106f0366004613e78565b61187f565b34801561070157600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561073557600080fd5b5061069f611932565b34801561074a57600080fd5b50610267600f5481565b34801561076057600080fd5b5061026760105481565b34801561077657600080fd5b50600c5461043490600160a81b900460ff1681565b34801561079757600080fd5b50600c5461056990600160d81b900460020b81565b3480156107b857600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107ec57600080fd5b5061024f6107fb366004613ee7565b611abc565b34801561080c57600080fd5b50600d546105699060020b81565b34801561082657600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561085a57600080fd5b50600d54610569906601000000000000900460020b81565b34801561087e57600080fd5b5061029a61088d366004613cb0565b600e602052600090815260409020546001600160a01b031681565b3480156108b457600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156108e857600080fd5b5061024f6108f7366004613ee7565b611b95565b34801561090857600080fd5b5061029a7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109815760405162461bcd60e51b815260040161097890613f3a565b60405180910390fd5b60648160ff1611156109bd5760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610978565b600c805460ff909216600160a81b0260ff60a81b19909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a255760405162461bcd60e51b815260040161097890613f3a565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600080600080610a55611bf3565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0b6ba2a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ab157600080fd5b505af1158015610ac5573d6000803e3d6000fd5b50505050610ad38686611c03565b6040805185815260208101859052908101839052606081018290529397509195509350915030907f90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b9060800160405180910390a292959194509250565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b785760405162461bcd60e51b815260040161097890613f3a565b60008160020b13610bbe5760405162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b6044820152606401610978565b600d805462ffffff90921666010000000000000268ffffff00000000000019909216919091179055565b600080610bf486611f48565b90506001600160801b036001600160a01b03821611610c7a576000610c226001600160a01b03831680613f73565b9050836001600160a01b0316856001600160a01b031610610c5a57610c55600160c01b876001600160801b031683612367565b610c72565b610c7281876001600160801b0316600160c01b612367565b925050610ced565b6000610c996001600160a01b0383168068010000000000000000612367565b9050836001600160a01b0316856001600160a01b031610610cd157610ccc600160801b876001600160801b031683612367565b610ce9565b610ce981876001600160801b0316600160801b612367565b9250505b50949350505050565b60146020528160005260406000208181548110610d1257600080fd5b6000918252602090912001546001600160a01b03169150829050565b600c54600090600160b81b900463ffffffff16610d765760405162461bcd60e51b8152600401610978906020808252600490820152630545741560e41b604082015260600190565b604080516002808252606082018352600092602083019080368337019050509050600c60179054906101000a900463ffffffff1681600081518110610dbd57610dbd613fa8565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610dec57610dec613fa8565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd90610e50908590600401613fbe565b600060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e9591908101906140d1565b509050600081600081518110610ead57610ead613fa8565b602002602001015182600181518110610ec857610ec8613fa8565b6020026020010151610eda919061419d565b600c54909150610efa90600160b81b900463ffffffff1660030b82614203565b935060008160060b128015610f2d5750600c54610f2790600160b81b900463ffffffff1660030b82614241565b60060b15155b15610f405783610f3c81614263565b9450505b50505090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f8e5760405162461bcd60e51b815260040161097890613f3a565b60648160ff161115610fca5760405162461bcd60e51b8152602060048201526005602482015264726174696f60d81b6044820152606401610978565b600c805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110505760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610978565b600061105a611bf3565b9050806110915760405162461bcd60e51b8152602060048201526005602482015264616c6c6f6360d81b6044820152606401610978565b83156110eb576110eb6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000866124e1565b8215611145576111456001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000856124e1565b611150600080611c03565b505060408051878152602081018790526001600160a01b03891693507f97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de92500160405180910390a260019150505b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111ed5760405162461bcd60e51b815260040161097890613f3a565b6013805460ff1916600117905560405163a34123a760e01b8152600287810b600483015286900b60248201526001600160801b03851660448201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a34123a79060640160408051808303816000875af115801561127a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129e9190614287565b50506040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d8906112fb9030908a908a906001600160801b039081906004016142ab565b60408051808303816000875af1158015611319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133d91906142e8565b50508215611370576113707f00000000000000000000000000000000000000000000000000000000000000008483612538565b81156113a1576113a17f00000000000000000000000000000000000000000000000000000000000000008383612538565b6040516370a0823160e01b8152306004820152611480907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f9190614317565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906124e1565b6040516370a0823160e01b815230600482015261155f907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e9190614317565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906124e1565b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115cb5760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b6044820152606401610978565b6115d3611bf3565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561163b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165f9190614317565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ed9190614317565b90508115611749576117496001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000846124e1565b80156117a3576117a36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836124e1565b5050565b600061181c6117b4610d2e565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610be8565b905090565b600080600080600061183387876126cc565b94509450505092506118468787856127c2565b909550935061185e6001600160801b03831686614330565b94506118736001600160801b03821685614330565b93505050509250929050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118c75760405162461bcd60e51b815260040161097890613f3a565b60008163ffffffff161161190c5760405162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b6044820152606401610978565b600c805463ffffffff909216600160b81b0263ffffffff60b81b19909216919091179055565b600d5460009081908190819061195690600281810b9163010000009004900b611821565b9150915060008061196561287a565b6040516370a0823160e01b8152306004820152919350915060009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156119d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f79190614317565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7f9190614317565b909250905081611a8f8588614330565b611a999190614330565b81611aa48588614330565b611aae9190614330565b975097505050505050509091565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611b195760405162461bcd60e51b8152602060048201526002602482015261505360f01b6044820152606401610978565b611b4d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633866124e1565b611b816001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633856124e1565b8015611b8f57611b8f614348565b50505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611b195760405162461bcd60e51b815260206004820152600360248201526228299960e91b6044820152606401610978565b6000611bfd6129bf565b50600190565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d9190614370565b50505050509150508660020b6000148015611cab57508560020b6000145b15611d7157600d546301000000900460020b158015611ccd5750600d5460020b155b15611ce657600080600080945094509450945050611f3f565b600d54600090600290611d059080830b9063010000009004830b614402565b611d0f9190614440565b600c54909150600160d81b900460020b80611d2a8385614471565b611d349190614440565b611d3e91906144b8565b600c54909750600160d81b900460020b80611d598385614402565b611d639190614440565b611d6d91906144b8565b9750505b611d7c8787836129d1565b6000611da77f0000000000000000000000000000000000000000000000000000000000000000612b9b565b90506000611dd47f0000000000000000000000000000000000000000000000000000000000000000612b9b565b9050611de08282612c0c565b600c549198509650600160a01b900460ff1615611e3157611e0389898989612cfb565b600d805465ffffffffffff1916630100000062ffffff8b81169190910262ffffff191691909117908b161790555b600c54600160a81b900460ff1615611f3b57611e6c7f0000000000000000000000000000000000000000000000000000000000000000612b9b565b9150611e977f0000000000000000000000000000000000000000000000000000000000000000612b9b565b600c54909150606490611eb490600160a81b900460ff1684613f73565b611ebe9190614545565b600c54909550606490611edb90600160a81b900460ff1683613f73565b611ee59190614545565b9350611f117f000000000000000000000000000000000000000000000000000000000000000086612ea9565b611f3b7f000000000000000000000000000000000000000000000000000000000000000085612ea9565b5050505b92959194509250565b60008060008360020b12611f5f578260020b611f6c565b8260020b611f6c90614559565b9050611f7b620d89e719614576565b62ffffff16811115611fb35760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610978565b600060018216611fc757600160801b611fd9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612018576080612013826ffff97272373d413259a46990580e213a613f73565b901c90505b600482161561204257608061203d826ffff2e50f5f656932ef12357cf3c7fdcc613f73565b901c90505b600882161561206c576080612067826fffe5caca7e10e4e61c3624eaa0941cd0613f73565b901c90505b6010821615612096576080612091826fffcb9843d60f6159c9db58835c926644613f73565b901c90505b60208216156120c05760806120bb826fff973b41fa98c081472e6896dfb254c0613f73565b901c90505b60408216156120ea5760806120e5826fff2ea16466c96a3843ec78b326b52861613f73565b901c90505b608082161561211457608061210f826ffe5dee046a99a2a811c461f1969c3053613f73565b901c90505b61010082161561213f57608061213a826ffcbe86c7900a88aedcffc83b479aa3a4613f73565b901c90505b61020082161561216a576080612165826ff987a7253ac413176f2b074cf7815e54613f73565b901c90505b610400821615612195576080612190826ff3392b0822b70005940c7a398e4b70f3613f73565b901c90505b6108008216156121c05760806121bb826fe7159475a2c29b7443b29c7fa6e889d9613f73565b901c90505b6110008216156121eb5760806121e6826fd097f3bdfd2022b8845ad8f792aa5825613f73565b901c90505b612000821615612216576080612211826fa9f746462d870fdf8a65dc1f90e061e5613f73565b901c90505b61400082161561224157608061223c826f70d869a156d2a1b890bb3df62baf32f7613f73565b901c90505b61800082161561226c576080612267826f31be135f97d08fd981231505542fcfa6613f73565b901c90505b62010000821615612298576080612293826f09aa508b5b7a84e1c677de54f3e99bc9613f73565b901c90505b620200008216156122c35760806122be826e5d6af8dedb81196699c329225ee604613f73565b901c90505b620400008216156122ed5760806122e8826d2216e584f5fa1ea926041bedfe98613f73565b901c90505b62080000821615612315576080612310826b048a170391f7dc42444e8fa2613f73565b901c90505b60008460020b13156123305761232d81600019614545565b90505b61233f64010000000082614599565b1561234b57600161234e565b60005b61235f9060ff16602083901c614330565b949350505050565b6000808060001985870985870292508281108382030391505080600014156123a1576000841161239657600080fd5b50829004905061119e565b8084116123ad57600080fd5b60008486880980840393811190920391905060006123cd86196001614330565b86169586900495938490049360008190030460010190506123ee8184613f73565b9093179260006123ff876003613f73565b600218905061240e8188613f73565b6124199060026145ad565b6124239082613f73565b905061242f8188613f73565b61243a9060026145ad565b6124449082613f73565b90506124508188613f73565b61245b9060026145ad565b6124659082613f73565b90506124718188613f73565b61247c9060026145ad565b6124869082613f73565b90506124928188613f73565b61249d9060026145ad565b6124a79082613f73565b90506124b38188613f73565b6124be9060026145ad565b6124c89082613f73565b90506124d48186613f73565b9998505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526125339084906130ee565b505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561257c5761253382826131c0565b60006001821515141561260e576001600160a01b038481166000908152600e60205260409081902054905163db006a7560e01b81526004810186905291169063db006a75906024016020604051808303816000875af11580156125e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126079190614317565b905061268f565b6001600160a01b038481166000908152600e60205260409081902054905163852a12e360e01b81526004810186905291169063852a12e3906024016020604051808303816000875af1158015612668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268c9190614317565b90505b8015611b8f5760135460ff16611b8f5760405162461bcd60e51b815260206004820152600260248201526110dd60f21b6044820152606401610978565b604080513060601b6bffffffffffffffffffffffff191660208083019190915260e885811b603484015284901b60378301528251601a818403018152603a90920190925280519101206000908190819081908190819060405163514ea4bf60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063514ea4bf9060240160a060405180830381865afa15801561278a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ae91906145c4565b939c929b5090995097509095509350505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128499190614370565b505050505050905061286d8161285e88611f48565b61286788611f48565b8761334d565b9250925050935093915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e6020526040808220549051633af9e66960e01b815230600482015291928392911690633af9e669906024016020604051808303816000875af11580156128f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291a9190614317565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e602052604090819020549051633af9e66960e01b81523060048201529294501690633af9e669906024016020604051808303816000875af1158015612995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b99190614317565b90509091565b6129c76133e9565b6129cf6134b3565b565b8160020b8360020b12612a0b5760405162461bcd60e51b8152602060048201526002602482015261563160f01b6044820152606401610978565b8060020b8360020b12612a455760405162461bcd60e51b81526020600482015260026024820152612b1960f11b6044820152606401610978565b8060020b8260020b13612a7f5760405162461bcd60e51b8152602060048201526002602482015261563360f01b6044820152606401610978565b620d89e719600284900b1215612abc5760405162461bcd60e51b8152602060048201526002602482015261158d60f21b6044820152606401610978565b612ac9620d89e719614576565b60020b8260020b1315612b035760405162461bcd60e51b8152602060048201526002602482015261563560f01b6044820152606401610978565b600c54612b1a90600160d81b900460020b84614626565b60020b15612b4f5760405162461bcd60e51b81526020600482015260026024820152612b1b60f11b6044820152606401610978565b600c54612b6690600160d81b900460020b83614626565b60020b156125335760405162461bcd60e51b8152602060048201526002602482015261563760f01b6044820152606401610978565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015612be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c069190614317565b92915050565b6000806000612c196117a7565b90506000612c278287613f73565b905084811115612c9657600c54606490612c4b90600160a01b900460ff1688613f73565b612c559190614545565b600c54909450612c8f90606490612c7690600160a01b900460ff1688613f73565b612c809190614545565b612c8a8487613f73565b613527565b9250612cf2565b600c54606490612cb090600160a01b900460ff1687613f73565b612cba9190614545565b600c54909350612cef90606490612cdb90600160a01b900460ff1689613f73565b612ce59190614545565b612c8a8486614545565b93505b50509250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d7f9190614370565b50505050505090506000612da682612d9688611f48565b612d9f88611f48565b878761353d565b604051633c8a7d8d60e01b8152306004820152600288810b602483015287900b60448201526001600160801b038216606482015260a06084820152600060a48201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015612e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e619190614287565b5050806001600160801b03168560020b8760020b7f7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a560405160405180910390a4505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415612f6957612eec81613601565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631249c58b6203d090836040518363ffffffff1660e01b81526004016000604051808303818589803b158015612f4b57600080fd5b5088f1158015612f5f573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038281166000818152600e60205260409081902054905163095ea7b360e01b815292166004830152602482018390529063095ea7b3906044016020604051808303816000875af1158015612fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fec9190614648565b506001600160a01b038281166000908152600e602052604080822054905163140e25ad60e31b8152600481018590529192169063a0712d68906024016020604051808303816000875af1158015613047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306b9190614317565b9050801561253357604080518181526027818301527f6d696e74526573756c74206973206e6f7420302c207468657265207761732061606082015266371032b93937b960c91b60808201526020810183905290517f8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad9181900360a00190a1505050565b6000613143826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166136859092919063ffffffff16565b80519091501561253357808060200190518101906131619190614648565b6125335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610978565b60006001821515141561326d5760405163db006a7560e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063db006a75906024016020604051808303816000875af1158015613234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132589190614317565b9050806132685761326847613694565b613308565b60405163852a12e360e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063852a12e3906024016020604051808303816000875af11580156132d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132f89190614317565b9050806133085761330883613694565b80156125335760135460ff166125335760405162461bcd60e51b815260206004820152600a602482015269043657468206e6f7420360b41b6044820152606401610978565b600080836001600160a01b0316856001600160a01b0316111561336e579293925b846001600160a01b0316866001600160a01b03161161339957613392858585613709565b91506133e0565b836001600160a01b0316866001600160a01b031610156133d2576133be868585613709565b91506133cb85878561377c565b90506133e0565b6133dd85858561377c565b90505b94509492505050565b600d5460020b1580156134065750600d546301000000900460020b155b1561340d57565b600d5460009061342b90600281810b9163010000009004900b6126cc565b5050600d54929350600092839250829150819061345790600281810b9163010000009004900b876137c6565b93509350935093506000856001600160801b0316111561348c5761347b84836145ad565b60015561348883826145ad565b6002555b600d546134a790600281810b9163010000009004900b6126cc565b50505050505050505050565b6000806134be61393e565b909250905081156134f5576134f57f0000000000000000000000000000000000000000000000000000000000000000836001612538565b80156117a3576117a37f0000000000000000000000000000000000000000000000000000000000000000826001612538565b6000818310613536578161119e565b5090919050565b6000836001600160a01b0316856001600160a01b0316111561355d579293925b846001600160a01b0316866001600160a01b03161161358857613581858585613a55565b90506135f8565b836001600160a01b0316866001600160a01b031610156135ea5760006135af878686613a55565b905060006135be878986613abf565b9050806001600160801b0316826001600160801b0316106135df57806135e1565b815b925050506135f8565b6135f5858584613abf565b90505b95945050505050565b801561368257604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561366957600080fd5b505af115801561367d573d6000803e3d6000fd5b505050505b50565b606061235f8484600085613af5565b8015613682577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156136f557600080fd5b505af115801561155f573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b03161115613729579192915b6001600160a01b0384166137726fffffffffffffffffffffffffffffffff60601b606085901b1661375a8787614665565b6001600160a01b0316866001600160a01b0316612367565b61235f9190614545565b6000826001600160a01b0316846001600160a01b0316111561379c579192915b61235f6001600160801b0383166137b38686614665565b6001600160a01b0316600160601b612367565b60008080806001600160801b038516156138845760405163a34123a760e01b8152600288810b600483015287900b60248201526001600160801b03861660448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a34123a79060640160408051808303816000875af115801561385a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061387e9190614287565b90945092505b6040516309e3d67b60e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634f1eb3d8906138df9030908b908b906001600160801b039081906004016142ab565b60408051808303816000875af11580156138fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061392191906142e8565b94989397506001600160801b039081169650909316935090915050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e60205260408082205490516370a0823160e01b8152306004820152919283929116906370a0823190602401602060405180830381865afa1580156139b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139dc9190614317565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166000908152600e6020526040908190205490516370a0823160e01b815230600482015292945016906370a0823190602401602060405180830381865afa158015612995573d6000803e3d6000fd5b6000826001600160a01b0316846001600160a01b03161115613a75579192915b6000613a98856001600160a01b0316856001600160a01b0316600160601b612367565b90506135f8613aba8483613aac8989614665565b6001600160a01b0316612367565b613c1b565b6000826001600160a01b0316846001600160a01b03161115613adf579192915b61235f613aba83600160601b613aac8888614665565b606082471015613b565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610978565b6001600160a01b0385163b613bad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610978565b600080866001600160a01b03168587604051613bc991906146b9565b60006040518083038185875af1925050503d8060008114613c06576040519150601f19603f3d011682016040523d82523d6000602084013e613c0b565b606091505b5091509150610ce9828286613c36565b806001600160801b0381168114613c3157600080fd5b919050565b60608315613c4557508161119e565b825115613c555782518084602001fd5b8160405162461bcd60e51b815260040161097891906146d5565b60ff8116811461368257600080fd5b600060208284031215613c9057600080fd5b813561119e81613c6f565b6001600160a01b038116811461368257600080fd5b600060208284031215613cc257600080fd5b813561119e81613c9b565b8060020b811461368257600080fd5b60008060408385031215613cef57600080fd5b8235613cfa81613ccd565b91506020830135613d0a81613ccd565b809150509250929050565b600060208284031215613d2757600080fd5b813561119e81613ccd565b6001600160801b038116811461368257600080fd5b60008060008060808587031215613d5d57600080fd5b8435613d6881613ccd565b93506020850135613d7881613d32565b92506040850135613d8881613c9b565b91506060850135613d9881613c9b565b939692955090935050565b60008060408385031215613db657600080fd5b50508035926020909101359150565b600080600060608486031215613dda57600080fd5b8335613de581613c9b565b95602085013595506040909401359392505050565b801515811461368257600080fd5b60008060008060008060c08789031215613e2157600080fd5b8635613e2c81613ccd565b95506020870135613e3c81613ccd565b94506040870135613e4c81613d32565b9350606087013592506080870135915060a0870135613e6a81613dfa565b809150509295509295509295565b600060208284031215613e8a57600080fd5b813563ffffffff8116811461119e57600080fd5b60008083601f840112613eb057600080fd5b50813567ffffffffffffffff811115613ec857600080fd5b602083019150836020828501011115613ee057600080fd5b9250929050565b60008060008060608587031215613efd57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115613f2257600080fd5b613f2e87828801613e9e565b95989497509550505050565b6020808252600990820152683737ba1030b236b4b760b91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613f8d57613f8d613f5d565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015613ffc57835163ffffffff1683529284019291840191600101613fda565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561403157614031613f92565b604052919050565b600067ffffffffffffffff82111561405357614053613f92565b5060051b60200190565b600082601f83011261406e57600080fd5b8151602061408361407e83614039565b614008565b82815260059290921b840181019181810190868411156140a257600080fd5b8286015b848110156140c65780516140b981613c9b565b83529183019183016140a6565b509695505050505050565b600080604083850312156140e457600080fd5b825167ffffffffffffffff808211156140fc57600080fd5b818501915085601f83011261411057600080fd5b8151602061412061407e83614039565b82815260059290921b8401810191818101908984111561413f57600080fd5b948201945b8386101561416d5785518060060b811461415e5760008081fd5b82529482019490820190614144565b9188015191965090935050508082111561418657600080fd5b506141938582860161405d565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156141c8576141c8613f5d565b81667fffffffffffff0183138116156141e3576141e3613f5d565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b8061421a5761421a6141ed565b667fffffffffffff1982146000198214161561423857614238613f5d565b90059392505050565b60008260060b80614254576142546141ed565b808360060b0791505092915050565b60008160020b627fffff1981141561427d5761427d613f5d565b6000190192915050565b6000806040838503121561429a57600080fd5b505080516020909101519092909150565b6001600160a01b03959095168552600293840b60208601529190920b60408401526001600160801b03918216606084015216608082015260a00190565b600080604083850312156142fb57600080fd5b825161430681613d32565b6020840151909250613d0a81613d32565b60006020828403121561432957600080fd5b5051919050565b6000821982111561434357614343613f5d565b500190565b634e487b7160e01b600052600160045260246000fd5b805161ffff81168114613c3157600080fd5b600080600080600080600060e0888a03121561438b57600080fd5b875161439681613c9b565b60208901519097506143a781613ccd565b95506143b56040890161435e565b94506143c36060890161435e565b93506143d16080890161435e565b925060a08801516143e181613c6f565b60c08901519092506143f281613dfa565b8091505092959891949750929550565b60008160020b8360020b6000811281627fffff190183128115161561442957614429613f5d565b81627fffff0183138116156141e3576141e3613f5d565b60008160020b8360020b80614457576144576141ed565b627fffff1982146000198214161561423857614238613f5d565b60008160020b8360020b6000821282627fffff0382138115161561449757614497613f5d565b82627fffff190382128116156144af576144af613f5d565b50019392505050565b60008160020b8360020b627fffff6000821360008413838304851182821616156144e4576144e4613f5d565b627fffff19600085128281168783058712161561450357614503613f5d565b6000871292508582058712848416161561451f5761451f613f5d565b8585058712818416161561453557614535613f5d565b5050509290910295945050505050565b600082614554576145546141ed565b500490565b6000600160ff1b82141561456f5761456f613f5d565b5060000390565b60008160020b627fffff1981141561459057614590613f5d565b60000392915050565b6000826145a8576145a86141ed565b500690565b6000828210156145bf576145bf613f5d565b500390565b600080600080600060a086880312156145dc57600080fd5b85516145e781613d32565b809550506020860151935060408601519250606086015161460781613d32565b608087015190925061461881613d32565b809150509295509295909350565b60008260020b80614639576146396141ed565b808360020b0791505092915050565b60006020828403121561465a57600080fd5b815161119e81613dfa565b60006001600160a01b038381169083168181101561468557614685613f5d565b039392505050565b60005b838110156146a8578181015183820152602001614690565b83811115611b8f5750506000910152565b600082516146cb81846020870161468d565b9190910192915050565b60208152600082518060208401526146f481604085016020870161468d565b601f01601f1916919091016040019291505056fea26469706673582212208e4dcdfcfa8ac9255388462a212c5e3d3344e8e95a445868373af36bab5bd90a64736f6c634300080a0033",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend, _contracts [10]common.Address, _uniPortion uint8, _compPortion uint8, _protocolFee uint8, _feetier *big.Int, _quoamount *big.Int) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend, _contracts, _uniPortion, _compPortion, _protocolFee, _feetier, _quoamount)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiCaller) Fees(opts *bind.CallOpts) (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "Fees")

	outstruct := new(struct {
		U3Fees0              *big.Int
		U3Fees1              *big.Int
		LcFees0              *big.Int
		LcFees1              *big.Int
		AccruedProtocolFees0 *big.Int
		AccruedProtocolFees1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.U3Fees0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.U3Fees1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.LcFees0 = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.LcFees1 = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.AccruedProtocolFees0 = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.AccruedProtocolFees1 = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiSession) Fees() (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	return _Api.Contract.Fees(&_Api.CallOpts)
}

// Fees is a free data retrieval call binding the contract method 0x3aaa36e6.
//
// Solidity: function Fees() view returns(uint256 U3Fees0, uint256 U3Fees1, uint256 LcFees0, uint256 LcFees1, uint256 AccruedProtocolFees0, uint256 AccruedProtocolFees1)
func (_Api *ApiCallerSession) Fees() (struct {
	U3Fees0              *big.Int
	U3Fees1              *big.Int
	LcFees0              *big.Int
	LcFees1              *big.Int
	AccruedProtocolFees0 *big.Int
	AccruedProtocolFees1 *big.Int
}, error) {
	return _Api.Contract.Fees(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCaller) UNIV3FACTORY(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "UNIV3_FACTORY")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCallerSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiCaller) CETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiSession) CETH() (common.Address, error) {
	return _Api.Contract.CETH(&_Api.CallOpts)
}

// CETH is a free data retrieval call binding the contract method 0x1c8941b2.
//
// Solidity: function _CETH() view returns(address)
func (_Api *ApiCallerSession) CETH() (common.Address, error) {
	return _Api.Contract.CETH(&_Api.CallOpts)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCaller) CTOKEN(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_CTOKEN", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// CTOKEN is a free data retrieval call binding the contract method 0xe9ee7932.
//
// Solidity: function _CTOKEN(address ) view returns(address)
func (_Api *ApiCallerSession) CTOKEN(arg0 common.Address) (common.Address, error) {
	return _Api.Contract.CTOKEN(&_Api.CallOpts, arg0)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCallerSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "admin")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiSession) Admin() (common.Address, error) {
	return _Api.Contract.Admin(&_Api.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() view returns(address)
func (_Api *ApiCallerSession) Admin() (common.Address, error) {
	return _Api.Contract.Admin(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCaller) CHigh(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cHigh")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCallerSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCaller) CLow(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cLow")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCallerSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCaller) CompPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// CompPortion is a free data retrieval call binding the contract method 0xcf8d7e25.
//
// Solidity: function compPortion() view returns(uint8)
func (_Api *ApiCallerSession) CompPortion() (uint8, error) {
	return _Api.Contract.CompPortion(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCallerSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiCaller) CurComp0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "curComp0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiSession) CurComp0() (*big.Int, error) {
	return _Api.Contract.CurComp0(&_Api.CallOpts)
}

// CurComp0 is a free data retrieval call binding the contract method 0xc8a746a6.
//
// Solidity: function curComp0() view returns(uint256)
func (_Api *ApiCallerSession) CurComp0() (*big.Int, error) {
	return _Api.Contract.CurComp0(&_Api.CallOpts)
}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiCaller) CurComp1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "curComp1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiSession) CurComp1() (*big.Int, error) {
	return _Api.Contract.CurComp1(&_Api.CallOpts)
}

// CurComp1 is a free data retrieval call binding the contract method 0xccac7d8b.
//
// Solidity: function curComp1() view returns(uint256)
func (_Api *ApiCallerSession) CurComp1() (*big.Int, error) {
	return _Api.Contract.CurComp1(&_Api.CallOpts)
}

// Decenter is a free data retrieval call binding the contract method 0x4f82f8e1.
//
// Solidity: function decenter(uint256 , uint256 ) view returns(address)
func (_Api *ApiCaller) Decenter(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "decenter", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Decenter is a free data retrieval call binding the contract method 0x4f82f8e1.
//
// Solidity: function decenter(uint256 , uint256 ) view returns(address)
func (_Api *ApiSession) Decenter(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Decenter(&_Api.CallOpts, arg0, arg1)
}

// Decenter is a free data retrieval call binding the contract method 0x4f82f8e1.
//
// Solidity: function decenter(uint256 , uint256 ) view returns(address)
func (_Api *ApiCallerSession) Decenter(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Decenter(&_Api.CallOpts, arg0, arg1)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCallerSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCaller) GetPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCaller) GetQuoteAtTick(opts *bind.CallOpts, tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getQuoteAtTick", tick, baseAmount, baseToken, quoteToken)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCallerSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCaller) GetTwap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTwap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x5d752a9a.
//
// Solidity: function getTwap() view returns(int24 tick)
func (_Api *ApiCallerSession) GetTwap() (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCaller) GetUniAmounts(opts *bind.CallOpts, tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getUniAmounts", tickLower, tickUpper)

	outstruct := new(struct {
		Amount0 *big.Int
		Amount1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCallerSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCaller) IndividualCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "individualCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// IndividualCap is a free data retrieval call binding the contract method 0x0276650b.
//
// Solidity: function individualCap() view returns(uint256)
func (_Api *ApiCallerSession) IndividualCap() (*big.Int, error) {
	return _Api.Contract.IndividualCap(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCaller) MaxTwapDeviation(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "maxTwapDeviation")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCallerSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCaller) Pool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCallerSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCaller) Protocol(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocol")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCallerSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiCaller) ProtocolFee(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocolFee")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiSession) ProtocolFee() (uint8, error) {
	return _Api.Contract.ProtocolFee(&_Api.CallOpts)
}

// ProtocolFee is a free data retrieval call binding the contract method 0xb0e21e8a.
//
// Solidity: function protocolFee() view returns(uint8)
func (_Api *ApiCallerSession) ProtocolFee() (uint8, error) {
	return _Api.Contract.ProtocolFee(&_Api.CallOpts)
}

// Quoamount is a free data retrieval call binding the contract method 0x17f8f9fa.
//
// Solidity: function quoamount() view returns(uint128)
func (_Api *ApiCaller) Quoamount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "quoamount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Quoamount is a free data retrieval call binding the contract method 0x17f8f9fa.
//
// Solidity: function quoamount() view returns(uint128)
func (_Api *ApiSession) Quoamount() (*big.Int, error) {
	return _Api.Contract.Quoamount(&_Api.CallOpts)
}

// Quoamount is a free data retrieval call binding the contract method 0x17f8f9fa.
//
// Solidity: function quoamount() view returns(uint128)
func (_Api *ApiCallerSession) Quoamount() (*big.Int, error) {
	return _Api.Contract.Quoamount(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCaller) TickSpacing(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "tickSpacing")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCallerSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCaller) Token0(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token0")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCallerSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCaller) Token1(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token1")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCallerSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCaller) TwapDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "twapDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCallerSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCaller) UniPortion(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "uniPortion")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// UniPortion is a free data retrieval call binding the contract method 0x31dc5b95.
//
// Solidity: function uniPortion() view returns(uint8)
func (_Api *ApiCallerSession) UniPortion() (uint8, error) {
	return _Api.Contract.UniPortion(&_Api.CallOpts)
}

// Vault is a free data retrieval call binding the contract method 0xfbfa77cf.
//
// Solidity: function vault() view returns(address)
func (_Api *ApiCaller) Vault(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vault")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Vault is a free data retrieval call binding the contract method 0xfbfa77cf.
//
// Solidity: function vault() view returns(address)
func (_Api *ApiSession) Vault() (common.Address, error) {
	return _Api.Contract.Vault(&_Api.CallOpts)
}

// Vault is a free data retrieval call binding the contract method 0xfbfa77cf.
//
// Solidity: function vault() view returns(address)
func (_Api *ApiCallerSession) Vault() (common.Address, error) {
	return _Api.Contract.Vault(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCaller) VaultCap(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "vaultCap")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// VaultCap is a free data retrieval call binding the contract method 0x3c1bda09.
//
// Solidity: function vaultCap() view returns(uint256)
func (_Api *ApiCallerSession) VaultCap() (*big.Int, error) {
	return _Api.Contract.VaultCap(&_Api.CallOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactor) CallFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "callFunds")
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactorSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactor) Emergency(opts *bind.TransactOpts, tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "emergency", tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// Emergency is a paid mutator transaction binding the contract method 0x7a0ddeef.
//
// Solidity: function emergency(int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 amount0, uint256 amount1, bool redeemType) returns()
func (_Api *ApiTransactorSession) Emergency(tickLower *big.Int, tickUpper *big.Int, liquidity *big.Int, amount0 *big.Int, amount1 *big.Int, redeemType bool) (*types.Transaction, error) {
	return _Api.Contract.Emergency(&_Api.TransactOpts, tickLower, tickUpper, liquidity, amount0, amount1, redeemType)
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiTransactor) GetTotalAmounts(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "getTotalAmounts")
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiSession) GetTotalAmounts() (*types.Transaction, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.TransactOpts)
}

// GetTotalAmounts is a paid mutator transaction binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() returns(uint256, uint256)
func (_Api *ApiTransactorSession) GetTotalAmounts() (*types.Transaction, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.TransactOpts)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiTransactor) Rebalance(opts *bind.TransactOpts, newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalance", newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns(uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiTransactorSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactor) SetCompPortionRatio(opts *bind.TransactOpts, ratio uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setCompPortionRatio", ratio)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiSession) SetCompPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetCompPortionRatio(&_Api.TransactOpts, ratio)
}

// SetCompPortionRatio is a paid mutator transaction binding the contract method 0x0f17937c.
//
// Solidity: function setCompPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactorSession) SetCompPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetCompPortionRatio(&_Api.TransactOpts, ratio)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactor) SetMaxTwapDeviation(opts *bind.TransactOpts, _maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setMaxTwapDeviation", _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactorSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactor) SetTwapDuration(opts *bind.TransactOpts, _twapDuration uint32) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTwapDuration", _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactorSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactor) SetUniPortionRatio(opts *bind.TransactOpts, ratio uint8) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setUniPortionRatio", ratio)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiSession) SetUniPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetUniPortionRatio(&_Api.TransactOpts, ratio)
}

// SetUniPortionRatio is a paid mutator transaction binding the contract method 0x624a177a.
//
// Solidity: function setUniPortionRatio(uint8 ratio) returns()
func (_Api *ApiTransactorSession) SetUniPortionRatio(ratio uint8) (*types.Transaction, error) {
	return _Api.Contract.SetUniPortionRatio(&_Api.TransactOpts, ratio)
}

// Setprotocol is a paid mutator transaction binding the contract method 0x2612abf8.
//
// Solidity: function setprotocol(address _protocol) returns()
func (_Api *ApiTransactor) Setprotocol(opts *bind.TransactOpts, _protocol common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setprotocol", _protocol)
}

// Setprotocol is a paid mutator transaction binding the contract method 0x2612abf8.
//
// Solidity: function setprotocol(address _protocol) returns()
func (_Api *ApiSession) Setprotocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.Setprotocol(&_Api.TransactOpts, _protocol)
}

// Setprotocol is a paid mutator transaction binding the contract method 0x2612abf8.
//
// Solidity: function setprotocol(address _protocol) returns()
func (_Api *ApiTransactorSession) Setprotocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.Setprotocol(&_Api.TransactOpts, _protocol)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3MintCallback(opts *bind.TransactOpts, amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3MintCallback", amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiTransactor) VaultWithdraw(opts *bind.TransactOpts, to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "vaultWithdraw", to, amount0, amount1)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiSession) VaultWithdraw(to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.Contract.VaultWithdraw(&_Api.TransactOpts, to, amount0, amount1)
}

// VaultWithdraw is a paid mutator transaction binding the contract method 0x71c851dd.
//
// Solidity: function vaultWithdraw(address to, uint256 amount0, uint256 amount1) returns(bool)
func (_Api *ApiTransactorSession) VaultWithdraw(to common.Address, amount0 *big.Int, amount1 *big.Int) (*types.Transaction, error) {
	return _Api.Contract.VaultWithdraw(&_Api.TransactOpts, to, amount0, amount1)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// ApiBurnUniV3LiquidityIterator is returned from FilterBurnUniV3Liquidity and is used to iterate over the raw logs and unpacked data for BurnUniV3Liquidity events raised by the Api contract.
type ApiBurnUniV3LiquidityIterator struct {
	Event *ApiBurnUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiBurnUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiBurnUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiBurnUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiBurnUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiBurnUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiBurnUniV3Liquidity represents a BurnUniV3Liquidity event raised by the Api contract.
type ApiBurnUniV3Liquidity struct {
	CLow      *big.Int
	CHigh     *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBurnUniV3Liquidity is a free log retrieval operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterBurnUniV3Liquidity(opts *bind.FilterOpts, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (*ApiBurnUniV3LiquidityIterator, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiBurnUniV3LiquidityIterator{contract: _Api.contract, event: "BurnUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchBurnUniV3Liquidity is a free log subscription operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchBurnUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiBurnUniV3Liquidity, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiBurnUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnUniV3Liquidity is a log parse operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseBurnUniV3Liquidity(log types.Log) (*ApiBurnUniV3Liquidity, error) {
	event := new(ApiBurnUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMintUniV3LiquidityIterator is returned from FilterMintUniV3Liquidity and is used to iterate over the raw logs and unpacked data for MintUniV3Liquidity events raised by the Api contract.
type ApiMintUniV3LiquidityIterator struct {
	Event *ApiMintUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMintUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMintUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMintUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMintUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMintUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMintUniV3Liquidity represents a MintUniV3Liquidity event raised by the Api contract.
type ApiMintUniV3Liquidity struct {
	NewLow    *big.Int
	NewHigh   *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMintUniV3Liquidity is a free log retrieval operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterMintUniV3Liquidity(opts *bind.FilterOpts, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (*ApiMintUniV3LiquidityIterator, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiMintUniV3LiquidityIterator{contract: _Api.contract, event: "MintUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchMintUniV3Liquidity is a free log subscription operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchMintUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiMintUniV3Liquidity, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMintUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMintUniV3Liquidity is a log parse operation binding the contract event 0x7d33bf045a7d5bdeb7d07dd2b27ea6d08772b7ebe3133cd984f8063b62f893a5.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseMintUniV3Liquidity(log types.Log) (*ApiMintUniV3Liquidity, error) {
	event := new(ApiMintUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMyLogIterator is returned from FilterMyLog and is used to iterate over the raw logs and unpacked data for MyLog events raised by the Api contract.
type ApiMyLogIterator struct {
	Event *ApiMyLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMyLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMyLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMyLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMyLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMyLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMyLog represents a MyLog event raised by the Api contract.
type ApiMyLog struct {
	Arg0 string
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterMyLog is a free log retrieval operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) FilterMyLog(opts *bind.FilterOpts) (*ApiMyLogIterator, error) {

	logs, sub, err := _Api.contract.FilterLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return &ApiMyLogIterator{contract: _Api.contract, event: "MyLog", logs: logs, sub: sub}, nil
}

// WatchMyLog is a free log subscription operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) WatchMyLog(opts *bind.WatchOpts, sink chan<- *ApiMyLog) (event.Subscription, error) {

	logs, sub, err := _Api.contract.WatchLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMyLog)
				if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMyLog is a log parse operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) ParseMyLog(log types.Log) (*ApiMyLog, error) {
	event := new(ApiMyLog)
	if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiRebalanceIterator is returned from FilterRebalance and is used to iterate over the raw logs and unpacked data for Rebalance events raised by the Api contract.
type ApiRebalanceIterator struct {
	Event *ApiRebalance // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiRebalanceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiRebalance)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiRebalance)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiRebalanceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiRebalanceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiRebalance represents a Rebalance event raised by the Api contract.
type ApiRebalance struct {
	Arg0 common.Address
	U0   *big.Int
	U1   *big.Int
	C0   *big.Int
	C1   *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRebalance is a free log retrieval operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) FilterRebalance(opts *bind.FilterOpts, arg0 []common.Address) (*ApiRebalanceIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiRebalanceIterator{contract: _Api.contract, event: "Rebalance", logs: logs, sub: sub}, nil
}

// WatchRebalance is a free log subscription operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) WatchRebalance(opts *bind.WatchOpts, sink chan<- *ApiRebalance, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiRebalance)
				if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRebalance is a log parse operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) ParseRebalance(log types.Log) (*ApiRebalance, error) {
	event := new(ApiRebalance)
	if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiVaultWithdrawIterator is returned from FilterVaultWithdraw and is used to iterate over the raw logs and unpacked data for VaultWithdraw events raised by the Api contract.
type ApiVaultWithdrawIterator struct {
	Event *ApiVaultWithdraw // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiVaultWithdrawIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiVaultWithdraw)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiVaultWithdraw)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiVaultWithdrawIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiVaultWithdrawIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiVaultWithdraw represents a VaultWithdraw event raised by the Api contract.
type ApiVaultWithdraw struct {
	To      common.Address
	Amount0 *big.Int
	Amount1 *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterVaultWithdraw is a free log retrieval operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) FilterVaultWithdraw(opts *bind.FilterOpts, to []common.Address) (*ApiVaultWithdrawIterator, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "VaultWithdraw", toRule)
	if err != nil {
		return nil, err
	}
	return &ApiVaultWithdrawIterator{contract: _Api.contract, event: "VaultWithdraw", logs: logs, sub: sub}, nil
}

// WatchVaultWithdraw is a free log subscription operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) WatchVaultWithdraw(opts *bind.WatchOpts, sink chan<- *ApiVaultWithdraw, to []common.Address) (event.Subscription, error) {

	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "VaultWithdraw", toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiVaultWithdraw)
				if err := _Api.contract.UnpackLog(event, "VaultWithdraw", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVaultWithdraw is a log parse operation binding the contract event 0x97c7b889c23f0ecb7c22eac5c58266eae022989cfdbd9b6dcf63417338c787de.
//
// Solidity: event VaultWithdraw(address indexed to, uint256 amount0, uint256 amount1)
func (_Api *ApiFilterer) ParseVaultWithdraw(log types.Log) (*ApiVaultWithdraw, error) {
	event := new(ApiVaultWithdraw)
	if err := _Api.contract.UnpackLog(event, "VaultWithdraw", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
