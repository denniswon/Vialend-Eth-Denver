// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// RebalanceParam is an auto generated low-level Go binding around an user-defined struct.
type RebalanceParam struct {
	NewLow           *big.Int
	NewHigh          *big.Int
	SqthPercent      uint32
	UniPortionRate   uint32
	SqthPortionRate  uint32
	ShortPortionRate uint32
}

// UniSqueethParam is an auto generated low-level Go binding around an user-defined struct.
type UniSqueethParam struct {
	Uni3Factory      common.Address
	VaultFactory     common.Address
	HedgeVault       common.Address
	Protocol         common.Address
	Creator          common.Address
	Token0           common.Address
	Token1           common.Address
	WETH             common.Address
	OSqth            common.Address
	ChainLinkProxy   common.Address
	Token0Decimals   uint8
	Token1Decimals   uint8
	ProtocolFeeRate  uint8
	MotivatorFeeRate uint8
	FeeTier          *big.Int
	MaxTwapDeviation *big.Int
	TwapDuration     uint32
}

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"Uni3Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"VaultFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"HedgeVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Protocol\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"OSqth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ChainLinkProxy\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"Token0Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"Token1Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"ProtocolFeeRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"MotivatorFeeRate\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"FeeTier\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"MaxTwapDeviation\",\"type\":\"int24\"},{\"internalType\":\"uint32\",\"name\":\"TwapDuration\",\"type\":\"uint32\"}],\"internalType\":\"structUniSqueethParam\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Fees0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Fees1\",\"type\":\"uint256\"}],\"name\":\"AllocFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"BurnUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minied0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minted1\",\"type\":\"uint256\"}],\"name\":\"MintUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNIV3_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WETH\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aWETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aavePoolProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alloc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cHigh\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cLow\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compIn0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compIn1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compOut0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compOut1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_fee\",\"type\":\"uint24\"}],\"name\":\"getEthPriceFromPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getQuoteAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"getSqueethNorm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"twapInterval\",\"type\":\"uint32\"}],\"name\":\"getTwap\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getUniAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"myliquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"motivator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"motivatorFeeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"motivators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moveFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oSqth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oSqthEthPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"internalType\":\"uint32\",\"name\":\"sqthPercent\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"uniPortionRate\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"sqthPortionRate\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"shortPortionRate\",\"type\":\"uint32\"}],\"internalType\":\"structRebalanceParam\",\"name\":\"rebalParam\",\"type\":\"tuple\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeShort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeSqueeth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeUniswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProxy\",\"type\":\"address\"}],\"name\":\"setChainlinkProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"setProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortCallback\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96Shift\",\"type\":\"uint160\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapDirectPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swapTest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend, params UniSqueethParam) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend, params)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiCaller) Decimals(opts *bind.CallOpts, arg0 common.Address) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "Decimals", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiSession) Decimals(arg0 common.Address) (uint8, error) {
	return _Api.Contract.Decimals(&_Api.CallOpts, arg0)
}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiCallerSession) Decimals(arg0 common.Address) (uint8, error) {
	return _Api.Contract.Decimals(&_Api.CallOpts, arg0)
}

// SWAPROUTER is a free data retrieval call binding the contract method 0xc6005893.
//
// Solidity: function SWAP_ROUTER() view returns(address)
func (_Api *ApiCaller) SWAPROUTER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "SWAP_ROUTER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SWAPROUTER is a free data retrieval call binding the contract method 0xc6005893.
//
// Solidity: function SWAP_ROUTER() view returns(address)
func (_Api *ApiSession) SWAPROUTER() (common.Address, error) {
	return _Api.Contract.SWAPROUTER(&_Api.CallOpts)
}

// SWAPROUTER is a free data retrieval call binding the contract method 0xc6005893.
//
// Solidity: function SWAP_ROUTER() view returns(address)
func (_Api *ApiCallerSession) SWAPROUTER() (common.Address, error) {
	return _Api.Contract.SWAPROUTER(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCaller) UNIV3FACTORY(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "UNIV3_FACTORY")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCallerSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// USDC is a free data retrieval call binding the contract method 0x359217d1.
//
// Solidity: function _USDC() view returns(address)
func (_Api *ApiCaller) USDC(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_USDC")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// USDC is a free data retrieval call binding the contract method 0x359217d1.
//
// Solidity: function _USDC() view returns(address)
func (_Api *ApiSession) USDC() (common.Address, error) {
	return _Api.Contract.USDC(&_Api.CallOpts)
}

// USDC is a free data retrieval call binding the contract method 0x359217d1.
//
// Solidity: function _USDC() view returns(address)
func (_Api *ApiCallerSession) USDC() (common.Address, error) {
	return _Api.Contract.USDC(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCallerSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// AWETH is a free data retrieval call binding the contract method 0x6d2a583a.
//
// Solidity: function aWETH() view returns(address)
func (_Api *ApiCaller) AWETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "aWETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AWETH is a free data retrieval call binding the contract method 0x6d2a583a.
//
// Solidity: function aWETH() view returns(address)
func (_Api *ApiSession) AWETH() (common.Address, error) {
	return _Api.Contract.AWETH(&_Api.CallOpts)
}

// AWETH is a free data retrieval call binding the contract method 0x6d2a583a.
//
// Solidity: function aWETH() view returns(address)
func (_Api *ApiCallerSession) AWETH() (common.Address, error) {
	return _Api.Contract.AWETH(&_Api.CallOpts)
}

// AaveETH is a free data retrieval call binding the contract method 0xa190aeb9.
//
// Solidity: function aaveETH() view returns(address)
func (_Api *ApiCaller) AaveETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "aaveETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AaveETH is a free data retrieval call binding the contract method 0xa190aeb9.
//
// Solidity: function aaveETH() view returns(address)
func (_Api *ApiSession) AaveETH() (common.Address, error) {
	return _Api.Contract.AaveETH(&_Api.CallOpts)
}

// AaveETH is a free data retrieval call binding the contract method 0xa190aeb9.
//
// Solidity: function aaveETH() view returns(address)
func (_Api *ApiCallerSession) AaveETH() (common.Address, error) {
	return _Api.Contract.AaveETH(&_Api.CallOpts)
}

// AavePoolProvider is a free data retrieval call binding the contract method 0x17c1e379.
//
// Solidity: function aavePoolProvider() view returns(address)
func (_Api *ApiCaller) AavePoolProvider(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "aavePoolProvider")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AavePoolProvider is a free data retrieval call binding the contract method 0x17c1e379.
//
// Solidity: function aavePoolProvider() view returns(address)
func (_Api *ApiSession) AavePoolProvider() (common.Address, error) {
	return _Api.Contract.AavePoolProvider(&_Api.CallOpts)
}

// AavePoolProvider is a free data retrieval call binding the contract method 0x17c1e379.
//
// Solidity: function aavePoolProvider() view returns(address)
func (_Api *ApiCallerSession) AavePoolProvider() (common.Address, error) {
	return _Api.Contract.AavePoolProvider(&_Api.CallOpts)
}

// AaveUSDC is a free data retrieval call binding the contract method 0x5fdb8c74.
//
// Solidity: function aaveUSDC() view returns(address)
func (_Api *ApiCaller) AaveUSDC(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "aaveUSDC")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AaveUSDC is a free data retrieval call binding the contract method 0x5fdb8c74.
//
// Solidity: function aaveUSDC() view returns(address)
func (_Api *ApiSession) AaveUSDC() (common.Address, error) {
	return _Api.Contract.AaveUSDC(&_Api.CallOpts)
}

// AaveUSDC is a free data retrieval call binding the contract method 0x5fdb8c74.
//
// Solidity: function aaveUSDC() view returns(address)
func (_Api *ApiCallerSession) AaveUSDC() (common.Address, error) {
	return _Api.Contract.AaveUSDC(&_Api.CallOpts)
}

// BaseTokenId is a free data retrieval call binding the contract method 0x0952c66d.
//
// Solidity: function baseTokenId() view returns(uint256)
func (_Api *ApiCaller) BaseTokenId(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "baseTokenId")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BaseTokenId is a free data retrieval call binding the contract method 0x0952c66d.
//
// Solidity: function baseTokenId() view returns(uint256)
func (_Api *ApiSession) BaseTokenId() (*big.Int, error) {
	return _Api.Contract.BaseTokenId(&_Api.CallOpts)
}

// BaseTokenId is a free data retrieval call binding the contract method 0x0952c66d.
//
// Solidity: function baseTokenId() view returns(uint256)
func (_Api *ApiCallerSession) BaseTokenId() (*big.Int, error) {
	return _Api.Contract.BaseTokenId(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCaller) CHigh(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cHigh")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCallerSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCaller) CLow(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cLow")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCallerSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiCaller) CompIn0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compIn0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiSession) CompIn0() (*big.Int, error) {
	return _Api.Contract.CompIn0(&_Api.CallOpts)
}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiCallerSession) CompIn0() (*big.Int, error) {
	return _Api.Contract.CompIn0(&_Api.CallOpts)
}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiCaller) CompIn1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compIn1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiSession) CompIn1() (*big.Int, error) {
	return _Api.Contract.CompIn1(&_Api.CallOpts)
}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiCallerSession) CompIn1() (*big.Int, error) {
	return _Api.Contract.CompIn1(&_Api.CallOpts)
}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiCaller) CompOut0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compOut0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiSession) CompOut0() (*big.Int, error) {
	return _Api.Contract.CompOut0(&_Api.CallOpts)
}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiCallerSession) CompOut0() (*big.Int, error) {
	return _Api.Contract.CompOut0(&_Api.CallOpts)
}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiCaller) CompOut1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compOut1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiSession) CompOut1() (*big.Int, error) {
	return _Api.Contract.CompOut1(&_Api.CallOpts)
}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiCallerSession) CompOut1() (*big.Int, error) {
	return _Api.Contract.CompOut1(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCallerSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCallerSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// GetEthPriceFromPool is a free data retrieval call binding the contract method 0x64460f4b.
//
// Solidity: function getEthPriceFromPool(address _token, uint24 _fee) view returns(uint256 price)
func (_Api *ApiCaller) GetEthPriceFromPool(opts *bind.CallOpts, _token common.Address, _fee *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getEthPriceFromPool", _token, _fee)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetEthPriceFromPool is a free data retrieval call binding the contract method 0x64460f4b.
//
// Solidity: function getEthPriceFromPool(address _token, uint24 _fee) view returns(uint256 price)
func (_Api *ApiSession) GetEthPriceFromPool(_token common.Address, _fee *big.Int) (*big.Int, error) {
	return _Api.Contract.GetEthPriceFromPool(&_Api.CallOpts, _token, _fee)
}

// GetEthPriceFromPool is a free data retrieval call binding the contract method 0x64460f4b.
//
// Solidity: function getEthPriceFromPool(address _token, uint24 _fee) view returns(uint256 price)
func (_Api *ApiCallerSession) GetEthPriceFromPool(_token common.Address, _fee *big.Int) (*big.Int, error) {
	return _Api.Contract.GetEthPriceFromPool(&_Api.CallOpts, _token, _fee)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCaller) GetPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCaller) GetQuoteAtTick(opts *bind.CallOpts, tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getQuoteAtTick", tick, baseAmount, baseToken, quoteToken)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCallerSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetSqueethNorm is a free data retrieval call binding the contract method 0x6c5fc671.
//
// Solidity: function getSqueethNorm(address _controller) view returns(uint256)
func (_Api *ApiCaller) GetSqueethNorm(opts *bind.CallOpts, _controller common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getSqueethNorm", _controller)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetSqueethNorm is a free data retrieval call binding the contract method 0x6c5fc671.
//
// Solidity: function getSqueethNorm(address _controller) view returns(uint256)
func (_Api *ApiSession) GetSqueethNorm(_controller common.Address) (*big.Int, error) {
	return _Api.Contract.GetSqueethNorm(&_Api.CallOpts, _controller)
}

// GetSqueethNorm is a free data retrieval call binding the contract method 0x6c5fc671.
//
// Solidity: function getSqueethNorm(address _controller) view returns(uint256)
func (_Api *ApiCallerSession) GetSqueethNorm(_controller common.Address) (*big.Int, error) {
	return _Api.Contract.GetSqueethNorm(&_Api.CallOpts, _controller)
}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiCaller) GetTotalAmounts(opts *bind.CallOpts) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTotalAmounts")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiSession) GetTotalAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.CallOpts)
}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiCallerSession) GetTotalAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x66d7505b.
//
// Solidity: function getTwap(address _pool, uint32 twapInterval) view returns(int24 tick)
func (_Api *ApiCaller) GetTwap(opts *bind.CallOpts, _pool common.Address, twapInterval uint32) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTwap", _pool, twapInterval)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTwap is a free data retrieval call binding the contract method 0x66d7505b.
//
// Solidity: function getTwap(address _pool, uint32 twapInterval) view returns(int24 tick)
func (_Api *ApiSession) GetTwap(_pool common.Address, twapInterval uint32) (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts, _pool, twapInterval)
}

// GetTwap is a free data retrieval call binding the contract method 0x66d7505b.
//
// Solidity: function getTwap(address _pool, uint32 twapInterval) view returns(int24 tick)
func (_Api *ApiCallerSession) GetTwap(_pool common.Address, twapInterval uint32) (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts, _pool, twapInterval)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1, uint256 myliquidity)
func (_Api *ApiCaller) GetUniAmounts(opts *bind.CallOpts, tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0     *big.Int
	Amount1     *big.Int
	Myliquidity *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getUniAmounts", tickLower, tickUpper)

	outstruct := new(struct {
		Amount0     *big.Int
		Amount1     *big.Int
		Myliquidity *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Myliquidity = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1, uint256 myliquidity)
func (_Api *ApiSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0     *big.Int
	Amount1     *big.Int
	Myliquidity *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1, uint256 myliquidity)
func (_Api *ApiCallerSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0     *big.Int
	Amount1     *big.Int
	Myliquidity *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiCaller) LastCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "lastCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiSession) LastCount() (*big.Int, error) {
	return _Api.Contract.LastCount(&_Api.CallOpts)
}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiCallerSession) LastCount() (*big.Int, error) {
	return _Api.Contract.LastCount(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCaller) MaxTwapDeviation(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "maxTwapDeviation")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCallerSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiCaller) Motivator(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivator", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiSession) Motivator(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivator(&_Api.CallOpts, arg0, arg1)
}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiCallerSession) Motivator(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivator(&_Api.CallOpts, arg0, arg1)
}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiCaller) MotivatorFeeRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivatorFeeRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiSession) MotivatorFeeRate() (uint8, error) {
	return _Api.Contract.MotivatorFeeRate(&_Api.CallOpts)
}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiCallerSession) MotivatorFeeRate() (uint8, error) {
	return _Api.Contract.MotivatorFeeRate(&_Api.CallOpts)
}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiCaller) Motivators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiSession) Motivators(arg0 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivators(&_Api.CallOpts, arg0)
}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiCallerSession) Motivators(arg0 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivators(&_Api.CallOpts, arg0)
}

// OSqth is a free data retrieval call binding the contract method 0xa577e0bc.
//
// Solidity: function oSqth() view returns(address)
func (_Api *ApiCaller) OSqth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "oSqth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OSqth is a free data retrieval call binding the contract method 0xa577e0bc.
//
// Solidity: function oSqth() view returns(address)
func (_Api *ApiSession) OSqth() (common.Address, error) {
	return _Api.Contract.OSqth(&_Api.CallOpts)
}

// OSqth is a free data retrieval call binding the contract method 0xa577e0bc.
//
// Solidity: function oSqth() view returns(address)
func (_Api *ApiCallerSession) OSqth() (common.Address, error) {
	return _Api.Contract.OSqth(&_Api.CallOpts)
}

// OSqthEthPool is a free data retrieval call binding the contract method 0x93f27ace.
//
// Solidity: function oSqthEthPool() view returns(address)
func (_Api *ApiCaller) OSqthEthPool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "oSqthEthPool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OSqthEthPool is a free data retrieval call binding the contract method 0x93f27ace.
//
// Solidity: function oSqthEthPool() view returns(address)
func (_Api *ApiSession) OSqthEthPool() (common.Address, error) {
	return _Api.Contract.OSqthEthPool(&_Api.CallOpts)
}

// OSqthEthPool is a free data retrieval call binding the contract method 0x93f27ace.
//
// Solidity: function oSqthEthPool() view returns(address)
func (_Api *ApiCallerSession) OSqthEthPool() (common.Address, error) {
	return _Api.Contract.OSqthEthPool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCaller) Pool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCallerSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCaller) Protocol(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocol")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCallerSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiCaller) ProtocolFeeRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocolFeeRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiSession) ProtocolFeeRate() (uint8, error) {
	return _Api.Contract.ProtocolFeeRate(&_Api.CallOpts)
}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiCallerSession) ProtocolFeeRate() (uint8, error) {
	return _Api.Contract.ProtocolFeeRate(&_Api.CallOpts)
}

// ShortCallback is a free data retrieval call binding the contract method 0x986ee981.
//
// Solidity: function shortCallback() view returns(address)
func (_Api *ApiCaller) ShortCallback(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "shortCallback")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ShortCallback is a free data retrieval call binding the contract method 0x986ee981.
//
// Solidity: function shortCallback() view returns(address)
func (_Api *ApiSession) ShortCallback() (common.Address, error) {
	return _Api.Contract.ShortCallback(&_Api.CallOpts)
}

// ShortCallback is a free data retrieval call binding the contract method 0x986ee981.
//
// Solidity: function shortCallback() view returns(address)
func (_Api *ApiCallerSession) ShortCallback() (common.Address, error) {
	return _Api.Contract.ShortCallback(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCaller) TickSpacing(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "tickSpacing")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCallerSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCaller) Token0(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token0")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCallerSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCaller) Token1(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token1")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCallerSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCaller) TwapDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "twapDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCallerSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// Alloc is a paid mutator transaction binding the contract method 0xbbc001c3.
//
// Solidity: function alloc() returns()
func (_Api *ApiTransactor) Alloc(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "alloc")
}

// Alloc is a paid mutator transaction binding the contract method 0xbbc001c3.
//
// Solidity: function alloc() returns()
func (_Api *ApiSession) Alloc() (*types.Transaction, error) {
	return _Api.Contract.Alloc(&_Api.TransactOpts)
}

// Alloc is a paid mutator transaction binding the contract method 0xbbc001c3.
//
// Solidity: function alloc() returns()
func (_Api *ApiTransactorSession) Alloc() (*types.Transaction, error) {
	return _Api.Contract.Alloc(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactor) CallFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "callFunds")
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactorSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// MoveFunds is a paid mutator transaction binding the contract method 0xd0b6ba2a.
//
// Solidity: function moveFunds() returns()
func (_Api *ApiTransactor) MoveFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "moveFunds")
}

// MoveFunds is a paid mutator transaction binding the contract method 0xd0b6ba2a.
//
// Solidity: function moveFunds() returns()
func (_Api *ApiSession) MoveFunds() (*types.Transaction, error) {
	return _Api.Contract.MoveFunds(&_Api.TransactOpts)
}

// MoveFunds is a paid mutator transaction binding the contract method 0xd0b6ba2a.
//
// Solidity: function moveFunds() returns()
func (_Api *ApiTransactorSession) MoveFunds() (*types.Transaction, error) {
	return _Api.Contract.MoveFunds(&_Api.TransactOpts)
}

// Rebalance is a paid mutator transaction binding the contract method 0x4dad1526.
//
// Solidity: function rebalance((int24,int24,uint32,uint32,uint32,uint32) rebalParam) returns()
func (_Api *ApiTransactor) Rebalance(opts *bind.TransactOpts, rebalParam RebalanceParam) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalance", rebalParam)
}

// Rebalance is a paid mutator transaction binding the contract method 0x4dad1526.
//
// Solidity: function rebalance((int24,int24,uint32,uint32,uint32,uint32) rebalParam) returns()
func (_Api *ApiSession) Rebalance(rebalParam RebalanceParam) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, rebalParam)
}

// Rebalance is a paid mutator transaction binding the contract method 0x4dad1526.
//
// Solidity: function rebalance((int24,int24,uint32,uint32,uint32,uint32) rebalParam) returns()
func (_Api *ApiTransactorSession) Rebalance(rebalParam RebalanceParam) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, rebalParam)
}

// RemoveShort is a paid mutator transaction binding the contract method 0xc3e7225a.
//
// Solidity: function removeShort() returns()
func (_Api *ApiTransactor) RemoveShort(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "removeShort")
}

// RemoveShort is a paid mutator transaction binding the contract method 0xc3e7225a.
//
// Solidity: function removeShort() returns()
func (_Api *ApiSession) RemoveShort() (*types.Transaction, error) {
	return _Api.Contract.RemoveShort(&_Api.TransactOpts)
}

// RemoveShort is a paid mutator transaction binding the contract method 0xc3e7225a.
//
// Solidity: function removeShort() returns()
func (_Api *ApiTransactorSession) RemoveShort() (*types.Transaction, error) {
	return _Api.Contract.RemoveShort(&_Api.TransactOpts)
}

// RemoveSqueeth is a paid mutator transaction binding the contract method 0x4e14b1ae.
//
// Solidity: function removeSqueeth() returns()
func (_Api *ApiTransactor) RemoveSqueeth(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "removeSqueeth")
}

// RemoveSqueeth is a paid mutator transaction binding the contract method 0x4e14b1ae.
//
// Solidity: function removeSqueeth() returns()
func (_Api *ApiSession) RemoveSqueeth() (*types.Transaction, error) {
	return _Api.Contract.RemoveSqueeth(&_Api.TransactOpts)
}

// RemoveSqueeth is a paid mutator transaction binding the contract method 0x4e14b1ae.
//
// Solidity: function removeSqueeth() returns()
func (_Api *ApiTransactorSession) RemoveSqueeth() (*types.Transaction, error) {
	return _Api.Contract.RemoveSqueeth(&_Api.TransactOpts)
}

// RemoveUniswap is a paid mutator transaction binding the contract method 0xd452901f.
//
// Solidity: function removeUniswap() returns()
func (_Api *ApiTransactor) RemoveUniswap(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "removeUniswap")
}

// RemoveUniswap is a paid mutator transaction binding the contract method 0xd452901f.
//
// Solidity: function removeUniswap() returns()
func (_Api *ApiSession) RemoveUniswap() (*types.Transaction, error) {
	return _Api.Contract.RemoveUniswap(&_Api.TransactOpts)
}

// RemoveUniswap is a paid mutator transaction binding the contract method 0xd452901f.
//
// Solidity: function removeUniswap() returns()
func (_Api *ApiTransactorSession) RemoveUniswap() (*types.Transaction, error) {
	return _Api.Contract.RemoveUniswap(&_Api.TransactOpts)
}

// SetChainlinkProxy is a paid mutator transaction binding the contract method 0x88cb9ca8.
//
// Solidity: function setChainlinkProxy(address newProxy) returns()
func (_Api *ApiTransactor) SetChainlinkProxy(opts *bind.TransactOpts, newProxy common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setChainlinkProxy", newProxy)
}

// SetChainlinkProxy is a paid mutator transaction binding the contract method 0x88cb9ca8.
//
// Solidity: function setChainlinkProxy(address newProxy) returns()
func (_Api *ApiSession) SetChainlinkProxy(newProxy common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetChainlinkProxy(&_Api.TransactOpts, newProxy)
}

// SetChainlinkProxy is a paid mutator transaction binding the contract method 0x88cb9ca8.
//
// Solidity: function setChainlinkProxy(address newProxy) returns()
func (_Api *ApiTransactorSession) SetChainlinkProxy(newProxy common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetChainlinkProxy(&_Api.TransactOpts, newProxy)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactor) SetMaxTwapDeviation(opts *bind.TransactOpts, _maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setMaxTwapDeviation", _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactorSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiTransactor) SetProtocol(opts *bind.TransactOpts, _protocol common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setProtocol", _protocol)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiSession) SetProtocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetProtocol(&_Api.TransactOpts, _protocol)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiTransactorSession) SetProtocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetProtocol(&_Api.TransactOpts, _protocol)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactor) SetTwapDuration(opts *bind.TransactOpts, _twapDuration uint32) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTwapDuration", _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactorSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SwapDirectPool is a paid mutator transaction binding the contract method 0x6dcecfee.
//
// Solidity: function swapDirectPool(address _tokenIn, address _tokenOut, uint24 fee, uint160 sqrtPriceLimitX96Shift, uint256 amount) returns()
func (_Api *ApiTransactor) SwapDirectPool(opts *bind.TransactOpts, _tokenIn common.Address, _tokenOut common.Address, fee *big.Int, sqrtPriceLimitX96Shift *big.Int, amount *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "swapDirectPool", _tokenIn, _tokenOut, fee, sqrtPriceLimitX96Shift, amount)
}

// SwapDirectPool is a paid mutator transaction binding the contract method 0x6dcecfee.
//
// Solidity: function swapDirectPool(address _tokenIn, address _tokenOut, uint24 fee, uint160 sqrtPriceLimitX96Shift, uint256 amount) returns()
func (_Api *ApiSession) SwapDirectPool(_tokenIn common.Address, _tokenOut common.Address, fee *big.Int, sqrtPriceLimitX96Shift *big.Int, amount *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SwapDirectPool(&_Api.TransactOpts, _tokenIn, _tokenOut, fee, sqrtPriceLimitX96Shift, amount)
}

// SwapDirectPool is a paid mutator transaction binding the contract method 0x6dcecfee.
//
// Solidity: function swapDirectPool(address _tokenIn, address _tokenOut, uint24 fee, uint160 sqrtPriceLimitX96Shift, uint256 amount) returns()
func (_Api *ApiTransactorSession) SwapDirectPool(_tokenIn common.Address, _tokenOut common.Address, fee *big.Int, sqrtPriceLimitX96Shift *big.Int, amount *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SwapDirectPool(&_Api.TransactOpts, _tokenIn, _tokenOut, fee, sqrtPriceLimitX96Shift, amount)
}

// SwapTest is a paid mutator transaction binding the contract method 0x9831a310.
//
// Solidity: function swapTest(address _tokenIn, address _tokenOut, uint24 _fee, uint256 _amountIn) returns(uint256)
func (_Api *ApiTransactor) SwapTest(opts *bind.TransactOpts, _tokenIn common.Address, _tokenOut common.Address, _fee *big.Int, _amountIn *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "swapTest", _tokenIn, _tokenOut, _fee, _amountIn)
}

// SwapTest is a paid mutator transaction binding the contract method 0x9831a310.
//
// Solidity: function swapTest(address _tokenIn, address _tokenOut, uint24 _fee, uint256 _amountIn) returns(uint256)
func (_Api *ApiSession) SwapTest(_tokenIn common.Address, _tokenOut common.Address, _fee *big.Int, _amountIn *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SwapTest(&_Api.TransactOpts, _tokenIn, _tokenOut, _fee, _amountIn)
}

// SwapTest is a paid mutator transaction binding the contract method 0x9831a310.
//
// Solidity: function swapTest(address _tokenIn, address _tokenOut, uint24 _fee, uint256 _amountIn) returns(uint256)
func (_Api *ApiTransactorSession) SwapTest(_tokenIn common.Address, _tokenOut common.Address, _fee *big.Int, _amountIn *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SwapTest(&_Api.TransactOpts, _tokenIn, _tokenOut, _fee, _amountIn)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3MintCallback(opts *bind.TransactOpts, amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3MintCallback", amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// ApiAllocFeesIterator is returned from FilterAllocFees and is used to iterate over the raw logs and unpacked data for AllocFees events raised by the Api contract.
type ApiAllocFeesIterator struct {
	Event *ApiAllocFees // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiAllocFeesIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiAllocFees)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiAllocFees)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiAllocFeesIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiAllocFeesIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiAllocFees represents a AllocFees event raised by the Api contract.
type ApiAllocFees struct {
	Arg0  common.Address
	Fees0 *big.Int
	Fees1 *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAllocFees is a free log retrieval operation binding the contract event 0xdecf909358ba26692a5af60490474460c3cecb8ac9792a08567ed2227f3526ea.
//
// Solidity: event AllocFees(address indexed arg0, uint256 Fees0, uint256 Fees1)
func (_Api *ApiFilterer) FilterAllocFees(opts *bind.FilterOpts, arg0 []common.Address) (*ApiAllocFeesIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "AllocFees", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiAllocFeesIterator{contract: _Api.contract, event: "AllocFees", logs: logs, sub: sub}, nil
}

// WatchAllocFees is a free log subscription operation binding the contract event 0xdecf909358ba26692a5af60490474460c3cecb8ac9792a08567ed2227f3526ea.
//
// Solidity: event AllocFees(address indexed arg0, uint256 Fees0, uint256 Fees1)
func (_Api *ApiFilterer) WatchAllocFees(opts *bind.WatchOpts, sink chan<- *ApiAllocFees, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "AllocFees", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiAllocFees)
				if err := _Api.contract.UnpackLog(event, "AllocFees", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAllocFees is a log parse operation binding the contract event 0xdecf909358ba26692a5af60490474460c3cecb8ac9792a08567ed2227f3526ea.
//
// Solidity: event AllocFees(address indexed arg0, uint256 Fees0, uint256 Fees1)
func (_Api *ApiFilterer) ParseAllocFees(log types.Log) (*ApiAllocFees, error) {
	event := new(ApiAllocFees)
	if err := _Api.contract.UnpackLog(event, "AllocFees", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiBurnUniV3LiquidityIterator is returned from FilterBurnUniV3Liquidity and is used to iterate over the raw logs and unpacked data for BurnUniV3Liquidity events raised by the Api contract.
type ApiBurnUniV3LiquidityIterator struct {
	Event *ApiBurnUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiBurnUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiBurnUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiBurnUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiBurnUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiBurnUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiBurnUniV3Liquidity represents a BurnUniV3Liquidity event raised by the Api contract.
type ApiBurnUniV3Liquidity struct {
	CLow      *big.Int
	CHigh     *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBurnUniV3Liquidity is a free log retrieval operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterBurnUniV3Liquidity(opts *bind.FilterOpts, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (*ApiBurnUniV3LiquidityIterator, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiBurnUniV3LiquidityIterator{contract: _Api.contract, event: "BurnUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchBurnUniV3Liquidity is a free log subscription operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchBurnUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiBurnUniV3Liquidity, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiBurnUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnUniV3Liquidity is a log parse operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseBurnUniV3Liquidity(log types.Log) (*ApiBurnUniV3Liquidity, error) {
	event := new(ApiBurnUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMintUniV3LiquidityIterator is returned from FilterMintUniV3Liquidity and is used to iterate over the raw logs and unpacked data for MintUniV3Liquidity events raised by the Api contract.
type ApiMintUniV3LiquidityIterator struct {
	Event *ApiMintUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMintUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMintUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMintUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMintUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMintUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMintUniV3Liquidity represents a MintUniV3Liquidity event raised by the Api contract.
type ApiMintUniV3Liquidity struct {
	NewLow    *big.Int
	NewHigh   *big.Int
	Liquidity *big.Int
	Minied0   *big.Int
	Minted1   *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMintUniV3Liquidity is a free log retrieval operation binding the contract event 0x2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity, uint256 minied0, uint256 minted1)
func (_Api *ApiFilterer) FilterMintUniV3Liquidity(opts *bind.FilterOpts, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (*ApiMintUniV3LiquidityIterator, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiMintUniV3LiquidityIterator{contract: _Api.contract, event: "MintUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchMintUniV3Liquidity is a free log subscription operation binding the contract event 0x2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity, uint256 minied0, uint256 minted1)
func (_Api *ApiFilterer) WatchMintUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiMintUniV3Liquidity, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMintUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMintUniV3Liquidity is a log parse operation binding the contract event 0x2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity, uint256 minied0, uint256 minted1)
func (_Api *ApiFilterer) ParseMintUniV3Liquidity(log types.Log) (*ApiMintUniV3Liquidity, error) {
	event := new(ApiMintUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMyLogIterator is returned from FilterMyLog and is used to iterate over the raw logs and unpacked data for MyLog events raised by the Api contract.
type ApiMyLogIterator struct {
	Event *ApiMyLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMyLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMyLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMyLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMyLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMyLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMyLog represents a MyLog event raised by the Api contract.
type ApiMyLog struct {
	Arg0 string
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterMyLog is a free log retrieval operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) FilterMyLog(opts *bind.FilterOpts) (*ApiMyLogIterator, error) {

	logs, sub, err := _Api.contract.FilterLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return &ApiMyLogIterator{contract: _Api.contract, event: "MyLog", logs: logs, sub: sub}, nil
}

// WatchMyLog is a free log subscription operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) WatchMyLog(opts *bind.WatchOpts, sink chan<- *ApiMyLog) (event.Subscription, error) {

	logs, sub, err := _Api.contract.WatchLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMyLog)
				if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMyLog is a log parse operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) ParseMyLog(log types.Log) (*ApiMyLog, error) {
	event := new(ApiMyLog)
	if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiRebalanceIterator is returned from FilterRebalance and is used to iterate over the raw logs and unpacked data for Rebalance events raised by the Api contract.
type ApiRebalanceIterator struct {
	Event *ApiRebalance // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiRebalanceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiRebalance)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiRebalance)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiRebalanceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiRebalanceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiRebalance represents a Rebalance event raised by the Api contract.
type ApiRebalance struct {
	Arg0 common.Address
	U0   *big.Int
	U1   *big.Int
	C0   *big.Int
	C1   *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRebalance is a free log retrieval operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) FilterRebalance(opts *bind.FilterOpts, arg0 []common.Address) (*ApiRebalanceIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiRebalanceIterator{contract: _Api.contract, event: "Rebalance", logs: logs, sub: sub}, nil
}

// WatchRebalance is a free log subscription operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) WatchRebalance(opts *bind.WatchOpts, sink chan<- *ApiRebalance, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiRebalance)
				if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRebalance is a log parse operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) ParseRebalance(log types.Log) (*ApiRebalance, error) {
	event := new(ApiRebalance)
	if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
