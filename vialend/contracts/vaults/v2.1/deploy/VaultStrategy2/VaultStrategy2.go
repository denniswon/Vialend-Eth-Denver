// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package api

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// UniSqueethParam is an auto generated low-level Go binding around an user-defined struct.
type UniSqueethParam struct {
	Uni3Factory      common.Address
	VaultFactory     common.Address
	HedgeVault       common.Address
	Protocol         common.Address
	Creator          common.Address
	Token0           common.Address
	Token1           common.Address
	WETH             common.Address
	SqthEthPool      common.Address
	ChainLinkProxy   common.Address
	Token0Decimals   uint8
	Token1Decimals   uint8
	ProtocolFeeRate  uint8
	MotivatorFeeRate uint8
	FeeTier          *big.Int
	MaxTwapDeviation *big.Int
	TwapDuration     uint32
}

// ApiMetaData contains all meta data concerning the Api contract.
var ApiMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"Uni3Factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"VaultFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"HedgeVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Protocol\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SqthEthPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ChainLinkProxy\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"Token0Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"Token1Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"ProtocolFeeRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"MotivatorFeeRate\",\"type\":\"uint8\"},{\"internalType\":\"uint24\",\"name\":\"FeeTier\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"MaxTwapDeviation\",\"type\":\"int24\"},{\"internalType\":\"uint32\",\"name\":\"TwapDuration\",\"type\":\"uint32\"}],\"internalType\":\"structUniSqueethParam\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uFees0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uFees1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lFees0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lFees1\",\"type\":\"uint256\"}],\"name\":\"AllocFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"cHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"BurnUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minied0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minted1\",\"type\":\"uint256\"}],\"name\":\"MintUniV3Liquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"MyLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNIV3_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_WETH\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cHigh\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cLow\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compIn0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compIn1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compOut0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compOut1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPriceChainLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getQuoteAtTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quote\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"twapInterval\",\"type\":\"uint32\"}],\"name\":\"getTwap\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getUniAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTwapDeviation\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"motivator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"motivatorFeeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"motivators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oSqth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteamount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"newLow\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"newHigh\",\"type\":\"int24\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"_maxTwapDeviation\",\"type\":\"int24\"}],\"name\":\"setMaxTwapDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocol\",\"type\":\"address\"}],\"name\":\"setProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_twapDuration\",\"type\":\"uint32\"}],\"name\":\"setTwapDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sqth_eth_pool\",\"outputs\":[{\"internalType\":\"contractIUniswapV3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"tradeSqth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]",
	Bin: "0x610160604052600d805460ff60301b191690553480156200001f57600080fd5b506040516200482938038062004829833981016040819052620000429162000509565b600160005560208101516001600160a01b039081166080908152610120830151600980549184166001600160a01b03199283161790556060840151600b805491851691831691909117905590830151600a80549184169190921617905560a082015160c08301516101c0840151604051630b4c774160e11b815292841660048401529216602482015262ffffff9091166044820152731f98431c8ad98523631ae4a59f267346ea31f98490631698ee8290606401602060405180830381865afa15801562000114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013a919062000674565b6001600160a01b039081166101009081528201511661012081905260408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa15801562000191573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b7919062000674565b600c60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610100516001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200021f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000245919062000674565b6001600160a01b031660c0816001600160a01b031681525050610100516001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c6919062000674565b6001600160a01b0390811660e0908152820151811660a05261010051604080516334324e9f60e21b81529051919092169163d0c93a7c9160048083019260209291908290030181865afa15801562000322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000348919062000699565b600c80546101808401516102008501516101e0860151600d805465ffffff0000001916630100000062ffffff938416021790556101a087015168ffffff0000000000ff60a01b19909416600160d01b969091169590950260ff60a01b191694909417600160a01b60ff928316021764ffffffffff60a81b1916600160b01b63ffffffff9095169490940260ff60a81b191693909317600160a81b9184169190910217905561014082015160c0516001600160a01b039081166000818152600f6020526040808220805460ff1990811696881696909617815561016088015160e051909516835290822080549095169386169390931790935590915254620004529116600a620007cc565b6001600160801b03166101405250620007dd565b60405161022081016001600160401b03811182821017156200049857634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b0381168114620004b657600080fd5b919050565b805160ff81168114620004b657600080fd5b805162ffffff81168114620004b657600080fd5b8051600281900b8114620004b657600080fd5b805163ffffffff81168114620004b657600080fd5b600061022082840312156200051d57600080fd5b6200052762000466565b62000532836200049e565b815262000542602084016200049e565b602082015262000555604084016200049e565b604082015262000568606084016200049e565b60608201526200057b608084016200049e565b60808201526200058e60a084016200049e565b60a0820152620005a160c084016200049e565b60c0820152620005b460e084016200049e565b60e0820152610100620005c98185016200049e565b90820152610120620005dd8482016200049e565b90820152610140620005f1848201620004bb565b9082015261016062000605848201620004bb565b9082015261018062000619848201620004bb565b908201526101a06200062d848201620004bb565b908201526101c062000641848201620004cd565b908201526101e062000655848201620004e1565b9082015261020062000669848201620004f4565b908201529392505050565b6000602082840312156200068757600080fd5b62000692826200049e565b9392505050565b600060208284031215620006ac57600080fd5b6200069282620004e1565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200070e578160001904821115620006f257620006f2620006b7565b808516156200070057918102915b93841c9390800290620006d2565b509250929050565b6000826200072757506001620007c6565b816200073657506000620007c6565b81600181146200074f57600281146200075a576200077a565b6001915050620007c6565b60ff8411156200076e576200076e620006b7565b50506001821b620007c6565b5060208310610133831016604e8410600b84101617156200079f575081810a620007c6565b620007ab8383620006cd565b8060001904821115620007c257620007c2620006b7565b0290505b92915050565b60006200069260ff84168362000716565b60805160a05160c05160e051610100516101205161014051613f0a6200091f6000396000610607015260008181610523015261190d015260008181610306015281816117c10152818161198b01528181611e7d0152818161274c015281816127da01528181612be301528181612cd10152818161310701526131bc0152600081816106dd01528181610abe01528181610aec01528181610c1a015281816113b901528181611483015281816116ff0152818161185401526120130152600081816102d201528181610a5901528181610a8701528181610b72015281816113230152818161144101528181611671015281816118200152611fe601526000610752015260008181610673015281816108170152818161091601528181610d3e015281816112550152818161156101528181611ade0152611d490152613f0a6000f3fe6080604052600436106102275760003560e01c806390df731411610122578063d0c93a7c116100a5578063e5cff3b21161006c578063e5cff3b214610774578063e7c7cb9114610794578063f258b95e146107b5578063fa461e33146107cb578063fdea65aa146107eb57005b8063d0c93a7c146106aa578063d21220a7146106cb578063d3487997146106ff578063d368867f1461071f578063e0af36161461074057005b8063b09d5a50116100e9578063b09d5a50146105c5578063c387f25c146105f5578063c433c80a14610641578063c45a015514610661578063c4a7761e1461069557005b806390df731414610511578063947300031461054557806398d5fdca1461055b5780639d371c3014610570578063a577e0bc146105a557005b806349901b9f116101aa5780636cf9f190116101715780636cf9f1901461047a5780637a89cdd31461049a5780637c7311fe146104c25780638ce74426146104d75780638e843c6c146104f757005b806349901b9f146103e457806358f85880146103fa57806366caf9901461041b57806366d7505b146104315780636b16ad671461046457005b806326d89545116101ee57806326d8954514610328578063393ed075146103615780633cbff3fe1461038157806343c57a27146103a157806346c0d97b146103cf57005b806302d05d3f14610230578063080384591461026d5780630a9d793d146102a05780630dfe1681146102c057806316f0115b146102f457005b3661022e57005b005b34801561023c57600080fd5b50600a54610250906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027957600080fd5b50600c5461028e90600160a81b900460ff1681565b60405160ff9091168152602001610264565b3480156102ac57600080fd5b5061022e6102bb36600461347f565b61080b565b3480156102cc57600080fd5b506102507f000000000000000000000000000000000000000000000000000000000000000081565b34801561030057600080fd5b506102507f000000000000000000000000000000000000000000000000000000000000000081565b34801561033457600080fd5b50600c5461034c90600160b01b900463ffffffff1681565b60405163ffffffff9091168152602001610264565b34801561036d57600080fd5b5061022e61037c3660046134ab565b610901565b34801561038d57600080fd5b5061022e61039c3660046134e4565b610d28565b3480156103ad57600080fd5b506103c16103bc366004613516565b610e6e565b604051908152602001610264565b3480156103db57600080fd5b506103c1610f7c565b3480156103f057600080fd5b506103c160055481565b34801561040657600080fd5b50600c5461028e90600160a01b900460ff1681565b34801561042757600080fd5b506103c160085481565b34801561043d57600080fd5b5061045161044c366004613586565b61100b565b60405160029190910b8152602001610264565b34801561047057600080fd5b506103c160105481565b34801561048657600080fd5b506102506104953660046135bb565b61120c565b3480156104a657600080fd5b50610250731f98431c8ad98523631ae4a59f267346ea31f98481565b3480156104ce57600080fd5b5061022e611236565b3480156104e357600080fd5b50600b54610250906001600160a01b031681565b34801561050357600080fd5b50600d546104519060020b81565b34801561051d57600080fd5b506102507f000000000000000000000000000000000000000000000000000000000000000081565b34801561055157600080fd5b506103c160065481565b34801561056757600080fd5b506103c16114ae565b34801561057c57600080fd5b5061059061058b3660046134ab565b6114bd565b60408051928352602083019190915201610264565b3480156105b157600080fd5b50600c54610250906001600160a01b031681565b3480156105d157600080fd5b5061028e6105e036600461347f565b600f6020526000908152604090205460ff1681565b34801561060157600080fd5b506106297f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b039091168152602001610264565b34801561064d57600080fd5b5061022e61065c3660046135d4565b61154b565b34801561066d57600080fd5b506102507f000000000000000000000000000000000000000000000000000000000000000081565b3480156106a157600080fd5b5061059061164d565b3480156106b657600080fd5b50600c5461045190600160d01b900460020b81565b3480156106d757600080fd5b506102507f000000000000000000000000000000000000000000000000000000000000000081565b34801561070b57600080fd5b5061022e61071a366004613631565b6117b6565b34801561072b57600080fd5b50600c5461045190600160e81b900460020b81565b34801561074c57600080fd5b506102507f000000000000000000000000000000000000000000000000000000000000000081565b34801561078057600080fd5b5061022e61078f366004613692565b61188f565b3480156107a057600080fd5b50600d54610451906301000000900460020b81565b3480156107c157600080fd5b506103c160075481565b3480156107d757600080fd5b5061022e6107e6366004613631565b611980565b3480156107f757600080fd5b506102506108063660046136b7565b6119de565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e9960c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089791906136d9565b6001600160a01b0316146108df5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9030b236b4b760b11b60448201526064015b60405180910390fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b604051635bb5122d60e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b76a245a90602401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098991906136f6565b6001146109c55760405162461bcd60e51b815260206004820152600a6024820152696e6f742061637469766560b01b60448201526064016108d6565b6109cd611a16565b506109d6611a26565b60006109e0611d31565b6001600160a01b0316630d1b5bed6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4191906136f6565b90508015610b6e57610aae610a54611d31565b610a7d7f0000000000000000000000000000000000000000000000000000000000000000611dbc565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611e27565b610b13610ab9611d31565b610ae27f0000000000000000000000000000000000000000000000000000000000000000611dbc565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611e27565b610b1b611d31565b6001600160a01b031663b27686c06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b5557600080fd5b505af1158015610b69573d6000803e3d6000fd5b505050505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231610ba7611d31565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f91906136f6565b1180610cb9575060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231610c4f611d31565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb791906136f6565b115b15610d1957610cc6611d31565b6001600160a01b031663d0b6ba2a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d0057600080fd5b505af1158015610d14573d6000803e3d6000fd5b505050505b610d238383611e79565b505050565b600a546001600160a01b0316331480610dd357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e9960c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe91906136d9565b6001600160a01b0316336001600160a01b0316145b610e045760405162461bcd60e51b8152602060048201526002602482015261453560f01b60448201526064016108d6565b60008160020b13610e4a5760405162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b60448201526064016108d6565b600d805462ffffff90921663010000000265ffffff00000019909216919091179055565b600080610e7a86612142565b90506001600160801b036001600160a01b03821611610f00576000610ea86001600160a01b03831680613725565b9050836001600160a01b0316856001600160a01b031610610ee057610edb600160c01b876001600160801b031683612561565b610ef8565b610ef881876001600160801b0316600160c01b612561565b925050610f73565b6000610f1f6001600160a01b0383168068010000000000000000612561565b9050836001600160a01b0316856001600160a01b031610610f5757610f52600160801b876001600160801b031683612561565b610f6f565b610f6f81876001600160801b0316600160801b612561565b9250505b50949350505050565b600080600080600080600960009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610fd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffc919061375e565b50919998505050505050505050565b600063ffffffff821661108957826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107a91906137c0565b50939550611206945050505050565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106110be576110be61386e565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106110ed576110ed61386e565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b0386169063883bdbfd90611131908590600401613884565b600060405180830381865afa15801561114e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111769190810190613997565b50905060008160008151811061118e5761118e61386e565b6020026020010151826001815181106111a9576111a961386e565b60200260200101516111bb9190613a63565b90506111cb600386900b82613ac9565b935060008160060b1280156111ef57506111e9600386900b82613b07565b60060b15155b1561120257836111fe81613b29565b9450505b5050505b92915050565b6011818154811061121c57600080fd5b6000918252602090912001546001600160a01b0316905081565b604051630ccc6b1960e31b815230600482015233906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063666358c890602401602060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c091906136d9565b6001600160a01b0316146113025760405162461bcd60e51b81526020600482015260096024820152681b9bdd081d985d5b1d60ba1b60448201526064016108d6565b61130a611a16565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611372573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139691906136f6565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142491906136f6565b9050811561146857611468611437611d31565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169084611e27565b80156114aa576114aa611479611d31565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083611e27565b5050565b60006114b8610f7c565b905090565b600c546000908190600160e81b900460020b1580156114df5750600d5460020b155b156114ef57506000905080611544565b60008060006114fe87876126dd565b94509450505092506115118787856127d3565b90955093506115296001600160801b03831686613b4d565b945061153e6001600160801b03821685613b4d565b93505050505b9250929050565b600a546001600160a01b03163314806115f657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e9960c36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e191906136d9565b6001600160a01b0316336001600160a01b0316145b6116275760405162461bcd60e51b8152602060048201526002602482015261453560f01b60448201526064016108d6565b600c805463ffffffff909216600160b01b0263ffffffff60b01b19909216919091179055565b6040516370a0823160e01b8152306004820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156116b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dc91906136f6565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176a91906136f6565b600c54600d54919250600091829161179191600160e81b909104600290810b91900b6114bd565b90925090506117a08483613b4d565b6117aa8483613b4d565b95509550505050509091565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118135760405162461bcd60e51b8152602060048201526002602482015261505360f01b60448201526064016108d6565b6118476001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163386611e27565b61187b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611e27565b801561188957611889613b65565b50505050565b60008083116118c55760405162461bcd60e51b8152602060048201526002602482015261229b60f11b60448201526064016108d6565b8215610d2357604051630251596160e31b81523060048201528215156024820152604481018490526001600160a01b03828116606483015260a06084830152600060a48301527f0000000000000000000000000000000000000000000000000000000000000000169063128acb089060c40160408051808303816000875af1158015611955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119799190613b7b565b5050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118135760405162461bcd60e51b815260206004820152600360248201526228299960e91b60448201526064016108d6565b600e60205281600052604060002081815481106119fa57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000611a2061288b565b50600190565b600554600754611a369190613b9f565b600355600654600854611a499190613b9f565b600455600354600154600091611a5e91613b4d565b90506000600454600254611a729190613b4d565b600c54909150600160a01b900460ff1615611cb257600c54600090606490611aa490600160a01b900460ff1685613725565b611aae9190613bb6565b600c54909150600090606490611ace90600160a01b900460ff1685613725565b611ad89190613bb6565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638bce6edd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5e91906136d9565b9050611b68611d31565b604051637d89265d60e11b81526001600160a01b0383811660048301526024820186905260448201859052919091169063fb124cba90606401600060405180830381600087803b158015611bbb57600080fd5b505af1158015611bcf573d6000803e3d6000fd5b5050600c54600160a81b900460ff16159150611cae905057600c54600090606490611c0490600160a81b900460ff1686613725565b611c0e9190613bb6565b600c54909150600090606490611c2e90600160a81b900460ff1686613725565b611c389190613bb6565b9050611c42611d31565b604051637d89265d60e11b815233600482015260248101849052604481018390526001600160a01b03919091169063fb124cba90606401600060405180830381600087803b158015611c9357600080fd5b505af1158015611ca7573d6000803e3d6000fd5b5050505050505b5050505b60015460025460035460045460408051948552602085019390935291830152606082015230907f1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac40808612249060800160405180910390a2505060006007819055600581905560088190556006819055600181905560038190556002819055600455565b604051630ccc6b1960e31b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063666358c890602401602060405180830381865afa158015611d98573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b891906136d9565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611e03573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120691906136f6565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d23908490612895565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efd91906137c0565b50505050509150508260020b6000148015611f1b57508160020b6000145b15611fd457600d5460020b158015611f3d5750600c54600160e81b900460020b155b15611f4757505050565b600c54600d54600091600291611f6891600160e81b9004830b90830b613bca565b611f729190613c08565b600c54909150600160d01b900460020b80611f8d8385613c39565b611f979190613c08565b611fa19190613c80565b600c54909350600160d01b900460020b80611fbc8385613bca565b611fc69190613c08565b611fd09190613c80565b9350505b611fdf838383612967565b600061200a7f0000000000000000000000000000000000000000000000000000000000000000611dbc565b905060006120377f0000000000000000000000000000000000000000000000000000000000000000611dbc565b905081158015612045575080155b15612051575050505050565b600061205b6114ae565b905060008061206b858585612b31565b91509150600082118061207e5750600081115b156120e9576000806120928a8a8686612bdc565b600d805462ffffff191662ffffff8d811691909117909155600c80546001600160e81b0316600160e81b928f169290920291909117905590925090506120d88288613b9f565b96506120e48187613b9f565b955050505b600554600654604080518581526020810185905290810192909252606082015230907f90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b9060800160405180910390a25050505050505050565b60008060008360020b12612159578260020b612166565b8260020b61216690613d0d565b9050612175620d89e719613d2a565b62ffffff168111156121ad5760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016108d6565b6000600182166121c157600160801b6121d3565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561221257608061220d826ffff97272373d413259a46990580e213a613725565b901c90505b600482161561223c576080612237826ffff2e50f5f656932ef12357cf3c7fdcc613725565b901c90505b6008821615612266576080612261826fffe5caca7e10e4e61c3624eaa0941cd0613725565b901c90505b601082161561229057608061228b826fffcb9843d60f6159c9db58835c926644613725565b901c90505b60208216156122ba5760806122b5826fff973b41fa98c081472e6896dfb254c0613725565b901c90505b60408216156122e45760806122df826fff2ea16466c96a3843ec78b326b52861613725565b901c90505b608082161561230e576080612309826ffe5dee046a99a2a811c461f1969c3053613725565b901c90505b610100821615612339576080612334826ffcbe86c7900a88aedcffc83b479aa3a4613725565b901c90505b61020082161561236457608061235f826ff987a7253ac413176f2b074cf7815e54613725565b901c90505b61040082161561238f57608061238a826ff3392b0822b70005940c7a398e4b70f3613725565b901c90505b6108008216156123ba5760806123b5826fe7159475a2c29b7443b29c7fa6e889d9613725565b901c90505b6110008216156123e55760806123e0826fd097f3bdfd2022b8845ad8f792aa5825613725565b901c90505b61200082161561241057608061240b826fa9f746462d870fdf8a65dc1f90e061e5613725565b901c90505b61400082161561243b576080612436826f70d869a156d2a1b890bb3df62baf32f7613725565b901c90505b618000821615612466576080612461826f31be135f97d08fd981231505542fcfa6613725565b901c90505b6201000082161561249257608061248d826f09aa508b5b7a84e1c677de54f3e99bc9613725565b901c90505b620200008216156124bd5760806124b8826e5d6af8dedb81196699c329225ee604613725565b901c90505b620400008216156124e75760806124e2826d2216e584f5fa1ea926041bedfe98613725565b901c90505b6208000082161561250f57608061250a826b048a170391f7dc42444e8fa2613725565b901c90505b60008460020b131561252a5761252781600019613bb6565b90505b61253964010000000082613d4d565b15612545576001612548565b60005b6125599060ff16602083901c613b4d565b949350505050565b60008080600019858709858702925082811083820303915050806000141561259b576000841161259057600080fd5b5082900490506126d6565b8084116125a757600080fd5b60008486880980840393811190920391905060006125c786196001613b4d565b86169586900495938490049360008190030460010190506125e88184613725565b9093179260006125f9876003613725565b60021890506126088188613725565b612613906002613b9f565b61261d9082613725565b90506126298188613725565b612634906002613b9f565b61263e9082613725565b905061264a8188613725565b612655906002613b9f565b61265f9082613725565b905061266b8188613725565b612676906002613b9f565b6126809082613725565b905061268c8188613725565b612697906002613b9f565b6126a19082613725565b90506126ad8188613725565b6126b8906002613b9f565b6126c29082613725565b90506126ce8186613725565b955050505050505b9392505050565b604080513060601b6bffffffffffffffffffffffff191660208083019190915260e885811b603484015284901b60378301528251601a818403018152603a90920190925280519101206000908190819081908190819060405163514ea4bf60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063514ea4bf9060240160a060405180830381865afa15801561279b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127bf9190613d61565b939c929b5090995097509095509350505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285a91906137c0565b505050505050905061287e8161286f88612142565b61287888612142565b87612dac565b9250925050935093915050565b612893612e48565b565b60006128ea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f1d9092919063ffffffff16565b805190915015610d2357808060200190518101906129089190613dc3565b610d235760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108d6565b8160020b8360020b126129a15760405162461bcd60e51b8152602060048201526002602482015261563160f01b60448201526064016108d6565b8060020b8360020b126129db5760405162461bcd60e51b81526020600482015260026024820152612b1960f11b60448201526064016108d6565b8060020b8260020b13612a155760405162461bcd60e51b8152602060048201526002602482015261563360f01b60448201526064016108d6565b620d89e719600284900b1215612a525760405162461bcd60e51b8152602060048201526002602482015261158d60f21b60448201526064016108d6565b612a5f620d89e719613d2a565b60020b8260020b1315612a995760405162461bcd60e51b8152602060048201526002602482015261563560f01b60448201526064016108d6565b600c54612ab090600160d01b900460020b84613de0565b60020b15612ae55760405162461bcd60e51b81526020600482015260026024820152612b1b60f11b60448201526064016108d6565b600c54612afc90600160d01b900460020b83613de0565b60020b15610d235760405162461bcd60e51b8152602060048201526002602482015261563760f01b60448201526064016108d6565b6000808281612b408288613725565b9050606486821115612b93576064612b58828a613725565b612b629190613bb6565b9450612b8c6064612b73838a613725565b612b7d9190613bb6565b612b878588613725565b612f2c565b9350612bd1565b6064612b9f8289613725565b612ba99190613bb6565b9350612bce6064612bba838b613725565b612bc49190613bb6565b612b878587613bb6565b94505b505050935093915050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6391906137c0565b50505050505090506000612c8a82612c7a8a612142565b612c838a612142565b8989612f42565b604051633c8a7d8d60e01b815230600482015260028a810b602483015289900b60448201526001600160801b038216606482015260a06084820152600060a48201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015612d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d459190613b7b565b8094508195505050806001600160801b03168760020b8960020b7f2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf8787604051612d99929190918252602082015260400190565b60405180910390a4505094509492505050565b600080836001600160a01b0316856001600160a01b03161115612dcd579293925b846001600160a01b0316866001600160a01b031611612df857612df1858585613006565b9150612e3f565b836001600160a01b0316866001600160a01b03161015612e3157612e1d868585613006565b9150612e2a858785613079565b9050612e3f565b612e3c858585613079565b90505b94509492505050565b600c54600160e81b900460020b158015612e655750600d5460020b155b15612e6c57565b600c54600d54600091612e8e91600160e81b909104600290810b91900b6126dd565b5050600c54600d549394506000938493508392508291612ebe91600160e81b909104600290810b91900b876130c3565b93509350935093506000856001600160801b03161115612ef357612ee28483613b9f565b600155612eef8382613b9f565b6002555b600c54600d54612f1191600160e81b9004600290810b91900b6126dd565b50505050505050505050565b6060612559848460008561324d565b6000818310612f3b57816126d6565b5090919050565b6000836001600160a01b0316856001600160a01b03161115612f62579293925b846001600160a01b0316866001600160a01b031611612f8d57612f86858585613373565b9050612ffd565b836001600160a01b0316866001600160a01b03161015612fef576000612fb4878686613373565b90506000612fc38789866133dd565b9050806001600160801b0316826001600160801b031610612fe45780612fe6565b815b92505050612ffd565b612ffa8585846133dd565b90505b95945050505050565b6000826001600160a01b0316846001600160a01b03161115613026579192915b6001600160a01b03841661306f6fffffffffffffffffffffffffffffffff60601b606085901b166130578787613e02565b6001600160a01b0316866001600160a01b0316612561565b6125599190613bb6565b6000826001600160a01b0316846001600160a01b03161115613099579192915b6125596001600160801b0383166130b08686613e02565b6001600160a01b0316600160601b612561565b60008080806001600160801b038516156131815760405163a34123a760e01b8152600288810b600483015287900b60248201526001600160801b03861660448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a34123a79060640160408051808303816000875af1158015613157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061317b9190613b7b565b90945092505b6040516309e3d67b60e31b8152306004820152600288810b602483015287900b60448201526001600160801b036064820181905260848201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634f1eb3d89060a40160408051808303816000875af115801561320c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132309190613e2a565b94989397506001600160801b039081169650909316935090915050565b6060824710156132ae5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108d6565b6001600160a01b0385163b6133055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108d6565b600080866001600160a01b031685876040516133219190613e85565b60006040518083038185875af1925050503d806000811461335e576040519150601f19603f3d011682016040523d82523d6000602084013e613363565b606091505b5091509150610f6f828286613413565b6000826001600160a01b0316846001600160a01b03161115613393579192915b60006133b6856001600160a01b0316856001600160a01b0316600160601b612561565b9050612ffd6133d884836133ca8989613e02565b6001600160a01b0316612561565b61344c565b6000826001600160a01b0316846001600160a01b031611156133fd579192915b6125596133d883600160601b6133ca8888613e02565b606083156134225750816126d6565b8251156134325782518084602001fd5b8160405162461bcd60e51b81526004016108d69190613ea1565b806001600160801b038116811461346257600080fd5b919050565b6001600160a01b038116811461347c57600080fd5b50565b60006020828403121561349157600080fd5b81356126d681613467565b8060020b811461347c57600080fd5b600080604083850312156134be57600080fd5b82356134c98161349c565b915060208301356134d98161349c565b809150509250929050565b6000602082840312156134f657600080fd5b81356126d68161349c565b6001600160801b038116811461347c57600080fd5b6000806000806080858703121561352c57600080fd5b84356135378161349c565b9350602085013561354781613501565b9250604085013561355781613467565b9150606085013561356781613467565b939692955090935050565b803563ffffffff8116811461346257600080fd5b6000806040838503121561359957600080fd5b82356135a481613467565b91506135b260208401613572565b90509250929050565b6000602082840312156135cd57600080fd5b5035919050565b6000602082840312156135e657600080fd5b6126d682613572565b60008083601f84011261360157600080fd5b50813567ffffffffffffffff81111561361957600080fd5b60208301915083602082850101111561154457600080fd5b6000806000806060858703121561364757600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561366c57600080fd5b613678878288016135ef565b95989497509550505050565b801515811461347c57600080fd5b600080604083850312156136a557600080fd5b8235915060208301356134d981613684565b600080604083850312156136ca57600080fd5b50508035926020909101359150565b6000602082840312156136eb57600080fd5b81516126d681613467565b60006020828403121561370857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561373f5761373f61370f565b500290565b805169ffffffffffffffffffff8116811461346257600080fd5b600080600080600060a0868803121561377657600080fd5b61377f86613744565b94506020860151935060408601519250606086015191506137a260808701613744565b90509295509295909350565b805161ffff8116811461346257600080fd5b600080600080600080600060e0888a0312156137db57600080fd5b87516137e681613467565b60208901519097506137f78161349c565b9550613805604089016137ae565b9450613813606089016137ae565b9350613821608089016137ae565b925060a088015160ff8116811461383757600080fd5b60c089015190925061384881613684565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156138c257835163ffffffff16835292840192918401916001016138a0565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156138f7576138f7613858565b604052919050565b600067ffffffffffffffff82111561391957613919613858565b5060051b60200190565b600082601f83011261393457600080fd5b81516020613949613944836138ff565b6138ce565b82815260059290921b8401810191818101908684111561396857600080fd5b8286015b8481101561398c57805161397f81613467565b835291830191830161396c565b509695505050505050565b600080604083850312156139aa57600080fd5b825167ffffffffffffffff808211156139c257600080fd5b818501915085601f8301126139d657600080fd5b815160206139e6613944836138ff565b82815260059290921b84018101918181019089841115613a0557600080fd5b948201945b83861015613a335785518060060b8114613a245760008081fd5b82529482019490820190613a0a565b91880151919650909350505080821115613a4c57600080fd5b50613a5985828601613923565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615613a8e57613a8e61370f565b81667fffffffffffff018313811615613aa957613aa961370f565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80613ae057613ae0613ab3565b667fffffffffffff19821460001982141615613afe57613afe61370f565b90059392505050565b60008260060b80613b1a57613b1a613ab3565b808360060b0791505092915050565b60008160020b627fffff19811415613b4357613b4361370f565b6000190192915050565b60008219821115613b6057613b6061370f565b500190565b634e487b7160e01b600052600160045260246000fd5b60008060408385031215613b8e57600080fd5b505080516020909101519092909150565b600082821015613bb157613bb161370f565b500390565b600082613bc557613bc5613ab3565b500490565b60008160020b8360020b6000811281627fffff1901831281151615613bf157613bf161370f565b81627fffff018313811615613aa957613aa961370f565b60008160020b8360020b80613c1f57613c1f613ab3565b627fffff19821460001982141615613afe57613afe61370f565b60008160020b8360020b6000821282627fffff03821381151615613c5f57613c5f61370f565b82627fffff19038212811615613c7757613c7761370f565b50019392505050565b60008160020b8360020b627fffff600082136000841383830485118282161615613cac57613cac61370f565b627fffff196000851282811687830587121615613ccb57613ccb61370f565b60008712925085820587128484161615613ce757613ce761370f565b85850587128184161615613cfd57613cfd61370f565b5050509290910295945050505050565b6000600160ff1b821415613d2357613d2361370f565b5060000390565b60008160020b627fffff19811415613d4457613d4461370f565b60000392915050565b600082613d5c57613d5c613ab3565b500690565b600080600080600060a08688031215613d7957600080fd5b8551613d8481613501565b8095505060208601519350604086015192506060860151613da481613501565b6080870151909250613db581613501565b809150509295509295909350565b600060208284031215613dd557600080fd5b81516126d681613684565b60008260020b80613df357613df3613ab3565b808360020b0791505092915050565b60006001600160a01b0383811690831681811015613e2257613e2261370f565b039392505050565b60008060408385031215613e3d57600080fd5b8251613e4881613501565b60208401519092506134d981613501565b60005b83811015613e74578181015183820152602001613e5c565b838111156118895750506000910152565b60008251613e97818460208701613e59565b9190910192915050565b6020815260008251806020840152613ec0816040850160208701613e59565b601f01601f1916919091016040019291505056fea26469706673582212205b258f45c8b18a629777891d727c5394b3eada5d150a0023fd31586899085cb064736f6c634300080a0033",
}

// ApiABI is the input ABI used to generate the binding from.
// Deprecated: Use ApiMetaData.ABI instead.
var ApiABI = ApiMetaData.ABI

// ApiBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ApiMetaData.Bin instead.
var ApiBin = ApiMetaData.Bin

// DeployApi deploys a new Ethereum contract, binding an instance of Api to it.
func DeployApi(auth *bind.TransactOpts, backend bind.ContractBackend, params UniSqueethParam) (common.Address, *types.Transaction, *Api, error) {
	parsed, err := ApiMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ApiBin), backend, params)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// Api is an auto generated Go binding around an Ethereum contract.
type Api struct {
	ApiCaller     // Read-only binding to the contract
	ApiTransactor // Write-only binding to the contract
	ApiFilterer   // Log filterer for contract events
}

// ApiCaller is an auto generated read-only Go binding around an Ethereum contract.
type ApiCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ApiTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ApiFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ApiSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ApiSession struct {
	Contract     *Api              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ApiCallerSession struct {
	Contract *ApiCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// ApiTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ApiTransactorSession struct {
	Contract     *ApiTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ApiRaw is an auto generated low-level Go binding around an Ethereum contract.
type ApiRaw struct {
	Contract *Api // Generic contract binding to access the raw methods on
}

// ApiCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ApiCallerRaw struct {
	Contract *ApiCaller // Generic read-only contract binding to access the raw methods on
}

// ApiTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ApiTransactorRaw struct {
	Contract *ApiTransactor // Generic write-only contract binding to access the raw methods on
}

// NewApi creates a new instance of Api, bound to a specific deployed contract.
func NewApi(address common.Address, backend bind.ContractBackend) (*Api, error) {
	contract, err := bindApi(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Api{ApiCaller: ApiCaller{contract: contract}, ApiTransactor: ApiTransactor{contract: contract}, ApiFilterer: ApiFilterer{contract: contract}}, nil
}

// NewApiCaller creates a new read-only instance of Api, bound to a specific deployed contract.
func NewApiCaller(address common.Address, caller bind.ContractCaller) (*ApiCaller, error) {
	contract, err := bindApi(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ApiCaller{contract: contract}, nil
}

// NewApiTransactor creates a new write-only instance of Api, bound to a specific deployed contract.
func NewApiTransactor(address common.Address, transactor bind.ContractTransactor) (*ApiTransactor, error) {
	contract, err := bindApi(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ApiTransactor{contract: contract}, nil
}

// NewApiFilterer creates a new log filterer instance of Api, bound to a specific deployed contract.
func NewApiFilterer(address common.Address, filterer bind.ContractFilterer) (*ApiFilterer, error) {
	contract, err := bindApi(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ApiFilterer{contract: contract}, nil
}

// bindApi binds a generic wrapper to an already deployed contract.
func bindApi(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ApiABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.ApiCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.ApiTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Api *ApiCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Api.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Api *ApiTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Api *ApiTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Api.Contract.contract.Transact(opts, method, params...)
}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiCaller) Decimals(opts *bind.CallOpts, arg0 common.Address) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "Decimals", arg0)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiSession) Decimals(arg0 common.Address) (uint8, error) {
	return _Api.Contract.Decimals(&_Api.CallOpts, arg0)
}

// Decimals is a free data retrieval call binding the contract method 0xb09d5a50.
//
// Solidity: function Decimals(address ) view returns(uint8)
func (_Api *ApiCallerSession) Decimals(arg0 common.Address) (uint8, error) {
	return _Api.Contract.Decimals(&_Api.CallOpts, arg0)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCaller) UNIV3FACTORY(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "UNIV3_FACTORY")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// UNIV3FACTORY is a free data retrieval call binding the contract method 0x7a89cdd3.
//
// Solidity: function UNIV3_FACTORY() view returns(address)
func (_Api *ApiCallerSession) UNIV3FACTORY() (common.Address, error) {
	return _Api.Contract.UNIV3FACTORY(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "_WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xe0af3616.
//
// Solidity: function _WETH() view returns(address)
func (_Api *ApiCallerSession) WETH() (common.Address, error) {
	return _Api.Contract.WETH(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCaller) CHigh(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cHigh")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CHigh is a free data retrieval call binding the contract method 0x8e843c6c.
//
// Solidity: function cHigh() view returns(int24)
func (_Api *ApiCallerSession) CHigh() (*big.Int, error) {
	return _Api.Contract.CHigh(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCaller) CLow(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "cLow")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CLow is a free data retrieval call binding the contract method 0xd368867f.
//
// Solidity: function cLow() view returns(int24)
func (_Api *ApiCallerSession) CLow() (*big.Int, error) {
	return _Api.Contract.CLow(&_Api.CallOpts)
}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiCaller) CompIn0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compIn0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiSession) CompIn0() (*big.Int, error) {
	return _Api.Contract.CompIn0(&_Api.CallOpts)
}

// CompIn0 is a free data retrieval call binding the contract method 0x49901b9f.
//
// Solidity: function compIn0() view returns(uint256)
func (_Api *ApiCallerSession) CompIn0() (*big.Int, error) {
	return _Api.Contract.CompIn0(&_Api.CallOpts)
}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiCaller) CompIn1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compIn1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiSession) CompIn1() (*big.Int, error) {
	return _Api.Contract.CompIn1(&_Api.CallOpts)
}

// CompIn1 is a free data retrieval call binding the contract method 0x94730003.
//
// Solidity: function compIn1() view returns(uint256)
func (_Api *ApiCallerSession) CompIn1() (*big.Int, error) {
	return _Api.Contract.CompIn1(&_Api.CallOpts)
}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiCaller) CompOut0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compOut0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiSession) CompOut0() (*big.Int, error) {
	return _Api.Contract.CompOut0(&_Api.CallOpts)
}

// CompOut0 is a free data retrieval call binding the contract method 0xf258b95e.
//
// Solidity: function compOut0() view returns(uint256)
func (_Api *ApiCallerSession) CompOut0() (*big.Int, error) {
	return _Api.Contract.CompOut0(&_Api.CallOpts)
}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiCaller) CompOut1(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "compOut1")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiSession) CompOut1() (*big.Int, error) {
	return _Api.Contract.CompOut1(&_Api.CallOpts)
}

// CompOut1 is a free data retrieval call binding the contract method 0x66caf990.
//
// Solidity: function compOut1() view returns(uint256)
func (_Api *ApiCallerSession) CompOut1() (*big.Int, error) {
	return _Api.Contract.CompOut1(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "creator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() view returns(address)
func (_Api *ApiCallerSession) Creator() (common.Address, error) {
	return _Api.Contract.Creator(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "factory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() view returns(address)
func (_Api *ApiCallerSession) Factory() (common.Address, error) {
	return _Api.Contract.Factory(&_Api.CallOpts)
}

// GetLatestPriceChainLink is a free data retrieval call binding the contract method 0x46c0d97b.
//
// Solidity: function getLatestPriceChainLink() view returns(int256)
func (_Api *ApiCaller) GetLatestPriceChainLink(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getLatestPriceChainLink")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetLatestPriceChainLink is a free data retrieval call binding the contract method 0x46c0d97b.
//
// Solidity: function getLatestPriceChainLink() view returns(int256)
func (_Api *ApiSession) GetLatestPriceChainLink() (*big.Int, error) {
	return _Api.Contract.GetLatestPriceChainLink(&_Api.CallOpts)
}

// GetLatestPriceChainLink is a free data retrieval call binding the contract method 0x46c0d97b.
//
// Solidity: function getLatestPriceChainLink() view returns(int256)
func (_Api *ApiCallerSession) GetLatestPriceChainLink() (*big.Int, error) {
	return _Api.Contract.GetLatestPriceChainLink(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCaller) GetPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetPrice is a free data retrieval call binding the contract method 0x98d5fdca.
//
// Solidity: function getPrice() view returns(uint256)
func (_Api *ApiCallerSession) GetPrice() (*big.Int, error) {
	return _Api.Contract.GetPrice(&_Api.CallOpts)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCaller) GetQuoteAtTick(opts *bind.CallOpts, tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getQuoteAtTick", tick, baseAmount, baseToken, quoteToken)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetQuoteAtTick is a free data retrieval call binding the contract method 0x43c57a27.
//
// Solidity: function getQuoteAtTick(int24 tick, uint128 baseAmount, address baseToken, address quoteToken) pure returns(uint256 quote)
func (_Api *ApiCallerSession) GetQuoteAtTick(tick *big.Int, baseAmount *big.Int, baseToken common.Address, quoteToken common.Address) (*big.Int, error) {
	return _Api.Contract.GetQuoteAtTick(&_Api.CallOpts, tick, baseAmount, baseToken, quoteToken)
}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiCaller) GetTotalAmounts(opts *bind.CallOpts) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTotalAmounts")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiSession) GetTotalAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.CallOpts)
}

// GetTotalAmounts is a free data retrieval call binding the contract method 0xc4a7761e.
//
// Solidity: function getTotalAmounts() view returns(uint256, uint256)
func (_Api *ApiCallerSession) GetTotalAmounts() (*big.Int, *big.Int, error) {
	return _Api.Contract.GetTotalAmounts(&_Api.CallOpts)
}

// GetTwap is a free data retrieval call binding the contract method 0x66d7505b.
//
// Solidity: function getTwap(address _pool, uint32 twapInterval) view returns(int24 tick)
func (_Api *ApiCaller) GetTwap(opts *bind.CallOpts, _pool common.Address, twapInterval uint32) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getTwap", _pool, twapInterval)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTwap is a free data retrieval call binding the contract method 0x66d7505b.
//
// Solidity: function getTwap(address _pool, uint32 twapInterval) view returns(int24 tick)
func (_Api *ApiSession) GetTwap(_pool common.Address, twapInterval uint32) (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts, _pool, twapInterval)
}

// GetTwap is a free data retrieval call binding the contract method 0x66d7505b.
//
// Solidity: function getTwap(address _pool, uint32 twapInterval) view returns(int24 tick)
func (_Api *ApiCallerSession) GetTwap(_pool common.Address, twapInterval uint32) (*big.Int, error) {
	return _Api.Contract.GetTwap(&_Api.CallOpts, _pool, twapInterval)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCaller) GetUniAmounts(opts *bind.CallOpts, tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "getUniAmounts", tickLower, tickUpper)

	outstruct := new(struct {
		Amount0 *big.Int
		Amount1 *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount0 = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Amount1 = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// GetUniAmounts is a free data retrieval call binding the contract method 0x9d371c30.
//
// Solidity: function getUniAmounts(int24 tickLower, int24 tickUpper) view returns(uint256 amount0, uint256 amount1)
func (_Api *ApiCallerSession) GetUniAmounts(tickLower *big.Int, tickUpper *big.Int) (struct {
	Amount0 *big.Int
	Amount1 *big.Int
}, error) {
	return _Api.Contract.GetUniAmounts(&_Api.CallOpts, tickLower, tickUpper)
}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiCaller) LastCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "lastCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiSession) LastCount() (*big.Int, error) {
	return _Api.Contract.LastCount(&_Api.CallOpts)
}

// LastCount is a free data retrieval call binding the contract method 0x6b16ad67.
//
// Solidity: function lastCount() view returns(uint256)
func (_Api *ApiCallerSession) LastCount() (*big.Int, error) {
	return _Api.Contract.LastCount(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCaller) MaxTwapDeviation(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "maxTwapDeviation")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// MaxTwapDeviation is a free data retrieval call binding the contract method 0xe7c7cb91.
//
// Solidity: function maxTwapDeviation() view returns(int24)
func (_Api *ApiCallerSession) MaxTwapDeviation() (*big.Int, error) {
	return _Api.Contract.MaxTwapDeviation(&_Api.CallOpts)
}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiCaller) Motivator(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivator", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiSession) Motivator(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivator(&_Api.CallOpts, arg0, arg1)
}

// Motivator is a free data retrieval call binding the contract method 0xfdea65aa.
//
// Solidity: function motivator(uint256 , uint256 ) view returns(address)
func (_Api *ApiCallerSession) Motivator(arg0 *big.Int, arg1 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivator(&_Api.CallOpts, arg0, arg1)
}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiCaller) MotivatorFeeRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivatorFeeRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiSession) MotivatorFeeRate() (uint8, error) {
	return _Api.Contract.MotivatorFeeRate(&_Api.CallOpts)
}

// MotivatorFeeRate is a free data retrieval call binding the contract method 0x08038459.
//
// Solidity: function motivatorFeeRate() view returns(uint8)
func (_Api *ApiCallerSession) MotivatorFeeRate() (uint8, error) {
	return _Api.Contract.MotivatorFeeRate(&_Api.CallOpts)
}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiCaller) Motivators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "motivators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiSession) Motivators(arg0 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivators(&_Api.CallOpts, arg0)
}

// Motivators is a free data retrieval call binding the contract method 0x6cf9f190.
//
// Solidity: function motivators(uint256 ) view returns(address)
func (_Api *ApiCallerSession) Motivators(arg0 *big.Int) (common.Address, error) {
	return _Api.Contract.Motivators(&_Api.CallOpts, arg0)
}

// OSqth is a free data retrieval call binding the contract method 0xa577e0bc.
//
// Solidity: function oSqth() view returns(address)
func (_Api *ApiCaller) OSqth(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "oSqth")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OSqth is a free data retrieval call binding the contract method 0xa577e0bc.
//
// Solidity: function oSqth() view returns(address)
func (_Api *ApiSession) OSqth() (common.Address, error) {
	return _Api.Contract.OSqth(&_Api.CallOpts)
}

// OSqth is a free data retrieval call binding the contract method 0xa577e0bc.
//
// Solidity: function oSqth() view returns(address)
func (_Api *ApiCallerSession) OSqth() (common.Address, error) {
	return _Api.Contract.OSqth(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCaller) Pool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Pool is a free data retrieval call binding the contract method 0x16f0115b.
//
// Solidity: function pool() view returns(address)
func (_Api *ApiCallerSession) Pool() (common.Address, error) {
	return _Api.Contract.Pool(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCaller) Protocol(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocol")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// Protocol is a free data retrieval call binding the contract method 0x8ce74426.
//
// Solidity: function protocol() view returns(address)
func (_Api *ApiCallerSession) Protocol() (common.Address, error) {
	return _Api.Contract.Protocol(&_Api.CallOpts)
}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiCaller) ProtocolFeeRate(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "protocolFeeRate")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiSession) ProtocolFeeRate() (uint8, error) {
	return _Api.Contract.ProtocolFeeRate(&_Api.CallOpts)
}

// ProtocolFeeRate is a free data retrieval call binding the contract method 0x58f85880.
//
// Solidity: function protocolFeeRate() view returns(uint8)
func (_Api *ApiCallerSession) ProtocolFeeRate() (uint8, error) {
	return _Api.Contract.ProtocolFeeRate(&_Api.CallOpts)
}

// Quoteamount is a free data retrieval call binding the contract method 0xc387f25c.
//
// Solidity: function quoteamount() view returns(uint128)
func (_Api *ApiCaller) Quoteamount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "quoteamount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Quoteamount is a free data retrieval call binding the contract method 0xc387f25c.
//
// Solidity: function quoteamount() view returns(uint128)
func (_Api *ApiSession) Quoteamount() (*big.Int, error) {
	return _Api.Contract.Quoteamount(&_Api.CallOpts)
}

// Quoteamount is a free data retrieval call binding the contract method 0xc387f25c.
//
// Solidity: function quoteamount() view returns(uint128)
func (_Api *ApiCallerSession) Quoteamount() (*big.Int, error) {
	return _Api.Contract.Quoteamount(&_Api.CallOpts)
}

// SqthEthPool is a free data retrieval call binding the contract method 0x90df7314.
//
// Solidity: function sqth_eth_pool() view returns(address)
func (_Api *ApiCaller) SqthEthPool(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "sqth_eth_pool")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SqthEthPool is a free data retrieval call binding the contract method 0x90df7314.
//
// Solidity: function sqth_eth_pool() view returns(address)
func (_Api *ApiSession) SqthEthPool() (common.Address, error) {
	return _Api.Contract.SqthEthPool(&_Api.CallOpts)
}

// SqthEthPool is a free data retrieval call binding the contract method 0x90df7314.
//
// Solidity: function sqth_eth_pool() view returns(address)
func (_Api *ApiCallerSession) SqthEthPool() (common.Address, error) {
	return _Api.Contract.SqthEthPool(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCaller) TickSpacing(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "tickSpacing")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// TickSpacing is a free data retrieval call binding the contract method 0xd0c93a7c.
//
// Solidity: function tickSpacing() view returns(int24)
func (_Api *ApiCallerSession) TickSpacing() (*big.Int, error) {
	return _Api.Contract.TickSpacing(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCaller) Token0(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token0")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token0 is a free data retrieval call binding the contract method 0x0dfe1681.
//
// Solidity: function token0() view returns(address)
func (_Api *ApiCallerSession) Token0() (common.Address, error) {
	return _Api.Contract.Token0(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCaller) Token1(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "token1")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// Token1 is a free data retrieval call binding the contract method 0xd21220a7.
//
// Solidity: function token1() view returns(address)
func (_Api *ApiCallerSession) Token1() (common.Address, error) {
	return _Api.Contract.Token1(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCaller) TwapDuration(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _Api.contract.Call(opts, &out, "twapDuration")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// TwapDuration is a free data retrieval call binding the contract method 0x26d89545.
//
// Solidity: function twapDuration() view returns(uint32)
func (_Api *ApiCallerSession) TwapDuration() (uint32, error) {
	return _Api.Contract.TwapDuration(&_Api.CallOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactor) CallFunds(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "callFunds")
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// CallFunds is a paid mutator transaction binding the contract method 0x7c7311fe.
//
// Solidity: function callFunds() returns()
func (_Api *ApiTransactorSession) CallFunds() (*types.Transaction, error) {
	return _Api.Contract.CallFunds(&_Api.TransactOpts)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns()
func (_Api *ApiTransactor) Rebalance(opts *bind.TransactOpts, newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "rebalance", newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns()
func (_Api *ApiSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// Rebalance is a paid mutator transaction binding the contract method 0x393ed075.
//
// Solidity: function rebalance(int24 newLow, int24 newHigh) returns()
func (_Api *ApiTransactorSession) Rebalance(newLow *big.Int, newHigh *big.Int) (*types.Transaction, error) {
	return _Api.Contract.Rebalance(&_Api.TransactOpts, newLow, newHigh)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactor) SetMaxTwapDeviation(opts *bind.TransactOpts, _maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setMaxTwapDeviation", _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetMaxTwapDeviation is a paid mutator transaction binding the contract method 0x3cbff3fe.
//
// Solidity: function setMaxTwapDeviation(int24 _maxTwapDeviation) returns()
func (_Api *ApiTransactorSession) SetMaxTwapDeviation(_maxTwapDeviation *big.Int) (*types.Transaction, error) {
	return _Api.Contract.SetMaxTwapDeviation(&_Api.TransactOpts, _maxTwapDeviation)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiTransactor) SetProtocol(opts *bind.TransactOpts, _protocol common.Address) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setProtocol", _protocol)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiSession) SetProtocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetProtocol(&_Api.TransactOpts, _protocol)
}

// SetProtocol is a paid mutator transaction binding the contract method 0x0a9d793d.
//
// Solidity: function setProtocol(address _protocol) returns()
func (_Api *ApiTransactorSession) SetProtocol(_protocol common.Address) (*types.Transaction, error) {
	return _Api.Contract.SetProtocol(&_Api.TransactOpts, _protocol)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactor) SetTwapDuration(opts *bind.TransactOpts, _twapDuration uint32) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "setTwapDuration", _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// SetTwapDuration is a paid mutator transaction binding the contract method 0xc433c80a.
//
// Solidity: function setTwapDuration(uint32 _twapDuration) returns()
func (_Api *ApiTransactorSession) SetTwapDuration(_twapDuration uint32) (*types.Transaction, error) {
	return _Api.Contract.SetTwapDuration(&_Api.TransactOpts, _twapDuration)
}

// TradeSqth is a paid mutator transaction binding the contract method 0xe5cff3b2.
//
// Solidity: function tradeSqth(uint256 amount, bool zeroForOne) returns()
func (_Api *ApiTransactor) TradeSqth(opts *bind.TransactOpts, amount *big.Int, zeroForOne bool) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "tradeSqth", amount, zeroForOne)
}

// TradeSqth is a paid mutator transaction binding the contract method 0xe5cff3b2.
//
// Solidity: function tradeSqth(uint256 amount, bool zeroForOne) returns()
func (_Api *ApiSession) TradeSqth(amount *big.Int, zeroForOne bool) (*types.Transaction, error) {
	return _Api.Contract.TradeSqth(&_Api.TransactOpts, amount, zeroForOne)
}

// TradeSqth is a paid mutator transaction binding the contract method 0xe5cff3b2.
//
// Solidity: function tradeSqth(uint256 amount, bool zeroForOne) returns()
func (_Api *ApiTransactorSession) TradeSqth(amount *big.Int, zeroForOne bool) (*types.Transaction, error) {
	return _Api.Contract.TradeSqth(&_Api.TransactOpts, amount, zeroForOne)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3MintCallback(opts *bind.TransactOpts, amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3MintCallback", amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3MintCallback is a paid mutator transaction binding the contract method 0xd3487997.
//
// Solidity: function uniswapV3MintCallback(uint256 amount0, uint256 amount1, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3MintCallback(amount0 *big.Int, amount1 *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3MintCallback(&_Api.TransactOpts, amount0, amount1, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactor) UniswapV3SwapCallback(opts *bind.TransactOpts, amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.contract.Transact(opts, "uniswapV3SwapCallback", amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// UniswapV3SwapCallback is a paid mutator transaction binding the contract method 0xfa461e33.
//
// Solidity: function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) returns()
func (_Api *ApiTransactorSession) UniswapV3SwapCallback(amount0Delta *big.Int, amount1Delta *big.Int, data []byte) (*types.Transaction, error) {
	return _Api.Contract.UniswapV3SwapCallback(&_Api.TransactOpts, amount0Delta, amount1Delta, data)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() payable returns()
func (_Api *ApiTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Api.Contract.Fallback(&_Api.TransactOpts, calldata)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Api.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_Api *ApiTransactorSession) Receive() (*types.Transaction, error) {
	return _Api.Contract.Receive(&_Api.TransactOpts)
}

// ApiAllocFeesIterator is returned from FilterAllocFees and is used to iterate over the raw logs and unpacked data for AllocFees events raised by the Api contract.
type ApiAllocFeesIterator struct {
	Event *ApiAllocFees // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiAllocFeesIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiAllocFees)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiAllocFees)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiAllocFeesIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiAllocFeesIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiAllocFees represents a AllocFees event raised by the Api contract.
type ApiAllocFees struct {
	Arg0   common.Address
	UFees0 *big.Int
	UFees1 *big.Int
	LFees0 *big.Int
	LFees1 *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterAllocFees is a free log retrieval operation binding the contract event 0x1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac4080861224.
//
// Solidity: event AllocFees(address indexed arg0, uint256 uFees0, uint256 uFees1, uint256 lFees0, uint256 lFees1)
func (_Api *ApiFilterer) FilterAllocFees(opts *bind.FilterOpts, arg0 []common.Address) (*ApiAllocFeesIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "AllocFees", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiAllocFeesIterator{contract: _Api.contract, event: "AllocFees", logs: logs, sub: sub}, nil
}

// WatchAllocFees is a free log subscription operation binding the contract event 0x1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac4080861224.
//
// Solidity: event AllocFees(address indexed arg0, uint256 uFees0, uint256 uFees1, uint256 lFees0, uint256 lFees1)
func (_Api *ApiFilterer) WatchAllocFees(opts *bind.WatchOpts, sink chan<- *ApiAllocFees, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "AllocFees", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiAllocFees)
				if err := _Api.contract.UnpackLog(event, "AllocFees", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAllocFees is a log parse operation binding the contract event 0x1db35eea6a01dacbdc15971dea41d55edc15a842c4165969c102ac4080861224.
//
// Solidity: event AllocFees(address indexed arg0, uint256 uFees0, uint256 uFees1, uint256 lFees0, uint256 lFees1)
func (_Api *ApiFilterer) ParseAllocFees(log types.Log) (*ApiAllocFees, error) {
	event := new(ApiAllocFees)
	if err := _Api.contract.UnpackLog(event, "AllocFees", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiBurnUniV3LiquidityIterator is returned from FilterBurnUniV3Liquidity and is used to iterate over the raw logs and unpacked data for BurnUniV3Liquidity events raised by the Api contract.
type ApiBurnUniV3LiquidityIterator struct {
	Event *ApiBurnUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiBurnUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiBurnUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiBurnUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiBurnUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiBurnUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiBurnUniV3Liquidity represents a BurnUniV3Liquidity event raised by the Api contract.
type ApiBurnUniV3Liquidity struct {
	CLow      *big.Int
	CHigh     *big.Int
	Liquidity *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBurnUniV3Liquidity is a free log retrieval operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) FilterBurnUniV3Liquidity(opts *bind.FilterOpts, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (*ApiBurnUniV3LiquidityIterator, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiBurnUniV3LiquidityIterator{contract: _Api.contract, event: "BurnUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchBurnUniV3Liquidity is a free log subscription operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) WatchBurnUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiBurnUniV3Liquidity, cLow []*big.Int, cHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var cLowRule []interface{}
	for _, cLowItem := range cLow {
		cLowRule = append(cLowRule, cLowItem)
	}
	var cHighRule []interface{}
	for _, cHighItem := range cHigh {
		cHighRule = append(cHighRule, cHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "BurnUniV3Liquidity", cLowRule, cHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiBurnUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBurnUniV3Liquidity is a log parse operation binding the contract event 0x26ba85370c664ab7a58c96ead25cdaee79c4042f14f9e6d0a902e10a6a82a05d.
//
// Solidity: event BurnUniV3Liquidity(int24 indexed cLow, int24 indexed cHigh, uint128 indexed liquidity)
func (_Api *ApiFilterer) ParseBurnUniV3Liquidity(log types.Log) (*ApiBurnUniV3Liquidity, error) {
	event := new(ApiBurnUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "BurnUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMintUniV3LiquidityIterator is returned from FilterMintUniV3Liquidity and is used to iterate over the raw logs and unpacked data for MintUniV3Liquidity events raised by the Api contract.
type ApiMintUniV3LiquidityIterator struct {
	Event *ApiMintUniV3Liquidity // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMintUniV3LiquidityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMintUniV3Liquidity)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMintUniV3Liquidity)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMintUniV3LiquidityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMintUniV3LiquidityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMintUniV3Liquidity represents a MintUniV3Liquidity event raised by the Api contract.
type ApiMintUniV3Liquidity struct {
	NewLow    *big.Int
	NewHigh   *big.Int
	Liquidity *big.Int
	Minied0   *big.Int
	Minted1   *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMintUniV3Liquidity is a free log retrieval operation binding the contract event 0x2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity, uint256 minied0, uint256 minted1)
func (_Api *ApiFilterer) FilterMintUniV3Liquidity(opts *bind.FilterOpts, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (*ApiMintUniV3LiquidityIterator, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return &ApiMintUniV3LiquidityIterator{contract: _Api.contract, event: "MintUniV3Liquidity", logs: logs, sub: sub}, nil
}

// WatchMintUniV3Liquidity is a free log subscription operation binding the contract event 0x2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity, uint256 minied0, uint256 minted1)
func (_Api *ApiFilterer) WatchMintUniV3Liquidity(opts *bind.WatchOpts, sink chan<- *ApiMintUniV3Liquidity, newLow []*big.Int, newHigh []*big.Int, liquidity []*big.Int) (event.Subscription, error) {

	var newLowRule []interface{}
	for _, newLowItem := range newLow {
		newLowRule = append(newLowRule, newLowItem)
	}
	var newHighRule []interface{}
	for _, newHighItem := range newHigh {
		newHighRule = append(newHighRule, newHighItem)
	}
	var liquidityRule []interface{}
	for _, liquidityItem := range liquidity {
		liquidityRule = append(liquidityRule, liquidityItem)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "MintUniV3Liquidity", newLowRule, newHighRule, liquidityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMintUniV3Liquidity)
				if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMintUniV3Liquidity is a log parse operation binding the contract event 0x2053097a1a46c9ed5027c218065d03822e112930253bcc0e3c0a11b887632ebf.
//
// Solidity: event MintUniV3Liquidity(int24 indexed newLow, int24 indexed newHigh, uint128 indexed liquidity, uint256 minied0, uint256 minted1)
func (_Api *ApiFilterer) ParseMintUniV3Liquidity(log types.Log) (*ApiMintUniV3Liquidity, error) {
	event := new(ApiMintUniV3Liquidity)
	if err := _Api.contract.UnpackLog(event, "MintUniV3Liquidity", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiMyLogIterator is returned from FilterMyLog and is used to iterate over the raw logs and unpacked data for MyLog events raised by the Api contract.
type ApiMyLogIterator struct {
	Event *ApiMyLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiMyLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiMyLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiMyLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiMyLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiMyLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiMyLog represents a MyLog event raised by the Api contract.
type ApiMyLog struct {
	Arg0 string
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterMyLog is a free log retrieval operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) FilterMyLog(opts *bind.FilterOpts) (*ApiMyLogIterator, error) {

	logs, sub, err := _Api.contract.FilterLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return &ApiMyLogIterator{contract: _Api.contract, event: "MyLog", logs: logs, sub: sub}, nil
}

// WatchMyLog is a free log subscription operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) WatchMyLog(opts *bind.WatchOpts, sink chan<- *ApiMyLog) (event.Subscription, error) {

	logs, sub, err := _Api.contract.WatchLogs(opts, "MyLog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiMyLog)
				if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMyLog is a log parse operation binding the contract event 0x8d1cced004452bd270777a8c670f9f7e7c4fdde56f2db331fe289d39dc2624ad.
//
// Solidity: event MyLog(string arg0, uint256 arg1)
func (_Api *ApiFilterer) ParseMyLog(log types.Log) (*ApiMyLog, error) {
	event := new(ApiMyLog)
	if err := _Api.contract.UnpackLog(event, "MyLog", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ApiRebalanceIterator is returned from FilterRebalance and is used to iterate over the raw logs and unpacked data for Rebalance events raised by the Api contract.
type ApiRebalanceIterator struct {
	Event *ApiRebalance // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ApiRebalanceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ApiRebalance)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ApiRebalance)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ApiRebalanceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ApiRebalanceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ApiRebalance represents a Rebalance event raised by the Api contract.
type ApiRebalance struct {
	Arg0 common.Address
	U0   *big.Int
	U1   *big.Int
	C0   *big.Int
	C1   *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRebalance is a free log retrieval operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) FilterRebalance(opts *bind.FilterOpts, arg0 []common.Address) (*ApiRebalanceIterator, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.FilterLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return &ApiRebalanceIterator{contract: _Api.contract, event: "Rebalance", logs: logs, sub: sub}, nil
}

// WatchRebalance is a free log subscription operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) WatchRebalance(opts *bind.WatchOpts, sink chan<- *ApiRebalance, arg0 []common.Address) (event.Subscription, error) {

	var arg0Rule []interface{}
	for _, arg0Item := range arg0 {
		arg0Rule = append(arg0Rule, arg0Item)
	}

	logs, sub, err := _Api.contract.WatchLogs(opts, "Rebalance", arg0Rule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ApiRebalance)
				if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRebalance is a log parse operation binding the contract event 0x90fea00fe6e24ccfd7c40b40e07486e8b69ada2a3ad693dd908b6479cac36b6b.
//
// Solidity: event Rebalance(address indexed arg0, uint256 u0, uint256 u1, uint256 c0, uint256 c1)
func (_Api *ApiFilterer) ParseRebalance(log types.Log) (*ApiRebalance, error) {
	event := new(ApiRebalance)
	if err := _Api.contract.UnpackLog(event, "Rebalance", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
