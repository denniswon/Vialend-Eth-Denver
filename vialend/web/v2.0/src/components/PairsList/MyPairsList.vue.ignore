<template>
  <div id="pairs_container" class="pairs-container">
    <div style="margin:15px;">
      <el-select
        v-model="listQuery.network"
        placeholder="Network"
        clearable
        style="width: 120px"
        class="filter-item"
        size="small"
      >
        <el-option v-for="item in networkOptions" :key="item" :label="item" :value="item" />
      </el-select>&nbsp;&nbsp;
      <el-select
        v-model="listQuery.strategy"
        placeholder="Strategy"
        clearable
        style="width: 120px"
        class="filter-item"
        size="small"
      >
        <el-option v-for="item in strategyOptions" :key="item" :label="item" :value="item" />
      </el-select>
      <el-select
        v-model="listQuery.depositasset"
        placeholder="Deposit Asset"
        clearable
        style="width: 120px"
        class="filter-item"
        size="small"
      >
        <el-option v-for="item in depositassetOptions" :key="item" :label="item" :value="item" />
      </el-select>
      <el-select
        v-model="listQuery.sortby"
        placeholder="Sort By"
        clearable
        style="width: 120px"
        class="filter-item"
        size="small"
      >
        <el-option v-for="item in sortbyOptions" :key="item" :label="item" :value="item" />
      </el-select>
      <div class="phone">
        <svg-icon name="phone" width="26px" height="26px"></svg-icon>
      </div>
    </div>
    <div class="clear"></div>

    <el-row :gutter="20" class="panel-group" justify="center" v-if="pairsList.size() > 0">
      <el-col
        :xs="23"
        :sm="12"
        :md="7"
        :lg="7"
        class="card-panel-col"
        v-for="pair in pairsList._getData()"
        :key="pair.id"
      >
      <router-link :to="'products/'+pair.token0.symbol.concat('-', pair.token1.symbol)">
        <vue-flip width="320px" horizontal="true" height="500px" v-model="pair.flipped">
          <template v-slot:front  class="front">
            <el-card
              class="box-card"
              v-loading="pair.gettingData"
              element-loading-text="Loading pair data"
              element-loading-spinner="el-icon-loading"
              element-loading-background="rgba(0, 0, 0, 0.8)"
            >
              <div slot="header" class="clearfix card-title">
                <div class="block">
                  <el-tag size="small" hit>UNI-COMP</el-tag>&nbsp;&nbsp;
                  <el-tag class="tag-item" type="info" effect="plain" size="small">V1</el-tag>
                </div>

                <span
                  style="float: right; padding: 3px 0;cursor: pointer;"
                  type="text"
                  @click="pair.flipped = !pair.flipped"
                >
                  <i class="el-icon-menu"></i>
                </span>
              </div>
              <div class="token-icon">
                <cryptoicon :symbol="pair.token1.symbol" size="60" />
              </div>
              <div class="card-container">
                <div class="card-pairinfo">
                  <div class="pair-name text item">
                    <span>{{ pair.token0.symbol }} - {{ pair.token1.symbol }}</span>
                  </div>
                  <div class="pair-intro text item">
                    <span>
                      Generates yield by providing concentrated liquidity on
                      Uniswap V3 and lending pools.
                    </span>
                  </div>
                  <div class="pair-apy text item">
                    <span class="f12">CURRENT PROJECTED YIELD(APY)</span>
                    <br />
                    <span class="f24">{{ Number(pair.netAPY).toFixed(2) }}%</span>
                  </div>
                  <div class="text item">
                    <span class="pair-current-deposits">Current Deposits</span>
                    <span class="pair-deposits-val">
                      {{ Number(pair.currentDeposits / Math.pow(10, Number(pair.token1.decimals))).toExponential(5) }}&nbsp;{{
                      pair.token1.symbol
                      }}
                    </span>
                  </div>
                  <div style="clear:both;"></div>
                  <div class="text item">
                      <el-slider v-model="maxCapacity" :show-tooltip="false"></el-slider>
                  </div>
                  <div style="clear:both;"></div>
                  <div class="text item">
                    <span class="pair-max-capacity">Max Capacity</span>
                    <span class="pair-capacity-val">100M&nbsp;{{ pair.token1.symbol }}</span>
                  </div>
                </div>
                <div class="card-your-position">
                  <span class="text">Your Position</span>
                  <span class="pos-val">---</span>
                </div>
              </div>
            </el-card>
          </template>
          <template v-slot:back class="back">
            <el-card class="box-card" v-loading="pair.gettingData"
                element-loading-text="Loading pair data"
                element-loading-spinner="el-icon-loading"
                element-loading-background="rgba(0, 0, 0, 0.8)">
              <div slot="header" class="clearfix card-title">
                <span style="font-size:20px;">{{ pair.token0.symbol }} / {{ pair.token1.symbol }}</span>
                <span
                  style="float: right; padding: 3px 0"
                  type="text"
                  @click="pair.flipped = !pair.flipped"
                >
                  <i class="el-icon-s-data"></i>
                </span>
              </div>

              <div class="text item">
                <span>Token Detail</span>
              </div>
              <div class="text item">
                <br />
                <span>&nbsp;</span>
              </div>
              <div class="text item">
                <br />
                <span>&nbsp;</span>
              </div>
              <div class="text item">
                <br />
                <span>&nbsp;</span>
              </div>
            </el-card>
          </template>
        </vue-flip>
      </router-link>
      </el-col>
    </el-row>
  </div>
</template>

<script lang="ts">
import { Component, Prop, Vue, Watch } from 'vue-property-decorator'
import { getWeb3Instance } from '../../common/Web3'
import PairsData from '../../common/PairsData'
import VueFlip from 'vue-flip'

// const contractABI = require('../../abi/ViaLendFeeMakerABI.json')
// const uniswapV3PoolABI = require('../../abi/UniswapV3PoolABI.json')
// const ViaLendTokenABI = require('../../abi/VialendTokenABI.json')
// const ethereum = (window as any).ethereum

@Component({
  name: 'MyPairsList',
  components: {
    'vue-flip': VueFlip
  }
})
export default class extends Vue {
  // @Prop(ArrayList)
  // pairsList!:ArrayList<Pairs>;

  // @Prop(Boolean)
  // pairsListLoading!:boolean

  @Prop(PairsData)
  pairsData!: PairsData

  web3 = getWeb3Instance()
  // pairsData = new PairsData();
  exchangeTimer = ''
  currentAccount = ''
  isConnected = this.$store.state.isConnected
  pairsList = this.pairsData.pairsList
  selectedPair = 1
  selectedPairIndex = 0
  pairsLoadComplete = false
  pairsListComplete = false
  pairsListLoading = false
  filterCommand = 'All'
  newPairDialogVisible = false
  maxCapacity = 60
  newPairform = {
    networkid: 3,
    acc: 0,
    protocolfee: 10,
    uniPortion: 30,
    team: '0xEa24c7256ab5c61b4dC1c5cB600A3D0bE826a440',
    token0name: '',
    token1name: '',
    feetier: null,
    unisV3Portion: '',
    rebalanceStrategy: '',
    maxSupply: '',
    vauAddr: '',
    period: ''
  }

  private listQuery = {
    page: 1,
    limit: 20,
    network: undefined,
    strategy: undefined,
    depositasset: undefined,
    sortby: undefined
  }

  private networkOptions = ['Ethereum', 'Polygon', 'Optimism']
  private strategyOptions = ['UniV3+Compound', 'UniV3+Aave', 'UniV3 Charm-Style', 'UniV3 Visor-STYLE', 'Bancor3']
  private depositassetOptions = ['All', 'WETH', 'USDC', 'WBTC', 'DAI', 'USDT']
  private sortbyOptions = ['None', 'APY', 'Current Deposits']

  get pairsListCount() {
    return this.pairsData.pairsList.size()
  }

  // @Watch('pairsData.pairsLoadComplete')
  // watchPairsListComplete(newVal:boolean) {
  //   console.log('Loading status of PairsListï¼š', newVal)
  //   if (newVal) {
  //     if (this.$store.state.isConnected && this.$store.state.validNetwork && !this.pairsListLoading) {
  //       console.log('begin loadMyPairsList')
  //       this.pairsList = this.pairsData.pairsList
  //       this.loadMyPairsList()
  //     }
  //   }
  // }

  @Watch('pairsListCount')
  watchPairsListChange(newVal: number, oldVal: number) {
    console.log('Change of PairsList:', newVal, ',old value:', oldVal)
    for (let i = 0; i < newVal; i++) {
      console.log('pair id=', this.pairsData.pairsList.get(i).id)
      if (!this.pairsData.pairsList.get(i).loadDataCompleted && !this.pairsData.pairsList.get(i).gettingData) {
        this.pairsData.pairsList.get(i).gettingData = true
        this.pairsData.getPairPublicData(this.pairsData.pairsList.get(i))
      }
    }
  }

  showNewPairDialog() {
    this.newPairDialogVisible = true
  }

  handleCommand(command: string) {
  // this.$message('click on item ' + command)
    this.filterCommand = command
  // this.$refs.messageDrop.hide()
  }

  created() {
  // if (ethereum.selectedAddress !== null && ethereum.selectedAddress !== undefined) {
  //   if (!this.$store.state.isAdmin) {
  //     if (localStorage.getItem('isAdmin') == null || localStorage.getItem('isAdmin') === undefined) {
  //       console.log('localStorage isAdmin is null')
  //       self.location.replace('/dashboard')
  //     } else if (!localStorage.getItem('isAdmin')) {
  //       console.log('localStorage isAdmin is false')
  //       self.location.replace('/dashboard')
  //     }
  //   }
  // } else if (localStorage.getItem('isAdmin') == null || localStorage.getItem('isAdmin') === undefined) {
  //   console.log('localStorage isAdmin is null')
  //   self.location.replace('/dashboard')
  // } else if (!localStorage.getItem('isAdmin')) {
  //   console.log('localStorage isAdmin is false')
  //   self.location.replace('/dashboard')
  // }
  // this.pairsListLoading = true
  //   console.log('validNetwork=', this.$store.state.validNetwork, ';pairsList size=', this.pairsList.size())
  //   console.log('parent pairsList size=', this.pairsData.pairsList.size())
  //   if (this.$store.state.validNetwork) {
  //     if (this.pairsData.pairsList.size() === 0) {
  //       this.pairsData.loadPairsInfo()
  //     } else {
  //       this.pairsList = this.pairsData.pairsList
  //       this.loadMyPairsList()
  //     }
  //   }
  // this.pairsListLoading = false
    console.log('pairsList.size=', this.pairsData.pairsList.size())
    if (this.$store.state.validNetwork && this.$store.state.isConnected && this.pairsData.pairsList.size() === 0) {
      this.pairsData.loadPairsInfo()
    }
  }
}
</script>

<style scoped>
.pairs-container{
    margin:50px;
    margin:0 auto;
}
.card-panel-col{
    height:515px;
}
.box-card {
  width: 300px;
  height: 500px;
  margin: 10px;
  padding-top: 0px;
  margin-top: 20px;
  /* background-color: #121218; */
  border-radius: 16px;
}
.box-card:hover {
  border-style: solid;
  border-color: #03a9f4;
  box-shadow: 0 0 15px #03a9f4;
}
.el-card /deep/ .el-card__header {
  background-color: #102130 !important;
  color: #ffffff;
  height: 126px;
}
.el-card /deep/ .el-card__body {
  background-color: #121218 !important;
  padding: 0px;
  color: #ffffff;
}
.box-card-currency {
  width: 900px;
  margin: 10px;
}
.el-form-item__label {
  line-height: 20px !important;
}
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}
#app,
.box {
  height: 100%;
}
.el-container {
  height: 100%;
}
.el-input-number.is-without-controls .el-input__inner {
  width: 200px;
  line-height: 30px;
  height: 28px;
}
.block {
  float: left;
}
.card-container {
  width: 100%;
  height: 600px;
  margin: 0px;
  line-height: 22px;
  background-color: #1c1c22;
}
.card-pairinfo {
  height: 300px;
  width: 100%;
  margin: 0;
  padding: 38px 20px 10px 20px;
  background-color: #121218;
  border-radius: 16px;
}
.card-your-position {
  width: 100%;
  position: absolute;
  margin: 20px;
}
.card-your-position .pos-val {
  margin-left: 135px;
}

.f12 {
  color: #ffffff;
  font-family: sans-serif;
  font-size: 12px;
}
.f24 {
  color: #ffffff;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 24px;
  text-transform: uppercase;
}
.token-icon {
  position: absolute;
  margin-top: -30px;
  margin-left: 26px;
}
.pair-name {
  font-size: 20px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  padding-bottom: 20px;
}
.pair-intro {
  color: #ffffff;
  font-family: Inter, sans-serif;
  font-size: 14px;
  padding-bottom: 10px;
}
.pair-apy {
  color: #ffffff;
  font-family: Inter, sans-serif;
  padding-bottom: 10px;
}
.pair-current-deposits,
.pair-max-capacity {
  float: left;
  color: #ffffff;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 12px;
}
.pair-deposits-val,
.pair-capacity-val {
  float: right;
  color: #ffffff;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 12px;
  font-weight: bold;
}
.filter-item {
  padding-right: 10px;
}
.phone {
  display: inline;
  padding-top: 10px;
}
.svg-icon {
  vertical-align: -8px !important;
}
.front {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #673AB7;
    color: white;
    width: 100%;
    height: 100%;
  }

  .back {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #FFC107;
    color: white;
    width: 100%;
    height: 100%;
  }

    @media only screen and (max-width: 767px) {
        .pairs-container{
            width:320px;
        }
    }

    @media only screen and (min-width: 768px){
        .pairs-container{
            width:630px;
        }
    }

    @media only screen and (min-width: 992px){
        .pairs-container{
            width:1100px;
        }
    }
    @media only screen and (min-width: 1200px){
        .pairs-container{
            width:1100px;
        }
    }
    @media only screen and (min-width: 1920px){
        .pairs-container{
            width:1100px;
        }
    }
</style>
